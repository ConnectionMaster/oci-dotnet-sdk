/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ContainerinstancesService.Models
{
    /// <summary>
    /// Defines the mapping from volume to a mount path in a container.
    /// 
    /// </summary>
    public class CreateVolumeMountDetails 
    {
        
        /// <value>
        /// The volume access path.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MountPath is required.")]
        [JsonProperty(PropertyName = "mountPath")]
        public string MountPath { get; set; }
        
        /// <value>
        /// The name of the volume. Avoid entering confidential information.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VolumeName is required.")]
        [JsonProperty(PropertyName = "volumeName")]
        public string VolumeName { get; set; }
        
        /// <value>
        /// A subpath inside the referenced volume.
        /// </value>
        [JsonProperty(PropertyName = "subPath")]
        public string SubPath { get; set; }
        
        /// <value>
        /// Whether the volume was mounted in read-only mode. By default, the volume is not read-only.
        /// </value>
        [JsonProperty(PropertyName = "isReadOnly")]
        public System.Nullable<bool> IsReadOnly { get; set; }
        
        /// <value>
        /// If there is more than one partition in the volume, reference this number of partitions.
        /// Here is an Example: Number  Start   End     Size    File system  Name                  Flags1      1049kB  106MB   105MB   fat16        EFI System Partition  boot, esp2      106MB   1180MB  1074MB  xfs3      1180MB  50.0GB  48.8GB                                     lvm
        /// </value>
        [JsonProperty(PropertyName = "partition")]
        public System.Nullable<int> Partition { get; set; }
        
    }
}
