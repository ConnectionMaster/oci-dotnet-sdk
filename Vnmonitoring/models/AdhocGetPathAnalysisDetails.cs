/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.VnmonitoringService.Models
{
    /// <summary>
    /// Defines the configuration for getting an ad-hoc path analysis.
    /// </summary>
    public class AdhocGetPathAnalysisDetails : GetPathAnalysisDetails
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the compartment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The IP protocol to used for the path analysis.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Protocol is required.")]
        [JsonProperty(PropertyName = "protocol")]
        public System.Nullable<int> Protocol { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SourceEndpoint is required.")]
        [JsonProperty(PropertyName = "sourceEndpoint")]
        public Endpoint SourceEndpoint { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DestinationEndpoint is required.")]
        [JsonProperty(PropertyName = "destinationEndpoint")]
        public Endpoint DestinationEndpoint { get; set; }
        
        [JsonProperty(PropertyName = "protocolParameters")]
        public ProtocolParameters ProtocolParameters { get; set; }
        
        [JsonProperty(PropertyName = "queryOptions")]
        public QueryOptions QueryOptions { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "ADHOC_QUERY";
    }
}
