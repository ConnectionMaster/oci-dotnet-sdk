/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.VnmonitoringService.Models
{
    /// <summary>
    /// A summary of the IPSec tunnel security association details.
    /// 
    /// </summary>
    public class TunnelSecurityAssociationSummary 
    {
        
        /// <value>
        /// The IP address and mask of the partner subnet used in policy based VPNs or static routes.
        /// </value>
        [JsonProperty(PropertyName = "cpeSubnet")]
        public string CpeSubnet { get; set; }
        
        /// <value>
        /// The IP address and mask of the local subnet used in policy based VPNs or static routes.
        /// </value>
        [JsonProperty(PropertyName = "oracleSubnet")]
        public string OracleSubnet { get; set; }
                ///
        /// <value>
        /// The IPSec tunnel's phase one status.
        /// </value>
        ///
        public enum TunnelSaStatusEnum {
            [EnumMember(Value = "INITIATING")]
            Initiating,
            [EnumMember(Value = "LISTENING")]
            Listening,
            [EnumMember(Value = "UP")]
            Up,
            [EnumMember(Value = "DOWN")]
            Down,
            [EnumMember(Value = "ERROR")]
            Error,
            [EnumMember(Value = "UNKNOWN")]
            Unknown
        };

        /// <value>
        /// The IPSec tunnel's phase one status.
        /// </value>
        [JsonProperty(PropertyName = "tunnelSaStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TunnelSaStatusEnum> TunnelSaStatus { get; set; }
        
        /// <value>
        /// Current state if the IPSec tunnel status is not `UP`, including phase one and phase two details and a possible reason the tunnel is not `UP`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "tunnelSaErrorInfo")]
        public string TunnelSaErrorInfo { get; set; }
        
        /// <value>
        /// Time in the current state, in seconds.
        /// </value>
        [JsonProperty(PropertyName = "time")]
        public string Time { get; set; }
        
    }
}
