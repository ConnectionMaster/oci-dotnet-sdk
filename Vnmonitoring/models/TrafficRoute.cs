/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.VnmonitoringService.Models
{
    /// <summary>
    /// Defines the traffic route taken in the path in `PathAnalysisResult`.
    /// </summary>
    public class TrafficRoute 
    {
                ///
        /// <value>
        /// Reachability status for the given traffic route.
        /// </value>
        ///
        public enum ReachabilityStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "REACHABLE")]
            Reachable,
            [EnumMember(Value = "UNREACHABLE")]
            Unreachable,
            [EnumMember(Value = "INDETERMINATE")]
            Indeterminate
        };

        /// <value>
        /// Reachability status for the given traffic route.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ReachabilityStatus is required.")]
        [JsonProperty(PropertyName = "reachabilityStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ReachabilityStatusEnum> ReachabilityStatus { get; set; }
        
        /// <value>
        /// The ordered sequence of nodes in the given the traffic route forming a path.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Nodes is required.")]
        [JsonProperty(PropertyName = "nodes")]
        public System.Collections.Generic.List<TrafficNode> Nodes { get; set; }
        
        /// <value>
        /// A description of the traffic route analysis. For Example: &quot;Traffic might not reach a destinationdue to the LB backend being unhealthy&quot;.
        /// </value>
        [JsonProperty(PropertyName = "routeAnalysisDescription")]
        public string RouteAnalysisDescription { get; set; }
        
    }
}
