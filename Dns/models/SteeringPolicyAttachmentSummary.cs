/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DnsService.Models
{
    /// <summary>
    /// An attachment between a steering policy and a domain.
    /// </summary>
    public class SteeringPolicyAttachmentSummary 
    {
        
        /// <value>
        /// The OCID of the attached steering policy.
        /// </value>
        [JsonProperty(PropertyName = "steeringPolicyId")]
        public string SteeringPolicyId { get; set; }
        
        /// <value>
        /// The OCID of the attached zone.
        /// </value>
        [JsonProperty(PropertyName = "zoneId")]
        public string ZoneId { get; set; }
        
        /// <value>
        /// The attached domain within the attached zone.
        /// </value>
        [JsonProperty(PropertyName = "domainName")]
        public string DomainName { get; set; }
        
        /// <value>
        /// A user-friendly name for the steering policy attachment.
        /// Does not have to be unique and can be changed.
        /// Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The record types covered by the attachment at the domain. The set of record types is
        /// determined by aggregating the record types from the answers defined in the steering
        /// policy.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "rtypes")]
        public System.Collections.Generic.List<string> Rtypes { get; set; }
        
        /// <value>
        /// The OCID of the compartment containing the steering policy attachment.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The canonical absolute URL of the resource.
        /// </value>
        [JsonProperty(PropertyName = "self")]
        public string Self { get; set; }
        
        /// <value>
        /// The OCID of the resource.
        /// </value>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The date and time the resource was created, expressed in RFC 3339 timestamp format.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:60Z
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
                ///
        /// <value>
        /// The current state of the resource.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "CREATING")]
            Creating,
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "DELETING")]
            Deleting
        };

        /// <value>
        /// The current state of the resource.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
    }
}
