/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DnsService.Models
{
    /// <summary>
    /// A DNS zone.
    /// <br/>
    /// **Warning:** Oracle recommends that you avoid using any confidential information when you supply string values using the API.
    /// 
    /// </summary>
    public class Zone 
    {
        
        /// <value>
        /// The name of the zone.
        /// </value>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
                ///
        /// <value>
        /// The type of the zone. Must be either `PRIMARY` or `SECONDARY`.
        /// 
        /// </value>
        ///
        public enum ZoneTypeEnum {
            [EnumMember(Value = "PRIMARY")]
            Primary,
            [EnumMember(Value = "SECONDARY")]
            Secondary
        };

        /// <value>
        /// The type of the zone. Must be either `PRIMARY` or `SECONDARY`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "zoneType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ZoneTypeEnum> ZoneType { get; set; }
        
        /// <value>
        /// The OCID of the compartment containing the zone.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// 
        /// **Example: ** {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// 
        /// **Example: ** {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// External master servers for the zone. `externalMasters` becomes a
        /// required parameter when the `zoneType` value is `SECONDARY`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "externalMasters")]
        public System.Collections.Generic.List<ExternalMaster> ExternalMasters { get; set; }
        
        /// <value>
        /// The canonical absolute URL of the resource.
        /// </value>
        [JsonProperty(PropertyName = "self")]
        public string Self { get; set; }
        
        /// <value>
        /// The OCID of the zone.
        /// </value>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The date and time the resource was created in \"YYYY-MM-ddThh:mmZ\" format
        /// with a Z offset, as defined by RFC 3339.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:60Z
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// Version is the never-repeating, totally-orderable, version of the
        /// zone, from which the serial field of the zone's SOA record is
        /// derived.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }
        
        /// <value>
        /// The current serial of the zone. As seen in the zone's SOA record.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "serial")]
        public System.Nullable<long> Serial { get; set; }
                ///
        /// <value>
        /// The current state of the zone resource.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "CREATING")]
            Creating,
            [EnumMember(Value = "DELETED")]
            Deleted,
            [EnumMember(Value = "DELETING")]
            Deleting,
            [EnumMember(Value = "FAILED")]
            Failed
        };

        /// <value>
        /// The current state of the zone resource.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The authoritative nameservers for the zone.
        /// </value>
        [JsonProperty(PropertyName = "nameservers")]
        public System.Collections.Generic.List<Nameserver> Nameservers { get; set; }
        
    }
}
