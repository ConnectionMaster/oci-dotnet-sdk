/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DnsService.Models
{
    /// <summary>
    /// A key signing key (KSK) version. The version information contains timing and configuration data corresponding to the KSK that is used to
    /// apply DNSSEC on the zone.
    /// 
    /// </summary>
    public class KskDnssecKeyVersion 
    {
        
        /// <value>
        /// The UUID of the `DnssecKeyVersion`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "uuid")]
        public string Uuid { get; set; }
        
        /// <value>
        /// The signing algorithm used for the key.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "algorithm")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DnssecSigningAlgorithm> Algorithm { get; set; }
        
        /// <value>
        /// The length of the corresponding private key in bytes, expressed as an integer.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "lengthInBytes")]
        public System.Nullable<int> LengthInBytes { get; set; }
        
        /// <value>
        /// The date and time the key version was created, expressed in RFC 3339 timestamp format.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The date and time the key version was, or will be, published, expressed in RFC 3339 timestamp format. This is
        /// when the zone contents will include a DNSKEY record corresponding to the key material.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timePublished")]
        public System.Nullable<System.DateTime> TimePublished { get; set; }
        
        /// <value>
        /// The date and time the key version went, or will go, active, expressed in RFC 3339 timestamp format. This is
        /// when the key material will be used to generate RRSIGs.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timeActivated")]
        public System.Nullable<System.DateTime> TimeActivated { get; set; }
        
        /// <value>
        /// The date and time the key version went, or will go, inactive, expressed in RFC 3339 timestamp format. This
        /// is when the key material will no longer be used to generate RRSIGs. For a key signing key (KSK) `DnssecKeyVersion`, this is
        /// populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timeInactivated")]
        public System.Nullable<System.DateTime> TimeInactivated { get; set; }
        
        /// <value>
        /// The date and time the key version was, or will be, unpublished, expressed in RFC 3339 timestamp format. This
        /// is when the corresponding DNSKEY will be removed from zone contents. For a key signing key (KSK) `DnssecKeyVersion`, this is
        /// populated after `PromoteZoneDnssecKeyVersion` has been called on its successor `DnssecKeyVersion`.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timeUnpublished")]
        public System.Nullable<System.DateTime> TimeUnpublished { get; set; }
        
        /// <value>
        /// The date and time at which the recommended key version publication/activation lifetime ends, expressed in RFC
        /// 3339 timestamp format. This is when the corresponding DNSKEY should no longer exist in zone contents and no
        /// longer be used to generate RRSIGs. For a key sigining key (KSK), if `PromoteZoneDnssecKeyVersion` has not been called on this
        /// `DnssecKeyVersion`'s successor then it will remain active for arbitrarily long past its recommended lifetime.
        /// This prevents service disruption at the potential increased risk of key compromise.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timeExpired")]
        public System.Nullable<System.DateTime> TimeExpired { get; set; }
        
        /// <value>
        /// The date and time the key version was promoted expressed in RFC 3339 timestamp format.
        /// <br/>
        /// **Example: ** 2016-07-22T17:23:59:00Z
        /// </value>
        [JsonProperty(PropertyName = "timePromoted")]
        public System.Nullable<System.DateTime> TimePromoted { get; set; }
        
        /// <value>
        /// When populated, this is the UUID of the `DnssecKeyVersion` that this `DnssecKeyVersion` will replace or has
        /// replaced.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "predecessorDnssecKeyVersionUuid")]
        public string PredecessorDnssecKeyVersionUuid { get; set; }
        
        /// <value>
        /// When populated, this is the UUID of the `DnssecKeyVersion` that will replace, or has replaced, this
        /// `DnssecKeyVersion`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "successorDnssecKeyVersionUuid")]
        public string SuccessorDnssecKeyVersionUuid { get; set; }
        
        /// <value>
        /// The key tag associated with the `DnssecKeyVersion`. This key tag will be present in the RRSIG and DS records
        /// associated with the key material for this `DnssecKeyVersion`. For more information about key tags, see
        /// [RFC 4034](https://tools.ietf.org/html/rfc4034).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "keyTag")]
        public System.Nullable<int> KeyTag { get; set; }
        
        /// <value>
        /// An array of data for DS records corresponding with this key version. An entry will exist for each
        /// supported DS digest algorithm.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dsData")]
        public System.Collections.Generic.List<DnssecKeyVersionDsData> DsData { get; set; }
        
    }
}
