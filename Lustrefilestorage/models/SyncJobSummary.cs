/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LustrefilestorageService.Models
{
    /// <summary>
    /// Summary information associated with sync jobs.
    /// </summary>
    public class SyncJobSummary 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the sync job.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
                ///
        /// <value>
        /// The type of the sync job.
        /// 
        /// </value>
        ///
        public enum JobTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "IMPORT")]
            Import,
            [EnumMember(Value = "EXPORT")]
            Export
        };

        /// <value>
        /// The type of the sync job.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "JobType is required.")]
        [JsonProperty(PropertyName = "jobType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<JobTypeEnum> JobType { get; set; }
        
        /// <value>
        /// The current state of the sync job.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SyncJob.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// A message that describes the current state of the sync job in more detail. For example,
        /// can be used to provide actionable information for a resource in the Failed state.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FreeformTags is required.")]
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DefinedTags is required.")]
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// <br/>
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SystemTags is required.")]
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
        /// <value>
        /// The flag is an identifier to tell whether this specific job run has overwrite enabled.
        /// If `isOverwrite` is false, the file to be imported or exported will be skipped if it already exists.
        /// If `isOverwrite` is true, the file to be imported or exported will be overwritten if it already exists.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsOverwrite is required.")]
        [JsonProperty(PropertyName = "isOverwrite")]
        public System.Nullable<bool> IsOverwrite { get; set; }
        
        /// <value>
        /// Total object count for scanned files for import or export as part of this sync job.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalObjectsScanned is required.")]
        [JsonProperty(PropertyName = "totalObjectsScanned")]
        public System.Nullable<long> TotalObjectsScanned { get; set; }
        
        /// <value>
        /// Count of total files transferred successfully.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ObjectsTransferred is required.")]
        [JsonProperty(PropertyName = "objectsTransferred")]
        public System.Nullable<long> ObjectsTransferred { get; set; }
        
        /// <value>
        /// Bytes transferred during the sync. This value changes while sync is still in progress.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BytesTransferred is required.")]
        [JsonProperty(PropertyName = "bytesTransferred")]
        public System.Nullable<long> BytesTransferred { get; set; }
        
        /// <value>
        /// Count of files or objects that failed to export or import due to errors.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SkippedErrorCount is required.")]
        [JsonProperty(PropertyName = "skippedErrorCount")]
        public System.Nullable<long> SkippedErrorCount { get; set; }
        
        /// <value>
        /// The date and time the job was started, expressed in
        /// [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.
        /// <br/>
        /// Example: 2020-07-25T21:10:29.600Z
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeStarted is required.")]
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }
        
        /// <value>
        /// The date and time the job finished, expressed in
        /// [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.
        /// <br/>
        /// Example: 2024-07-21T20:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeFinished")]
        public System.Nullable<System.DateTime> TimeFinished { get; set; }
        
        /// <value>
        /// The path in the Lustre file system used for this Object Storage link.
        /// <br/>
        /// Example: myFileSystem/mount/myDirectory
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LustreFileSystemPath is required.")]
        [JsonProperty(PropertyName = "lustreFileSystemPath")]
        public string LustreFileSystemPath { get; set; }
        
        /// <value>
        /// The Object Storage namespace and bucket name, including optional object prefix string, to use as the source for imports or destination for exports.
        /// <br/>
        /// Example: objectStorageNamespace:/bucketName/optionalFolder/optionalPrefix
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ObjectStoragePath is required.")]
        [JsonProperty(PropertyName = "objectStoragePath")]
        public string ObjectStoragePath { get; set; }
        
    }
}
