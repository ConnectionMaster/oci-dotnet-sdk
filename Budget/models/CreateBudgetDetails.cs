/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BudgetService.Models
{
    /// <summary>
    /// The create budget details.
    /// <br/>
    /// Clients should use 'targetType' and 'targets' to specify the target type and list of targets on which the budget is applied.
    /// <br/>
    /// For backwards compatibility, 'targetCompartmentId' is still supported for all existing clients.
    /// This is considered deprecated, however, and all clients are upgraded to use 'targetType' and 'targets'.
    /// <br/>
    /// Specifying both 'targetCompartmentId' and 'targets' causes a Bad Request.
    /// 
    /// </summary>
    public class CreateBudgetDetails 
    {
        
        /// <value>
        /// The OCID of the compartment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// This is DEPRECATED. Set the target compartment ID in targets instead.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "targetCompartmentId")]
        public string TargetCompartmentId { get; set; }
        
        /// <value>
        /// The displayName of the budget. Avoid entering confidential information.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The description of the budget.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The amount of the budget expressed as a whole number in the currency of the customer's rate card.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Amount is required.")]
        [JsonProperty(PropertyName = "amount")]
        public System.Nullable<decimal> Amount { get; set; }
        
        /// <value>
        /// The reset period for the budget.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResetPeriod is required.")]
        [JsonProperty(PropertyName = "resetPeriod")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ResetPeriod> ResetPeriod { get; set; }
        
        /// <value>
        /// The number of days offset from the first day of the month, at which the budget processing period starts. In months that have fewer days than this value, processing will begin on the last day of that month. For example, for a value of 12, processing starts every month on the 12th at midnight.
        /// </value>
        [JsonProperty(PropertyName = "budgetProcessingPeriodStartOffset")]
        public System.Nullable<int> BudgetProcessingPeriodStartOffset { get; set; }
        
        /// <value>
        /// The type of the budget processing period. Valid values are INVOICE, MONTH, and SINGLE_USE.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "processingPeriodType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ProcessingPeriodType> ProcessingPeriodType { get; set; }
        
        /// <value>
        /// The date when the one-time budget begins. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
        /// </value>
        [JsonProperty(PropertyName = "startDate")]
        public System.Nullable<System.DateTime> StartDate { get; set; }
        
        /// <value>
        /// The date when the one-time budget concludes. For example, `2023-03-23`. The date-time format conforms to RFC 3339, and will be truncated to the starting point of the date provided after being converted to UTC time.
        /// </value>
        [JsonProperty(PropertyName = "endDate")]
        public System.Nullable<System.DateTime> EndDate { get; set; }
        
        /// <value>
        /// The type of target on which the budget is applied.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "targetType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TargetType> TargetType { get; set; }
        
        /// <value>
        /// The list of targets on which the budget is applied.
        ///   If targetType is \"COMPARTMENT\", the targets contain the list of compartment OCIDs.
        ///   If targetType is \"TAG\", the targets contain the list of cost tracking tag identifiers in the form of \"{tagNamespace}.{tagKey}.{tagValue}\".
        /// Curerntly, the array should contain exactly one item.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "targets")]
        public System.Collections.Generic.List<string> Targets { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
