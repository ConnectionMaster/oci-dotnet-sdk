/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MarketplacepublisherService.Models
{
    /// <summary>
    /// Related document attachment for the listing revision.
    /// </summary>
    public class RelatedDocumentAttachment : ListingRevisionAttachment
    {
                ///
        /// <value>
        /// Possible lifecycle states.
        /// </value>
        ///
        public enum DocumentCategoryEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "CASE_STUDIES")]
            CaseStudies,
            [EnumMember(Value = "CUSTOMIZATION_GUIDES")]
            CustomizationGuides,
            [EnumMember(Value = "DATA_SHEETS")]
            DataSheets,
            [EnumMember(Value = "PRESS_RELEASE")]
            PressRelease,
            [EnumMember(Value = "PRODUCT_DOCUMENTATION")]
            ProductDocumentation,
            [EnumMember(Value = "USER_GUIDES")]
            UserGuides,
            [EnumMember(Value = "WEBINAR")]
            Webinar
        };

        /// <value>
        /// Possible lifecycle states.
        /// </value>
        [JsonProperty(PropertyName = "documentCategory")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DocumentCategoryEnum> DocumentCategory { get; set; }
        
        /// <value>
        /// URL of the uploaded document.
        /// </value>
        [JsonProperty(PropertyName = "contentUrl")]
        public string ContentUrl { get; set; }
        
        /// <value>
        /// The MIME type of the uploaded data.
        /// </value>
        [JsonProperty(PropertyName = "mimeType")]
        public string MimeType { get; set; }
        
        [JsonProperty(PropertyName = "attachmentType")]
        private readonly string attachmentType = "RELATED_DOCUMENT";
    }
}
