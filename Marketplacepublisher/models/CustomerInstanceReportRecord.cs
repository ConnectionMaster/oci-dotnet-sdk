/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MarketplacepublisherService.Models
{
    /// <summary>
    /// The model for instance report item
    /// </summary>
    public class CustomerInstanceReportRecord 
    {
        
        /// <value>
        /// publisher OCID
        /// </value>
        [JsonProperty(PropertyName = "publisherId")]
        public string PublisherId { get; set; }
        
        /// <value>
        /// Name of the listing
        /// </value>
        [JsonProperty(PropertyName = "listingName")]
        public string ListingName { get; set; }
        
        /// <value>
        /// Listing ID
        /// </value>
        [JsonProperty(PropertyName = "listingId")]
        public string ListingId { get; set; }
        
        /// <value>
        /// Listing version ID
        /// </value>
        [JsonProperty(PropertyName = "listingVersionId")]
        public string ListingVersionId { get; set; }
        
        /// <value>
        /// The version for the package
        /// </value>
        [JsonProperty(PropertyName = "packageVersion")]
        public string PackageVersion { get; set; }
        
        /// <value>
        /// Package version ID
        /// </value>
        [JsonProperty(PropertyName = "packageVersionId")]
        public string PackageVersionId { get; set; }
        
        /// <value>
        /// Instance status
        /// </value>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }
        
        /// <value>
        /// Instance OCID
        /// </value>
        [JsonProperty(PropertyName = "instanceId")]
        public string InstanceId { get; set; }
        
        /// <value>
        /// The date and time that instance was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)
        /// timestamp format.
        /// Example: 2016-08-25T21:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeInstanceCreation")]
        public System.Nullable<System.DateTime> TimeInstanceCreation { get; set; }
        
        /// <value>
        /// The date and time that instance was terminated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)
        /// timestamp format.
        /// Example: 2016-08-25T21:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeInstanceTermination")]
        public System.Nullable<System.DateTime> TimeInstanceTermination { get; set; }
        
        /// <value>
        /// The region of the instance
        /// </value>
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }
        
        /// <value>
        /// The realm of the instance
        /// </value>
        [JsonProperty(PropertyName = "realm")]
        public string Realm { get; set; }
        
        /// <value>
        /// The shape of the instance
        /// </value>
        [JsonProperty(PropertyName = "shape")]
        public string Shape { get; set; }
        
        /// <value>
        /// The tenancy of the instance
        /// </value>
        [JsonProperty(PropertyName = "ociTenancy")]
        public string OciTenancy { get; set; }
        
        /// <value>
        /// The name of the tenant adminstrator
        /// </value>
        [JsonProperty(PropertyName = "tenantAdminName")]
        public string TenantAdminName { get; set; }
        
        /// <value>
        /// The email of the tenant adminstrator
        /// </value>
        [JsonProperty(PropertyName = "tenantAdminEmail")]
        public string TenantAdminEmail { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
