/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MarketplacepublisherService.Models
{
    /// <summary>
    /// The model for disbursement report item
    /// </summary>
    public class DisbursementReportRecord 
    {
        
        /// <value>
        /// Enterprise Quarter
        /// </value>
        [JsonProperty(PropertyName = "enterpriseQuarter")]
        public string EnterpriseQuarter { get; set; }
        
        /// <value>
        /// Enterprise Period
        /// </value>
        [JsonProperty(PropertyName = "enterprisePeriod")]
        public string EnterprisePeriod { get; set; }
        
        /// <value>
        /// Listing Name
        /// </value>
        [JsonProperty(PropertyName = "listingName")]
        public string ListingName { get; set; }
        
        /// <value>
        /// Listing ID
        /// </value>
        [JsonProperty(PropertyName = "listingId")]
        public string ListingId { get; set; }
        
        /// <value>
        /// Private Offer ID
        /// </value>
        [JsonProperty(PropertyName = "privateOfferId")]
        public string PrivateOfferId { get; set; }
        
        /// <value>
        /// Private Offer Name
        /// </value>
        [JsonProperty(PropertyName = "privateOfferName")]
        public string PrivateOfferName { get; set; }
        
        /// <value>
        /// SKU
        /// </value>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }
        
        /// <value>
        /// Transaction Reference ID
        /// </value>
        [JsonProperty(PropertyName = "transactionReferenceId")]
        public string TransactionReferenceId { get; set; }
        
        /// <value>
        /// Customer ID
        /// </value>
        [JsonProperty(PropertyName = "customerId")]
        public string CustomerId { get; set; }
        
        /// <value>
        /// Customer Name
        /// </value>
        [JsonProperty(PropertyName = "customerName")]
        public string CustomerName { get; set; }
        
        /// <value>
        /// Customer Domain
        /// </value>
        [JsonProperty(PropertyName = "customerDomain")]
        public string CustomerDomain { get; set; }
        
        /// <value>
        /// End User Customer ID
        /// </value>
        [JsonProperty(PropertyName = "endUserCustomerId")]
        public string EndUserCustomerId { get; set; }
        
        /// <value>
        /// EEnd User Customer Name
        /// </value>
        [JsonProperty(PropertyName = "endUserCustomerName")]
        public string EndUserCustomerName { get; set; }
        
        /// <value>
        /// Country
        /// </value>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }
        
        /// <value>
        /// State
        /// </value>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }
        
        /// <value>
        /// City
        /// </value>
        [JsonProperty(PropertyName = "city")]
        public string City { get; set; }
        
        /// <value>
        /// Zip
        /// </value>
        [JsonProperty(PropertyName = "zip")]
        public string Zip { get; set; }
        
        /// <value>
        /// Currency Code
        /// </value>
        [JsonProperty(PropertyName = "currencyCode")]
        public string CurrencyCode { get; set; }
        
        /// <value>
        /// Usage Quantity
        /// </value>
        [JsonProperty(PropertyName = "usageQuantity")]
        public string UsageQuantity { get; set; }
        
        /// <value>
        /// Used Amount (LC)
        /// </value>
        [JsonProperty(PropertyName = "usedAmountLc")]
        public string UsedAmountLc { get; set; }
        
        /// <value>
        /// LC Amount for Disbursement Calculations
        /// </value>
        [JsonProperty(PropertyName = "lcAmountForDisbursementCalculations")]
        public string LcAmountForDisbursementCalculations { get; set; }
        
        /// <value>
        /// LC Base Amount for Tax Calculations
        /// </value>
        [JsonProperty(PropertyName = "lcBaseAmountForTaxCalculations")]
        public string LcBaseAmountForTaxCalculations { get; set; }
        
        /// <value>
        /// Withholding Tax Rate
        /// </value>
        [JsonProperty(PropertyName = "withholdingTaxRate")]
        public string WithholdingTaxRate { get; set; }
        
        /// <value>
        /// Withholding Tax Amount
        /// </value>
        [JsonProperty(PropertyName = "withholdingTaxAmount")]
        public string WithholdingTaxAmount { get; set; }
        
        /// <value>
        /// Transfer Tax Base Amount
        /// </value>
        [JsonProperty(PropertyName = "transferTaxBaseAmount")]
        public string TransferTaxBaseAmount { get; set; }
        
        /// <value>
        /// Transfer Tax Rate
        /// </value>
        [JsonProperty(PropertyName = "transferTaxRate")]
        public string TransferTaxRate { get; set; }
        
        /// <value>
        /// Transfer Tax Amount
        /// </value>
        [JsonProperty(PropertyName = "transferTaxAmount")]
        public string TransferTaxAmount { get; set; }
        
        /// <value>
        /// LC Amount for Disbursement after Tax
        /// </value>
        [JsonProperty(PropertyName = "lcAmountForDisbursementAfterTax")]
        public string LcAmountForDisbursementAfterTax { get; set; }
        
        /// <value>
        /// LC Partner Payment
        /// </value>
        [JsonProperty(PropertyName = "lcPartnerPayment")]
        public string LcPartnerPayment { get; set; }
        
        /// <value>
        /// FX Rate (LC to USD)
        /// </value>
        [JsonProperty(PropertyName = "fxRateLcToUsd")]
        public string FxRateLcToUsd { get; set; }
        
        /// <value>
        /// Disbursement Amount (USD)
        /// </value>
        [JsonProperty(PropertyName = "disbursementAmountUsd")]
        public string DisbursementAmountUsd { get; set; }
        
        /// <value>
        /// Partner Name
        /// </value>
        [JsonProperty(PropertyName = "partnerName")]
        public string PartnerName { get; set; }
        
        /// <value>
        /// Partner OCID
        /// </value>
        [JsonProperty(PropertyName = "partnerId")]
        public string PartnerId { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
