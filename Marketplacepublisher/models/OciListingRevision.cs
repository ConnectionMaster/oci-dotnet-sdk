/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MarketplacepublisherService.Models
{
    /// <summary>
    /// Listing revision details for listings
    /// </summary>
    public class OciListingRevision : ListingRevision
    {
        
        [JsonProperty(PropertyName = "versionDetails")]
        public VersionDetails VersionDetails { get; set; }
        
        /// <value>
        /// System requirements for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "systemRequirements")]
        public string SystemRequirements { get; set; }
                ///
        /// <value>
        /// The pricing model for the listing revision.
        /// </value>
        ///
        public enum PricingTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "FREE")]
            Free,
            [EnumMember(Value = "BYOL")]
            Byol,
            [EnumMember(Value = "PAYGO")]
            Paygo
        };

        /// <value>
        /// The pricing model for the listing revision.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PricingType is required.")]
        [JsonProperty(PropertyName = "pricingType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PricingTypeEnum> PricingType { get; set; }
        
        /// <value>
        /// List of products subscribed by listing.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Products is required.")]
        [JsonProperty(PropertyName = "products")]
        public System.Collections.Generic.List<ListingProduct> Products { get; set; }
        
        /// <value>
        /// List of Pricing Plans provided by publisher.
        /// </value>
        [JsonProperty(PropertyName = "pricingPlans")]
        public System.Collections.Generic.List<PricingPlan> PricingPlans { get; set; }
        
        /// <value>
        /// Listing availability and Pricing Policy statement.
        /// </value>
        [JsonProperty(PropertyName = "availabilityAndPricingPolicy")]
        public string AvailabilityAndPricingPolicy { get; set; }
        
        /// <value>
        /// Allowed tenancies provided when a listing revision is published as private.
        /// </value>
        [JsonProperty(PropertyName = "allowedTenancies")]
        public System.Collections.Generic.List<string> AllowedTenancies { get; set; }
        
        /// <value>
        /// Custom link to the listing
        /// </value>
        [JsonProperty(PropertyName = "vanityUrl")]
        public string VanityUrl { get; set; }
        
        /// <value>
        /// OCIDs of service listings attached to lead gen listing
        /// </value>
        [JsonProperty(PropertyName = "recommendedServiceProviderListingIds")]
        public System.Collections.Generic.List<string> RecommendedServiceProviderListingIds { get; set; }
        
        /// <value>
        /// Identifies whether publisher allows internal tenancy launches for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "areInternalTenancyLaunchAllowed")]
        public System.Nullable<bool> AreInternalTenancyLaunchAllowed { get; set; }
        
        /// <value>
        /// Is this listing rover exportable
        /// </value>
        [JsonProperty(PropertyName = "isRoverExportable")]
        public System.Nullable<bool> IsRoverExportable { get; set; }
        
        [JsonProperty(PropertyName = "listingType")]
        private readonly string listingType = "OCI_APPLICATION";
    }
}
