/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MarketplacepublisherService.Models
{
    /// <summary>
    /// The model for an Oracle Cloud Infrastructure Marketplace Publisher listing revision.
    /// </summary>
    public class ListingRevision 
    {
        
        /// <value>
        /// Unique OCID identifier for the listing revision in Marketplace Publisher.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The unique identifier for the listing this revision belongs to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ListingId is required.")]
        [JsonProperty(PropertyName = "listingId")]
        public string ListingId { get; set; }
        
        /// <value>
        /// The unique identifier for the compartment.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The name for the listing revision.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The revision number for the listing revision. This is an internal attribute
        /// </value>
        [JsonProperty(PropertyName = "revisionNumber")]
        public string RevisionNumber { get; set; }
        
        [JsonProperty(PropertyName = "versionDetails")]
        public VersionDetails VersionDetails { get; set; }
        
        /// <value>
        /// Single line introduction for the listing revision.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Headline is required.")]
        [JsonProperty(PropertyName = "headline")]
        public string Headline { get; set; }
        
        /// <value>
        /// The tagline of the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "tagline")]
        public string Tagline { get; set; }
        
        /// <value>
        /// Keywords associated with the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "keywords")]
        public string Keywords { get; set; }
        
        /// <value>
        /// A short description for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "shortDescription")]
        public string ShortDescription { get; set; }
        
        /// <value>
        /// Usage information for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "usageInformation")]
        public string UsageInformation { get; set; }
        
        /// <value>
        /// A long description for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "longDescription")]
        public string LongDescription { get; set; }
        
        /// <value>
        /// System requirements for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "systemRequirements")]
        public string SystemRequirements { get; set; }
        
        /// <value>
        /// The time the listing revision was created. An RFC3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time the listing revision was updated. An RFC3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeUpdated is required.")]
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The categories for the listing revsion.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Categories is required.")]
        [JsonProperty(PropertyName = "categories")]
        public System.Collections.Generic.List<string> Categories { get; set; }
        
        /// <value>
        /// The markets supported by the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "markets")]
        public System.Collections.Generic.List<string> Markets { get; set; }
        
        [JsonProperty(PropertyName = "contentLanguage")]
        public LanguageItem ContentLanguage { get; set; }
        
        /// <value>
        /// Languages supported by the publisher for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "supportedlanguages")]
        public System.Collections.Generic.List<LanguageItem> Supportedlanguages { get; set; }
        
        /// <value>
        /// Contact information to use to get support from the publisher for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "supportContacts")]
        public System.Collections.Generic.List<SupportContact> SupportContacts { get; set; }
        
        /// <value>
        /// Links to support resources for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "supportLinks")]
        public System.Collections.Generic.List<NamedLink> SupportLinks { get; set; }
        
        [JsonProperty(PropertyName = "icon")]
        public ListingRevisionIconAttachment Icon { get; set; }
                ///
        /// <value>
        /// The current status for the Listing revision.
        /// </value>
        ///
        public enum StatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "NEW")]
            New,
            [EnumMember(Value = "PENDING_REVIEW")]
            PendingReview,
            [EnumMember(Value = "REVIEW_IN_PROGRESS")]
            ReviewInProgress,
            [EnumMember(Value = "REJECTED")]
            Rejected,
            [EnumMember(Value = "APPROVED")]
            Approved,
            [EnumMember(Value = "PUBLISH_IN_PROGRESS")]
            PublishInProgress,
            [EnumMember(Value = "PUBLISH_FAILED")]
            PublishFailed,
            [EnumMember(Value = "PUBLISHED")]
            Published,
            [EnumMember(Value = "PUBLISH_AS_PRIVATE_FAILED")]
            PublishAsPrivateFailed,
            [EnumMember(Value = "PUBLISHED_AS_PRIVATE")]
            PublishedAsPrivate,
            [EnumMember(Value = "PUBLISH_AS_PRIVATE_IN_PROGRESS")]
            PublishAsPrivateInProgress,
            [EnumMember(Value = "UNPUBLISH_IN_PROGRESS")]
            UnpublishInProgress,
            [EnumMember(Value = "UNPUBLISHED")]
            Unpublished
        };

        /// <value>
        /// The current status for the Listing revision.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
        
        /// <value>
        /// Status notes for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "statusNotes")]
        public string StatusNotes { get; set; }
                ///
        /// <value>
        /// The current state of the listing revision.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "CREATING")]
            Creating,
            [EnumMember(Value = "UPDATING")]
            Updating,
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "DELETING")]
            Deleting,
            [EnumMember(Value = "DELETED")]
            Deleted,
            [EnumMember(Value = "FAILED")]
            Failed
        };

        /// <value>
        /// The current state of the listing revision.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The listing's package type. Populated from the listing.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PackageType is required.")]
        [JsonProperty(PropertyName = "packageType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PackageType> PackageType { get; set; }
                ///
        /// <value>
        /// The pricing model for the listing revision.
        /// </value>
        ///
        public enum PricingTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "FREE")]
            Free,
            [EnumMember(Value = "BYOL")]
            Byol,
            [EnumMember(Value = "PAYGO")]
            Paygo
        };

        /// <value>
        /// The pricing model for the listing revision.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PricingType is required.")]
        [JsonProperty(PropertyName = "pricingType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PricingTypeEnum> PricingType { get; set; }
        
        /// <value>
        /// Allowed tenancies provided when a listing revision is published as private.
        /// </value>
        [JsonProperty(PropertyName = "allowedTenancies")]
        public System.Collections.Generic.List<string> AllowedTenancies { get; set; }
        
        /// <value>
        /// Identifies whether publisher allows internal tenancy launches for the listing revision.
        /// </value>
        [JsonProperty(PropertyName = "areInternalTenancyLaunchAllowed")]
        public System.Nullable<bool> AreInternalTenancyLaunchAllowed { get; set; }
        
        /// <value>
        /// Additional metadata key/value pairs for the listing revision summary.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "extendedMetadata")]
        public System.Collections.Generic.Dictionary<string, string> ExtendedMetadata { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
