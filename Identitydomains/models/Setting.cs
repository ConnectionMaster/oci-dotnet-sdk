/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// Settings schema
    /// </summary>
    public class Setting 
    {
        
        /// <value>
        /// Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider's entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: always
        ///  - type: string
        ///  - uniqueness: global
        /// </value>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// Unique OCI identifier for the SCIM Resource.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: true
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: global
        /// </value>
        [JsonProperty(PropertyName = "ocid")]
        public string Ocid { get; set; }
        
        /// <value>
        /// REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \\\"enterprise\\\" extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Schemas is required.")]
        [JsonProperty(PropertyName = "schemas")]
        public System.Collections.Generic.List<string> Schemas { get; set; }
        
        [JsonProperty(PropertyName = "meta")]
        public Meta Meta { get; set; }
        
        [JsonProperty(PropertyName = "idcsCreatedBy")]
        public IdcsCreatedBy IdcsCreatedBy { get; set; }
        
        [JsonProperty(PropertyName = "idcsLastModifiedBy")]
        public IdcsLastModifiedBy IdcsLastModifiedBy { get; set; }
        
        /// <value>
        /// Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "idcsPreventedOperations", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<IdcsPreventedOperations> IdcsPreventedOperations { get; set; }
        
        /// <value>
        /// A list of tags on this resource.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [key, value]
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.List<Tags> Tags { get; set; }
        
        /// <value>
        /// A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "deleteInProgress")]
        public System.Nullable<bool> DeleteInProgress { get; set; }
        
        /// <value>
        /// The release number when the resource was upgraded.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "idcsLastUpgradedInRelease")]
        public string IdcsLastUpgradedInRelease { get; set; }
        
        /// <value>
        /// OCI Domain Id (ocid) in which the resource lives.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "domainOcid")]
        public string DomainOcid { get; set; }
        
        /// <value>
        /// OCI Compartment Id (ocid) in which the resource lives.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "compartmentOcid")]
        public string CompartmentOcid { get; set; }
        
        /// <value>
        /// OCI Tenant Id (ocid) in which the resource lives.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "tenancyOcid")]
        public string TenancyOcid { get; set; }
        
        /// <value>
        /// An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer's tenant.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "externalId")]
        public string ExternalId { get; set; }
        
        /// <value>
        /// Contact emails used to notify tenants. Can be one or more user or group alias emails.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "contactEmails")]
        public System.Collections.Generic.List<string> ContactEmails { get; set; }
        
        /// <value>
        /// Indicates if the branding is default or custom
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        /// </value>
        [JsonProperty(PropertyName = "customBranding")]
        public System.Nullable<bool> CustomBranding { get; set; }
        
        /// <value>
        /// Preferred written or spoken language used for localized user interfaces
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCanonicalValueSourceFilter: attrName eq \"languages\" and attrValues.value eq \"$(preferredLanguage)\"
        ///  - idcsCanonicalValueSourceResourceType: AllowedValue
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "preferredLanguage")]
        public string PreferredLanguage { get; set; }
        
        /// <value>
        /// User's timezone
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCanonicalValueSourceFilter: attrName eq \"timezones\" and attrValues.value eq \"$(timezone)\"
        ///  - idcsCanonicalValueSourceResourceType: AllowedValue
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "timezone")]
        public string Timezone { get; set; }
        
        /// <value>
        /// Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
        /// <br/>
        /// **Added In:** 2011192329
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "diagnosticRecordForSearchIdentifiesReturnedResources")]
        public System.Nullable<bool> DiagnosticRecordForSearchIdentifiesReturnedResources { get; set; }
        
        /// <value>
        /// Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "reAuthWhenChangingMyAuthenticationFactors")]
        public System.Nullable<bool> ReAuthWhenChangingMyAuthenticationFactors { get; set; }
                ///
        ///
        public enum ReAuthFactorEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "password")]
            Password
        };

        /// <value>
        /// If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \\\"password\\\".
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        /// </value>
        [JsonProperty(PropertyName = "reAuthFactor", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<ReAuthFactorEnum> ReAuthFactor { get; set; }
        
        /// <value>
        /// Default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCanonicalValueSourceFilter: attrName eq \"locales\" and attrValues.value eq \"$(locale)\"
        ///  - idcsCanonicalValueSourceResourceType: AllowedValue
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }
                ///
        /// <value>
        /// This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        /// </value>
        ///
        public enum CsrAccessEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "readOnly")]
            ReadOnly,
            [EnumMember(Value = "readWrite")]
            ReadWrite,
            [EnumMember(Value = "none")]
            None
        };

        /// <value>
        /// This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of 'none' means CSR cannot login to the services.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CsrAccess is required.")]
        [JsonProperty(PropertyName = "csrAccess")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CsrAccessEnum> CsrAccess { get; set; }
        
        /// <value>
        /// Indicates if access on SigningCert is allowed to public or not
        /// <br/>
        /// **Added In:** 17.3.4
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        /// </value>
        [JsonProperty(PropertyName = "signingCertPublicAccess")]
        public System.Nullable<bool> SigningCertPublicAccess { get; set; }
        
        /// <value>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        /// - caseExact: false
        /// - multiValued: false
        /// - mutability: readWrite
        /// - required: false
        /// - returned: default
        /// - type: string
        /// - uniqueness: none
        /// Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false. 
        /// </value>
        [JsonProperty(PropertyName = "subMappingAttr")]
        public string SubMappingAttr { get; set; }
        
        /// <value>
        /// Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the 'defaultTrustScope' attribute here in Settings, as well as any App-specific 'trustScope' attribute, to force in effect 'trustScope=Account' for every App in this customer tenancy.
        /// <br/>
        /// **Added In:** 18.1.6
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        /// </value>
        [JsonProperty(PropertyName = "accountAlwaysTrustScope")]
        public System.Nullable<bool> AccountAlwaysTrustScope { get; set; }
                ///
        /// <value>
        /// **Deprecated Since: 18.3.6**
        /// <br/>
        /// **SCIM++ Properties:**
        /// - multiValued: false
        /// - mutability: readWrite
        /// - required: false
        /// - returned: default
        /// - type: string
        /// Indicates the default trust scope for all apps 
        /// </value>
        ///
        public enum DefaultTrustScopeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "Explicit")]
            Explicit,
            [EnumMember(Value = "Account")]
            Account,
            [EnumMember(Value = "Tags")]
            Tags
        };

        /// <value>
        /// **Deprecated Since: 18.3.6**
        /// <br/>
        /// **SCIM++ Properties:**
        /// - multiValued: false
        /// - mutability: readWrite
        /// - required: false
        /// - returned: default
        /// - type: string
        /// Indicates the default trust scope for all apps 
        /// </value>
        [JsonProperty(PropertyName = "defaultTrustScope")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultTrustScopeEnum> DefaultTrustScope { get; set; }
        
        /// <value>
        /// Tenant issuer.
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "issuer")]
        public string Issuer { get; set; }
        
        /// <value>
        /// Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "prevIssuer")]
        public string PrevIssuer { get; set; }
        
        /// <value>
        /// The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "diagnosticLevel")]
        public System.Nullable<int> DiagnosticLevel { get; set; }
        
        /// <value>
        /// The end time up to which diagnostic recording is switched on
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: dateTime
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "diagnosticTracingUpto")]
        public string DiagnosticTracingUpto { get; set; }
        
        /// <value>
        /// One or more email domains allowed in a user's email field. If unassigned, any domain is allowed.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "allowedDomains")]
        public System.Collections.Generic.List<string> AllowedDomains { get; set; }
        
        /// <value>
        /// Indicates if Terms of Use is enabled in UI
        /// <br/>
        /// **Added In:** 18.2.4
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "enableTermsOfUse")]
        public System.Nullable<bool> EnableTermsOfUse { get; set; }
        
        /// <value>
        /// Terms of Use URL
        /// <br/>
        /// **Added In:** 18.2.4
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "termsOfUseUrl")]
        public string TermsOfUseUrl { get; set; }
        
        /// <value>
        /// Privacy Policy URL
        /// <br/>
        /// **Added In:** 18.2.4
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "privacyPolicyUrl")]
        public string PrivacyPolicyUrl { get; set; }
        
        /// <value>
        /// Database Migration Status
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: true
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "migrationStatus")]
        public string MigrationStatus { get; set; }
        
        /// <value>
        /// On-Premises provisioning feature toggle.
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "onPremisesProvisioning")]
        public System.Nullable<bool> OnPremisesProvisioning { get; set; }
        
        /// <value>
        /// If specified, indicates the set of Urls which can be returned to after successful forgot password flow
        /// <br/>
        /// **Added In:** 19.3.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - type: string
        ///  - multiValued: true
        ///  - required: false
        ///  - mutability: readWrite
        ///  - returned: default
        ///  - uniqueness: none
        ///  - caseExact: false
        /// </value>
        [JsonProperty(PropertyName = "allowedForgotPasswordFlowReturnUrls")]
        public System.Collections.Generic.List<string> AllowedForgotPasswordFlowReturnUrls { get; set; }
        
        /// <value>
        /// If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \\\"notificationRedirectUrl\\\" in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
        /// <br/>
        /// **Added In:** 2009041201
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - type: string
        ///  - multiValued: true
        ///  - required: false
        ///  - mutability: readWrite
        ///  - returned: default
        ///  - uniqueness: none
        ///  - caseExact: false
        /// </value>
        [JsonProperty(PropertyName = "allowedNotificationRedirectUrls")]
        public System.Collections.Generic.List<string> AllowedNotificationRedirectUrls { get; set; }
        
        /// <value>
        /// Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        /// </value>
        [JsonProperty(PropertyName = "auditEventRetentionPeriod")]
        public System.Nullable<int> AuditEventRetentionPeriod { get; set; }
        
        /// <value>
        /// Indicates if 'hosted' option was selected
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "isHostedPage")]
        public System.Nullable<bool> IsHostedPage { get; set; }
        
        /// <value>
        /// Storage URL location where the sanitized custom html is located
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "customHtmlLocation")]
        public string CustomHtmlLocation { get; set; }
        
        /// <value>
        /// Storage URL location where the sanitized custom css is located
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "customCssLocation")]
        public string CustomCssLocation { get; set; }
        
        /// <value>
        /// Custom translations (JSON String)
        /// <br/>
        /// **Added In:** 20.1.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "customTranslation")]
        public string CustomTranslation { get; set; }
        
        /// <value>
        /// The attribute to store the cloud account name
        /// <br/>
        /// **Deprecated Since: 2011192329**
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "cloudAccountName")]
        public string CloudAccountName { get; set; }
        
        /// <value>
        /// CloudAccountMigration: Enable Custom SIM Migrator Url.
        /// <br/>
        /// **Added In:** 2012271618
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "cloudMigrationUrlEnabled")]
        public System.Nullable<bool> CloudMigrationUrlEnabled { get; set; }
        
        /// <value>
        /// If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
        /// <br/>
        /// **Added In:** 2012271618
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - type: string
        ///  - multiValued: false
        ///  - required: false
        ///  - mutability: readWrite
        ///  - returned: default
        ///  - uniqueness: none
        ///  - caseExact: false
        /// </value>
        [JsonProperty(PropertyName = "cloudMigrationCustomUrl")]
        public string CloudMigrationCustomUrl { get; set; }
        
        /// <value>
        /// By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
        /// <br/>
        /// **Added In:** 2108190438
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        /// </value>
        [JsonProperty(PropertyName = "serviceAdminCannotListOtherUsers")]
        public System.Nullable<bool> ServiceAdminCannotListOtherUsers { get; set; }
        
        /// <value>
        /// Limit the maximum return of members for an AppRole
        /// <br/>
        /// **Added In:** 2111112015
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsMinValue: 0
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "maxNoOfAppRoleMembersToReturn")]
        public System.Nullable<int> MaxNoOfAppRoleMembersToReturn { get; set; }
        
        /// <value>
        /// Limit the maximum return of CMVA for an App
        /// <br/>
        /// **Added In:** 2111112015
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsMinValue: 0
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "maxNoOfAppCMVAToReturn")]
        public System.Nullable<int> MaxNoOfAppCMVAToReturn { get; set; }
        
        /// <value>
        /// Maximum duration for IAM User Principal Session Token expiry
        /// <br/>
        /// **Added In:** 2307071836
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "iamUpstSessionExpiry")]
        public System.Nullable<int> IamUpstSessionExpiry { get; set; }
        
        [JsonProperty(PropertyName = "cloudGateCorsSettings")]
        public SettingsCloudGateCorsSettings CloudGateCorsSettings { get; set; }
        
        [JsonProperty(PropertyName = "certificateValidation")]
        public SettingsCertificateValidation CertificateValidation { get; set; }
        
        /// <value>
        /// Custom claims associated with the specific tenant
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [name]
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "tenantCustomClaims")]
        public System.Collections.Generic.List<SettingsTenantCustomClaims> TenantCustomClaims { get; set; }
        
        /// <value>
        /// Purge Configs for different Resource Types
        /// <br/>
        /// **Deprecated Since: 19.1.6**
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [resourceName]
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "purgeConfigs")]
        public System.Collections.Generic.List<SettingsPurgeConfigs> PurgeConfigs { get; set; }
        
        /// <value>
        /// Default name of the Company in different locales
        /// <br/>
        /// **Added In:** 18.2.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [locale]
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "defaultCompanyNames")]
        public System.Collections.Generic.List<SettingsDefaultCompanyNames> DefaultCompanyNames { get; set; }
        
        /// <value>
        /// Default Login text in different locales
        /// <br/>
        /// **Added In:** 18.2.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [locale]
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "defaultLoginTexts")]
        public System.Collections.Generic.List<SettingsDefaultLoginTexts> DefaultLoginTexts { get; set; }
        
        /// <value>
        /// References to various images
        /// <br/>
        /// **Added In:** 18.2.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [type]
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "defaultImages")]
        public System.Collections.Generic.List<SettingsDefaultImages> DefaultImages { get; set; }
        
        /// <value>
        /// Name of the company in different locales
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [locale]
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "companyNames")]
        public System.Collections.Generic.List<SettingsCompanyNames> CompanyNames { get; set; }
        
        /// <value>
        /// Login text in different locales
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [locale]
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "loginTexts")]
        public System.Collections.Generic.List<SettingsLoginTexts> LoginTexts { get; set; }
        
        /// <value>
        /// References to various images
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [type]
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        /// </value>
        [JsonProperty(PropertyName = "images")]
        public System.Collections.Generic.List<SettingsImages> Images { get; set; }
        
    }
}
