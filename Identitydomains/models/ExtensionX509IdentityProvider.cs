/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// X509 Identity Provider Extension Schema
    /// </summary>
    public class ExtensionX509IdentityProvider 
    {
        
        /// <value>
        /// X509 Certificate Matching Attribute
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CertMatchAttribute is required.")]
        [JsonProperty(PropertyName = "certMatchAttribute")]
        public string CertMatchAttribute { get; set; }
        
        /// <value>
        /// This property specifies the userstore attribute value that must match the incoming certificate attribute.
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UserMatchAttribute is required.")]
        [JsonProperty(PropertyName = "userMatchAttribute")]
        public string UserMatchAttribute { get; set; }
        
        /// <value>
        /// Check for specific conditions of other certificate attributes
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "otherCertMatchAttribute")]
        public string OtherCertMatchAttribute { get; set; }
        
        /// <value>
        /// Certificate alias list to create a chain for the incoming client certificate
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SigningCertificateChain is required.")]
        [JsonProperty(PropertyName = "signingCertificateChain")]
        public System.Collections.Generic.List<string> SigningCertificateChain { get; set; }
        
        /// <value>
        /// Set to true to enable OCSP Validation
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspEnabled")]
        public System.Nullable<bool> OcspEnabled { get; set; }
        
        /// <value>
        /// This property specifies the OCSP Server alias name
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspServerName")]
        public string OcspServerName { get; set; }
        
        /// <value>
        /// This property specifies OCSP Responder URL.
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspResponderURL")]
        public string OcspResponderURL { get; set; }
        
        /// <value>
        /// Allow access if OCSP response is UNKNOWN or OCSP Responder does not respond within the timeout duration
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspAllowUnknownResponseStatus")]
        public System.Nullable<bool> OcspAllowUnknownResponseStatus { get; set; }
        
        /// <value>
        /// Revalidate OCSP status for user after X hours
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsMaxValue: 24
        ///  - idcsMinValue: 0
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspRevalidateTime")]
        public System.Nullable<int> OcspRevalidateTime { get; set; }
        
        /// <value>
        /// Describes if the OCSP response is signed
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspEnableSignedResponse")]
        public System.Nullable<bool> OcspEnableSignedResponse { get; set; }
        
        /// <value>
        /// OCSP Trusted Certificate Chain
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ocspTrustCertChain")]
        public System.Collections.Generic.List<string> OcspTrustCertChain { get; set; }
        
        /// <value>
        /// Set to true to enable CRL Validation
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "crlEnabled")]
        public System.Nullable<bool> CrlEnabled { get; set; }
        
        /// <value>
        /// Fallback on CRL Validation if OCSP fails.
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "crlCheckOnOCSPFailureEnabled")]
        public System.Nullable<bool> CrlCheckOnOCSPFailureEnabled { get; set; }
        
        /// <value>
        /// CRL Location URL
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "crlLocation")]
        public string CrlLocation { get; set; }
        
        /// <value>
        /// Fetch the CRL contents every X minutes
        /// <br/>
        /// **Added In:** 2010242156
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: integer
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "crlReloadDuration")]
        public System.Nullable<int> CrlReloadDuration { get; set; }
        
        /// <value>
        /// Set to true to enable EKU Validation
        /// <br/>
        /// **Added In:** 2304270343
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ekuValidationEnabled")]
        public System.Nullable<bool> EkuValidationEnabled { get; set; }
                ///
        ///
        public enum EkuValuesEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SERVER_AUTH")]
            ServerAuth,
            [EnumMember(Value = "CLIENT_AUTH")]
            ClientAuth,
            [EnumMember(Value = "CODE_SIGNING")]
            CodeSigning,
            [EnumMember(Value = "EMAIL_PROTECTION")]
            EmailProtection,
            [EnumMember(Value = "TIME_STAMPING")]
            TimeStamping,
            [EnumMember(Value = "OCSP_SIGNING")]
            OcspSigning
        };

        /// <value>
        /// List of EKU which needs to be validated
        /// <br/>
        /// **Added In:** 2304270343
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "ekuValues", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<EkuValuesEnum> EkuValues { get; set; }
        
    }
}
