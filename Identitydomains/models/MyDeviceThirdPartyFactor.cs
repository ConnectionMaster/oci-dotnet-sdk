/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// User's third-party authentication factor details
    /// <br/>
    /// **Added In:** 19.2.1
    /// <br/>
    /// **SCIM++ Properties:**
    ///  - idcsSearchable: false
    ///  - multiValued: false
    ///  - mutability: immutable
    ///  - required: false
    ///  - returned: default
    ///  - type: complex
    ///  - uniqueness: none
    /// </summary>
    public class MyDeviceThirdPartyFactor 
    {
        
        /// <value>
        /// The vendor name of the third party factor
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ThirdPartyVendorName is required.")]
        [JsonProperty(PropertyName = "thirdPartyVendorName")]
        public string ThirdPartyVendorName { get; set; }
        
        /// <value>
        /// Type of the third party authentication factor
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        /// </value>
        [JsonProperty(PropertyName = "thirdPartyFactorType")]
        public string ThirdPartyFactorType { get; set; }
        
        /// <value>
        /// The identifier of third party device
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Value is required.")]
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }
        
        /// <value>
        /// The URI that corresponds to the third party device resource
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: reference
        ///  - uniqueness: none
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - idcsRequiresImmediateReadAfterWriteForAccessFlows: true
        /// </value>
        [JsonProperty(PropertyName = "$ref")]
        public string Ref { get; set; }
        
    }
}
