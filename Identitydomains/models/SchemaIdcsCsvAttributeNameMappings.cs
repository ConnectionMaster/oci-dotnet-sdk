/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// Csv meta data for those resource type attributes which can be imported / exported from / to csv.
    /// </summary>
    public class SchemaIdcsCsvAttributeNameMappings 
    {
        
        /// <value>
        /// The CSV column header name that maps to this attribute.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "columnHeaderName")]
        public string ColumnHeaderName { get; set; }
        
        /// <value>
        /// The deprecated CSV column header name that maps to this attribute.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "deprecatedColumnHeaderName")]
        public string DeprecatedColumnHeaderName { get; set; }
        
        /// <value>
        /// The attribute path that the CSV column header name maps to for complex multi-valued attributes.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "mapsTo")]
        public string MapsTo { get; set; }
        
        /// <value>
        /// The default value to be used during import processing in case the CSV column header is not present or value is not given in the import CSV.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "defaultValue")]
        public string DefaultValue { get; set; }
        
        /// <value>
        /// If values of the CSV column header name can contain multiple values, this attribute specifies the delimiter to be used. For example, Group's \\\"User Members\\\" CSV column header is multi-valued and it's delimiter is a semi-colon (\\\";\\\").
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "multiValueDelimiter")]
        public string MultiValueDelimiter { get; set; }
        
        /// <value>
        /// This specifies the Csv Header for resolving Resource Type for this Column Header
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "csvColumnForResolvingResourceType")]
        public string CsvColumnForResolvingResourceType { get; set; }
        
        /// <value>
        /// This attribute gives a maps for resolving Resource Type after reading it's value from \\\"csvColumnForResolvingResourceType\\\" attribute
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "resolveValueUsingResourceType")]
        public System.Collections.Generic.List<SchemaResolveValueUsingResourceType> ResolveValueUsingResourceType { get; set; }
        
        /// <value>
        /// This attribute specifies the mapping of \\\"uniqueAttributeNameForDisplay\\\" attributes(s) of the referenced resource with the columnHeaderName(s). This attribute should be given in the idcsCsvAttributeNameMappings when uniqueAttributeNameForDisplay contains more than one attribute.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "referencedResourceTypeUniqueAttributeNameMappings")]
        public System.Collections.Generic.List<SchemaReferencedResourceTypeUniqueAttributeNameMappings> ReferencedResourceTypeUniqueAttributeNameMappings { get; set; }
        
    }
}
