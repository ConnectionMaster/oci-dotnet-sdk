/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// Oracle Identity Cloud Service Group
    /// </summary>
    public class ExtensionGroupGroup 
    {
        
        /// <value>
        /// Group description
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Description
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Description]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
                ///
        /// <value>
        /// Source from which this group got created.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeNameMappings: [[defaultValue:import]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum CreationMechanismEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "bulk")]
            Bulk,
            [EnumMember(Value = "api")]
            Api,
            [EnumMember(Value = "adsync")]
            Adsync,
            [EnumMember(Value = "authsync")]
            Authsync,
            [EnumMember(Value = "idcsui")]
            Idcsui,
            [EnumMember(Value = "import")]
            Import
        };

        /// <value>
        /// Source from which this group got created.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeNameMappings: [[defaultValue:import]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "creationMechanism")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CreationMechanismEnum> CreationMechanism { get; set; }
        
        [JsonProperty(PropertyName = "passwordPolicy")]
        public GroupExtPasswordPolicy PasswordPolicy { get; set; }
        
        [JsonProperty(PropertyName = "syncedFromApp")]
        public GroupExtSyncedFromApp SyncedFromApp { get; set; }
        
        /// <value>
        /// Grants assigned to group
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "grants")]
        public System.Collections.Generic.List<GroupExtGrants> Grants { get; set; }
        
        /// <value>
        /// Group owners
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCompositeKey: [value, type]
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "owners")]
        public System.Collections.Generic.List<GroupExtOwners> Owners { get; set; }
        
        /// <value>
        /// A list of appRoles that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCompositeKey: [value]
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "appRoles")]
        public System.Collections.Generic.List<GroupExtAppRoles> AppRoles { get; set; }
        
    }
}
