/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// Oracle Identity Cloud Service User
    /// </summary>
    public class ExtensionUserUser 
    {
        
        /// <value>
        /// A Boolean value indicating whether or not the user is federated.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Federated
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Federated]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "isFederatedUser")]
        public System.Nullable<bool> IsFederatedUser { get; set; }
        
        /// <value>
        /// A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
        /// <br/>
        /// **Added In:** 17.4.6
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: never
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "isAuthenticationDelegated")]
        public System.Nullable<bool> IsAuthenticationDelegated { get; set; }
                ///
        /// <value>
        /// A supplemental status indicating the reason why a user is disabled
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum StatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "pendingVerification")]
            PendingVerification,
            [EnumMember(Value = "verified")]
            Verified
        };

        /// <value>
        /// A supplemental status indicating the reason why a user is disabled
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
                ///
        /// <value>
        /// Registration provider
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum ProviderEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "facebook")]
            Facebook,
            [EnumMember(Value = "google")]
            Google,
            [EnumMember(Value = "IDCS")]
            Idcs,
            [EnumMember(Value = "twitter")]
            Twitter
        };

        /// <value>
        /// Registration provider
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "provider")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ProviderEnum> Provider { get; set; }
                ///
        /// <value>
        /// User's preferred landing page following login, logout and reset password.
        /// <br/>
        /// **Added In:** 2302092332
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum PreferredUiLandingPageEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "MyApps")]
            MyApps,
            [EnumMember(Value = "MyProfile")]
            MyProfile,
            [EnumMember(Value = "OciConsole")]
            OciConsole
        };

        /// <value>
        /// User's preferred landing page following login, logout and reset password.
        /// <br/>
        /// **Added In:** 2302092332
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "preferredUiLandingPage")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PreferredUiLandingPageEnum> PreferredUiLandingPage { get; set; }
                ///
        /// <value>
        /// User creation mechanism
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeNameMappings: [[defaultValue:import]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum CreationMechanismEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "bulk")]
            Bulk,
            [EnumMember(Value = "api")]
            Api,
            [EnumMember(Value = "adsync")]
            Adsync,
            [EnumMember(Value = "idcsui")]
            Idcsui,
            [EnumMember(Value = "import")]
            Import,
            [EnumMember(Value = "authsync")]
            Authsync,
            [EnumMember(Value = "selfreg")]
            Selfreg,
            [EnumMember(Value = "samljit")]
            Samljit
        };

        /// <value>
        /// User creation mechanism
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeNameMappings: [[defaultValue:import]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - required: false
        ///  - returned: request
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "creationMechanism")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CreationMechanismEnum> CreationMechanism { get; set; }
        
        /// <value>
        /// Specifies date time when a User's group membership was last modified.
        /// <br/>
        /// **Added In:** 2304270343
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: dateTime
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "groupMembershipLastModified")]
        public string GroupMembershipLastModified { get; set; }
        
        /// <value>
        /// A Boolean value indicating whether or not to hide the getting started page
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "doNotShowGettingStarted")]
        public System.Nullable<bool> DoNotShowGettingStarted { get; set; }
        
        /// <value>
        /// A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:ByPass Notification]]
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - idcsRequiresWriteForAccessFlows: true
        ///  - required: false
        ///  - returned: never
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "bypassNotification")]
        public System.Nullable<bool> BypassNotification { get; set; }
        
        /// <value>
        /// A Boolean value indicating whether or not a user is enrolled for account recovery
        /// <br/>
        /// **Added In:** 19.1.4
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "isAccountRecoveryEnrolled")]
        public System.Nullable<bool> IsAccountRecoveryEnrolled { get; set; }
        
        /// <value>
        /// Boolean value to prompt user to setup account recovery during login.
        /// <br/>
        /// **Added In:** 19.1.4
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: request
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "accountRecoveryRequired")]
        public System.Nullable<bool> AccountRecoveryRequired { get; set; }
        
        /// <value>
        /// A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: never
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "userFlowControlledByExternalClient")]
        public System.Nullable<bool> UserFlowControlledByExternalClient { get; set; }
        
        /// <value>
        /// A Boolean value indicating whether or not group membership is normalized for this user.
        /// <br/>
        /// **Deprecated Since: 19.3.3**
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: never
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "isGroupMembershipNormalized")]
        public System.Nullable<bool> IsGroupMembershipNormalized { get; set; }
        
        /// <value>
        /// A Boolean value Indicates whether this User's group membership has been sync'ed from Group.members to UsersGroups.
        /// <br/>
        /// **Added In:** 19.3.3
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: never
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "isGroupMembershipSyncedToUsersGroups")]
        public System.Nullable<bool> IsGroupMembershipSyncedToUsersGroups { get; set; }
        
        /// <value>
        /// Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsSearchable: false
        ///  - multiValued: false
        ///  - mutability: writeOnly
        ///  - required: false
        ///  - returned: never
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "notificationEmailTemplateId")]
        public string NotificationEmailTemplateId { get; set; }
        
        /// <value>
        /// Indicates if User is a Service User
        /// <br/>
        /// **Added In:** 2306131901
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Service User
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Service User]]
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: immutable
        ///  - required: false
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "serviceUser")]
        public System.Nullable<bool> ServiceUser { get; set; }
        
        /// <value>
        /// A list of Support Accounts corresponding to user.
        /// <br/>
        /// **Added In:** 2103141444
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [value]
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "supportAccounts")]
        public System.Collections.Generic.List<UserExtSupportAccounts> SupportAccounts { get; set; }
        
        /// <value>
        /// Description:
        /// <br/>
        /// **Added In:** 19.2.1
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [value, idcsAppRoleId]
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        /// 
        /// </value>
        [JsonProperty(PropertyName = "idcsAppRolesLimitedToGroups")]
        public System.Collections.Generic.List<UserExtIdcsAppRolesLimitedToGroups> IdcsAppRolesLimitedToGroups { get; set; }
        
        [JsonProperty(PropertyName = "userToken")]
        public UserExtUserToken UserToken { get; set; }
        
        [JsonProperty(PropertyName = "syncedFromApp")]
        public UserExtSyncedFromApp SyncedFromApp { get; set; }
        
        [JsonProperty(PropertyName = "applicableAuthenticationTargetApp")]
        public UserExtApplicableAuthenticationTargetApp ApplicableAuthenticationTargetApp { get; set; }
        
        [JsonProperty(PropertyName = "delegatedAuthenticationTargetApp")]
        public UserExtDelegatedAuthenticationTargetApp DelegatedAuthenticationTargetApp { get; set; }
        
        /// <value>
        /// Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsPii: true
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "accounts")]
        public System.Collections.Generic.List<UserExtAccounts> Accounts { get; set; }
        
        /// <value>
        /// Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsSearchable: true
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "grants")]
        public System.Collections.Generic.List<UserExtGrants> Grants { get; set; }
        
        /// <value>
        /// A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - idcsCompositeKey: [value]
        ///  - multiValued: true
        ///  - mutability: readOnly
        ///  - required: false
        ///  - returned: request
        ///  - type: complex
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "appRoles")]
        public System.Collections.Generic.List<UserExtAppRoles> AppRoles { get; set; }
        
    }
}
