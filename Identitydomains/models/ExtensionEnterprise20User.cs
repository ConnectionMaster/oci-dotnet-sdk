/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// Enterprise User
    /// </summary>
    public class ExtensionEnterprise20User 
    {
        
        /// <value>
        /// Numeric or alphanumeric identifier assigned to  a person, typically based on order of hire or association with an organization.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Employee Number
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Employee Number]]
        ///  - idcsPii: true
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "employeeNumber")]
        public string EmployeeNumber { get; set; }
        
        /// <value>
        /// Identifies the name of a cost center.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Cost Center
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Cost Center]]
        ///  - idcsPii: true
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "costCenter")]
        public string CostCenter { get; set; }
        
        /// <value>
        /// Identifies the name of an organization.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Organization
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Organization Name, deprecatedColumnHeaderName:Organization]]
        ///  - idcsPii: true
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "organization")]
        public string Organization { get; set; }
        
        /// <value>
        /// Identifies the name of a division.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Division
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Division]]
        ///  - idcsPii: true
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "division")]
        public string Division { get; set; }
        
        /// <value>
        /// Identifies the name of a department.
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - caseExact: false
        ///  - idcsCsvAttributeName: Department
        ///  - idcsCsvAttributeNameMappings: [[columnHeaderName:Department]]
        ///  - idcsPii: true
        ///  - idcsSearchable: true
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "department")]
        public string Department { get; set; }
        
        [JsonProperty(PropertyName = "manager")]
        public UserExtManager Manager { get; set; }
        
    }
}
