/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydomainsService.Models
{
    /// <summary>
    /// Custom claims associated with the specific tenant
    /// </summary>
    public class SettingsTenantCustomClaims 
    {
        
        /// <value>
        /// Custom claim name
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: server
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// Custom claim value
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Value is required.")]
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }
                ///
        /// <value>
        /// Indicates under what scenario the custom claim will be return
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum ModeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "always")]
            Always,
            [EnumMember(Value = "request")]
            Request,
            [EnumMember(Value = "never")]
            Never
        };

        /// <value>
        /// Indicates under what scenario the custom claim will be return
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Mode is required.")]
        [JsonProperty(PropertyName = "mode")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ModeEnum> Mode { get; set; }
        
        /// <value>
        /// Indicates if the custom claim is an expression
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Expression is required.")]
        [JsonProperty(PropertyName = "expression")]
        public System.Nullable<bool> Expression { get; set; }
        
        /// <value>
        /// Indicates if the custom claim is associated with all scopes
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: boolean
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AllScopes is required.")]
        [JsonProperty(PropertyName = "allScopes")]
        public System.Nullable<bool> AllScopes { get; set; }
                ///
        /// <value>
        /// Indicates what type of token the custom claim will be embedded
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        ///
        public enum TokenTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "AT")]
            At,
            [EnumMember(Value = "IT")]
            It,
            [EnumMember(Value = "BOTH")]
            Both
        };

        /// <value>
        /// Indicates what type of token the custom claim will be embedded
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: false
        ///  - mutability: readWrite
        ///  - required: true
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TokenType is required.")]
        [JsonProperty(PropertyName = "tokenType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TokenTypeEnum> TokenType { get; set; }
        
        /// <value>
        /// Scopes associated with a specific custom claim
        /// <br/>
        /// **Added In:** 18.4.2
        /// <br/>
        /// **SCIM++ Properties:**
        ///  - multiValued: true
        ///  - mutability: readWrite
        ///  - required: false
        ///  - returned: default
        ///  - type: string
        ///  - uniqueness: none
        /// </value>
        [JsonProperty(PropertyName = "scopes")]
        public System.Collections.Generic.List<string> Scopes { get; set; }
        
    }
}
