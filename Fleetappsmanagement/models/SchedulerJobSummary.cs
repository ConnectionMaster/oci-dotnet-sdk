/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FleetappsmanagementService.Models
{
    /// <summary>
    /// Summary of the SchedulerJob.
    /// </summary>
    public class SchedulerJobSummary 
    {
        
        /// <value>
        /// The OCID of the resource.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// Avoid entering confidential information.
        /// <br/>
        /// Example: My new resource
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Tenancy OCID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The scheduled date and time for the Job.
        /// </value>
        [JsonProperty(PropertyName = "timeScheduled")]
        public System.Nullable<System.DateTime> TimeScheduled { get; set; }
        
        /// <value>
        /// Count of Action Groups affected by the Schedule.
        /// An action group is a group of entities grouped for a lifecycle activity.
        /// Example - A Fleet will be considered an Action Group for any lifecycle activity.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "countOfAffectedActionGroups")]
        public System.Nullable<int> CountOfAffectedActionGroups { get; set; }
        
        /// <value>
        /// Count of resources affected by the schedule.
        /// </value>
        [JsonProperty(PropertyName = "countOfAffectedResources")]
        public System.Nullable<int> CountOfAffectedResources { get; set; }
        
        /// <value>
        /// Count of targets affected by the schedule.
        /// </value>
        [JsonProperty(PropertyName = "countOfAffectedTargets")]
        public System.Nullable<int> CountOfAffectedTargets { get; set; }
        
        /// <value>
        /// All Action Group types are part of the schedule.
        /// </value>
        [JsonProperty(PropertyName = "actionGroupTypes", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<LifeCycleActionGroupType> ActionGroupTypes { get; set; }
        
        /// <value>
        /// All application types that are part of the schedule for an ENVIRONMENT action group Type.
        /// </value>
        [JsonProperty(PropertyName = "applicationTypes")]
        public System.Collections.Generic.List<string> ApplicationTypes { get; set; }
        
        /// <value>
        /// All products that are part of the schedule for a PRODUCT action group type.
        /// </value>
        [JsonProperty(PropertyName = "products")]
        public System.Collections.Generic.List<string> Products { get; set; }
        
        /// <value>
        /// All LifeCycle Operations that are part of the schedule.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleOperations")]
        public System.Collections.Generic.List<string> LifecycleOperations { get; set; }
        
        /// <value>
        /// Action Groups associated with the Schedule.
        /// </value>
        [JsonProperty(PropertyName = "actionGroups")]
        public System.Collections.Generic.List<ActionGroupDetails> ActionGroups { get; set; }
        
        [JsonProperty(PropertyName = "associatedScheduleDefinition")]
        public AssociatedSchedulerDefinition AssociatedScheduleDefinition { get; set; }
        
        /// <value>
        /// The current state of the SchedulerJob.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SchedulerJob.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FreeformTags is required.")]
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DefinedTags is required.")]
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
