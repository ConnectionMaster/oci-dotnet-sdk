/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FleetappsmanagementService.Models
{
    /// <summary>
    /// Summary information about an inventory target.
    /// </summary>
    public class InventoryRecordSummary 
    {
        
        /// <value>
        /// The OCID of the Inventory target.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetId is required.")]
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }
        
        /// <value>
        /// Name of the target
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetName is required.")]
        [JsonProperty(PropertyName = "targetName")]
        public string TargetName { get; set; }
        
        /// <value>
        /// Version of the product on the target
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Version is required.")]
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }
        
        /// <value>
        /// OCID of the resource associated with the target
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetResourceId is required.")]
        [JsonProperty(PropertyName = "targetResourceId")]
        public string TargetResourceId { get; set; }
        
        /// <value>
        /// Name of the resource associated with the target
        /// </value>
        [JsonProperty(PropertyName = "targetResourceName")]
        public string TargetResourceName { get; set; }
        
        /// <value>
        /// OCID of the compartment to which the resource belongs to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// OCID of the product installed at the target path
        /// </value>
        [JsonProperty(PropertyName = "targetProductId")]
        public string TargetProductId { get; set; }
        
        /// <value>
        /// Name of the product installed at the target path
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetProductName is required.")]
        [JsonProperty(PropertyName = "targetProductName")]
        public string TargetProductName { get; set; }
        
        /// <value>
        /// OS installed on the resource associated with the target
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OsType is required.")]
        [JsonProperty(PropertyName = "osType")]
        public string OsType { get; set; }
        
        /// <value>
        /// Architecture of the resource associated with the target
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Architecture is required.")]
        [JsonProperty(PropertyName = "architecture")]
        public string Architecture { get; set; }
        
        /// <value>
        /// List of target properties
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Properties is required.")]
        [JsonProperty(PropertyName = "properties")]
        public System.Collections.Generic.List<InventoryRecordProperty> Properties { get; set; }
        
        /// <value>
        /// List of target components
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Components is required.")]
        [JsonProperty(PropertyName = "components")]
        public System.Collections.Generic.List<InventoryRecordComponent> Components { get; set; }
        
        /// <value>
        /// List of details on the patches currently installed on the target
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "InstalledPatches is required.")]
        [JsonProperty(PropertyName = "installedPatches")]
        public System.Collections.Generic.List<InventoryRecordPatchDetails> InstalledPatches { get; set; }
        
        /// <value>
        /// The time this resource was created. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time this resource was last updated. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The current state of the Inventory target.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<InventoryRecord.LifecycleStateEnum> LifecycleState { get; set; }
        
    }
}
