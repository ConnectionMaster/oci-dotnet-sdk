/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;

namespace Oci.FleetappsmanagementService.Models
{
    /// <summary>
    /// Action Group details.
    /// </summary>
    [JsonConverter(typeof(ActionGroupDetailsModelConverter))]
    public class ActionGroupDetails 
    {
        
        /// <value>
        /// Name of the ActionGroup.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
                ///
        /// <value>
        /// Action Group kind
        /// </value>
        ///
        public enum KindEnum {
            [EnumMember(Value = "FLEET_USING_RUNBOOK")]
            FleetUsingRunbook
        };

        
        /// <value>
        /// Product associated.
        /// Only applicable if actionGroup type is PRODUCT.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "product")]
        public string Product { get; set; }
        
        /// <value>
        /// LifeCycle Operation.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleOperation")]
        public string LifecycleOperation { get; set; }
        
        /// <value>
        /// Unique producer Id at Action Group Level
        /// </value>
        [JsonProperty(PropertyName = "activityId")]
        public string ActivityId { get; set; }
        
        /// <value>
        /// Status of the Job at Action Group Level.
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<JobStatus> Status { get; set; }
        
        /// <value>
        /// The time the Scheduler Job started. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }
        
        /// <value>
        /// The time the Scheduler Job ended. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeEnded")]
        public System.Nullable<System.DateTime> TimeEnded { get; set; }
        
    }

    public class ActionGroupDetailsModelConverter : JsonConverter
    {
        private static NLog.Logger logger = NLog.LogManager.GetCurrentClassLogger();
        public override bool CanWrite => false;
        public override bool CanRead => true;
        public override bool CanConvert(System.Type type)
        {
            return type == typeof(ActionGroupDetails);
        }
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            throw new System.InvalidOperationException("Use default serialization.");
        }

        public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer)
        {
            var jsonObject = JObject.Load(reader);
            var obj = default(ActionGroupDetails);
            var discriminator = jsonObject["kind"].Value<string>();
            switch (discriminator)
            {
                case "FLEET_USING_RUNBOOK":
                    obj = new FleetBasedActionGroupDetails();
                    break;
            }
            if (obj != null)
            {
                serializer.Populate(jsonObject.CreateReader(), obj);
            }
            else
            {
                logger.Warn($"The type {discriminator} is not present under ActionGroupDetails! Returning null value.");
            }
            return obj;
        }
    }
}
