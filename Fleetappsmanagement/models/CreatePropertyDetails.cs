/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FleetappsmanagementService.Models
{
    /// <summary>
    /// The information about new Property.
    /// </summary>
    public class CreatePropertyDetails 
    {
        
        /// <value>
        /// Compartment OCID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// Avoid entering confidential information.
        /// <br/>
        /// Example: My new resource
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Text selection of the property.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Selection is required.")]
        [JsonProperty(PropertyName = "selection")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<Selection> Selection { get; set; }
        
        /// <value>
        /// Format of the value.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ValueType is required.")]
        [JsonProperty(PropertyName = "valueType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ValueType> ValueType { get; set; }
        
        /// <value>
        /// Values of the property (must be a single value if selection = 'SINGLE_CHOICE').
        /// </value>
        [JsonProperty(PropertyName = "values")]
        public System.Collections.Generic.List<string> Values { get; set; }
        
    }
}
