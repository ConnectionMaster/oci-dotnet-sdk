/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FleetappsmanagementService.Models
{
    /// <summary>
    /// Rule for DYNAMIC selection.
    /// 
    /// </summary>
    public class Rule 
    {
        
        /// <value>
        /// Based on what the rule is created.
        /// It can be based on a resourceProperty or a tag.  
        /// If based on a tag, basis will be 'definedTagEquals'
        /// If based on a resource property, basis will be 'inventoryProperties'
        /// 
        /// </value>
        [JsonProperty(PropertyName = "basis")]
        public string Basis { get; set; }
        
        /// <value>
        /// Tenancy Id (Root Compartment Id)for which the rule is created.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The Compartment ID to dynamically search resources.
        /// Provide the compartment ID to which the rule is applicable.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceCompartmentId is required.")]
        [JsonProperty(PropertyName = "resourceCompartmentId")]
        public string ResourceCompartmentId { get; set; }
        
        /// <value>
        /// Rule Conditions
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Conditions is required.")]
        [JsonProperty(PropertyName = "conditions")]
        public System.Collections.Generic.List<Condition> Conditions { get; set; }
        
    }
}
