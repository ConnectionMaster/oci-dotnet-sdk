/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FleetappsmanagementService.Models
{
    /// <summary>
    /// Rule Selection Criteria for DYNAMIC resource selection for a GENERIC fleet.
    /// Rules define what resources are members of this fleet. All resources that meet the criteria are added automatically.
    /// 
    /// </summary>
    public class SelectionCriteria 
    {
                ///
        /// <value>
        /// Match condition for the rule selection.
        /// Include resources that match all rules or any of the rules.
        /// 
        /// </value>
        ///
        public enum MatchConditionEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "MATCH_ALL")]
            MatchAll,
            [EnumMember(Value = "ANY")]
            Any
        };

        /// <value>
        /// Match condition for the rule selection.
        /// Include resources that match all rules or any of the rules.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MatchCondition is required.")]
        [JsonProperty(PropertyName = "matchCondition")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<MatchConditionEnum> MatchCondition { get; set; }
        
        /// <value>
        /// Rules.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Rules is required.")]
        [JsonProperty(PropertyName = "rules")]
        public System.Collections.Generic.List<Rule> Rules { get; set; }
        
    }
}
