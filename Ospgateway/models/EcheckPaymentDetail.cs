/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OspgatewayService.Models
{
    /// <summary>
    /// Echeck Payment related details
    /// </summary>
    public class EcheckPaymentDetail : PaymentDetail
    {
        
        /// <value>
        /// Name on the echeck card
        /// </value>
        [JsonProperty(PropertyName = "nameOnCard")]
        public string NameOnCard { get; set; }
                ///
        /// <value>
        /// Echeck card type
        /// </value>
        ///
        public enum CardTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SAVING")]
            Saving,
            [EnumMember(Value = "CHECKING")]
            Checking,
            [EnumMember(Value = "CORPORATE_CHECKING")]
            CorporateChecking
        };

        /// <value>
        /// Echeck card type
        /// </value>
        [JsonProperty(PropertyName = "cardType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CardTypeEnum> CardType { get; set; }
        
        /// <value>
        /// Account number of the card owner
        /// </value>
        [JsonProperty(PropertyName = "accountNumber")]
        public string AccountNumber { get; set; }
        
        /// <value>
        /// Routing number of the echeck card
        /// </value>
        [JsonProperty(PropertyName = "routingNumber")]
        public string RoutingNumber { get; set; }
        
        [JsonProperty(PropertyName = "paymentMethod")]
        private readonly string paymentMethod = "ECHECK";
    }
}
