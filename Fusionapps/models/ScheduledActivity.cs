/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FusionappsService.Models
{
    /// <summary>
    /// Details of scheduled activity.
    /// </summary>
    public class ScheduledActivity 
    {
        
        /// <value>
        /// Unique identifier that is immutable on creation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// scheduled activity display name, can be renamed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
                ///
        /// <value>
        /// run cadence.
        /// </value>
        ///
        public enum RunCycleEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "QUARTERLY")]
            Quarterly,
            [EnumMember(Value = "MONTHLY")]
            Monthly,
            [EnumMember(Value = "ONEOFF")]
            Oneoff,
            [EnumMember(Value = "VERTEX")]
            Vertex
        };

        /// <value>
        /// run cadence.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RunCycle is required.")]
        [JsonProperty(PropertyName = "runCycle")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RunCycleEnum> RunCycle { get; set; }
        
        /// <value>
        /// FAaaS Environment Identifier.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FusionEnvironmentId is required.")]
        [JsonProperty(PropertyName = "fusionEnvironmentId")]
        public string FusionEnvironmentId { get; set; }
                ///
        /// <value>
        /// The current state of the scheduledActivity.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ACCEPTED")]
            Accepted,
            [EnumMember(Value = "IN_PROGRESS")]
            InProgress,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "CANCELED")]
            Canceled
        };

        /// <value>
        /// The current state of the scheduledActivity.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// List of actions
        /// </value>
        [JsonProperty(PropertyName = "actions")]
        public System.Collections.Generic.List<Action> Actions { get; set; }
                ///
        /// <value>
        /// Service availability / impact during scheduled activity execution up down
        /// </value>
        ///
        public enum ServiceAvailabilityEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "AVAILABLE")]
            Available,
            [EnumMember(Value = "UNAVAILABLE")]
            Unavailable
        };

        /// <value>
        /// Service availability / impact during scheduled activity execution up down
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServiceAvailability is required.")]
        [JsonProperty(PropertyName = "serviceAvailability")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ServiceAvailabilityEnum> ServiceAvailability { get; set; }
        
        /// <value>
        /// Current time the scheduled activity is scheduled to start. An RFC3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeScheduledStart is required.")]
        [JsonProperty(PropertyName = "timeScheduledStart")]
        public System.Nullable<System.DateTime> TimeScheduledStart { get; set; }
        
        /// <value>
        /// Current time the scheduled activity is scheduled to end. An RFC3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeExpectedFinish is required.")]
        [JsonProperty(PropertyName = "timeExpectedFinish")]
        public System.Nullable<System.DateTime> TimeExpectedFinish { get; set; }
        
        /// <value>
        /// The time the scheduled activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeFinished")]
        public System.Nullable<System.DateTime> TimeFinished { get; set; }
        
        /// <value>
        /// Cumulative delay hours
        /// </value>
        [JsonProperty(PropertyName = "delayInHours")]
        public System.Nullable<int> DelayInHours { get; set; }
        
        /// <value>
        /// The time the scheduled activity record was created. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time the scheduled activity record was updated. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
                ///
        /// <value>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </value>
        ///
        public enum LifecycleDetailsEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "NONE")]
            None,
            [EnumMember(Value = "ROLLBACKACCEPTED")]
            Rollbackaccepted,
            [EnumMember(Value = "ROLLBACKINPROGRESS")]
            Rollbackinprogress,
            [EnumMember(Value = "ROLLBACKSUCCEEDED")]
            Rollbacksucceeded,
            [EnumMember(Value = "ROLLBACKFAILED")]
            Rollbackfailed
        };

        /// <value>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleDetailsEnum> LifecycleDetails { get; set; }
                ///
        /// <value>
        /// A property describing the phase of the scheduled activity.
        /// </value>
        ///
        public enum ScheduledActivityPhaseEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "PRE_MAINTENANCE")]
            PreMaintenance,
            [EnumMember(Value = "MAINTENANCE")]
            Maintenance,
            [EnumMember(Value = "POST_MAINTENANCE")]
            PostMaintenance
        };

        /// <value>
        /// A property describing the phase of the scheduled activity.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ScheduledActivityPhase is required.")]
        [JsonProperty(PropertyName = "scheduledActivityPhase")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ScheduledActivityPhaseEnum> ScheduledActivityPhase { get; set; }
        
        /// <value>
        /// The unique identifier that associates a scheduled activity with others in one complete maintenance. For example, with ZDT, a complete upgrade maintenance includes 5 scheduled activities - PREPARE, EXECUTE, POST, PRE_MAINTENANCE, and POST_MAINTENANCE. All of them share the same unique identifier - scheduledActivityAssociationId.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ScheduledActivityAssociationId is required.")]
        [JsonProperty(PropertyName = "scheduledActivityAssociationId")]
        public string ScheduledActivityAssociationId { get; set; }
        
    }
}
