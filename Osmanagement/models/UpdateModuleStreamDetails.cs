/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementService.Models
{
    /// <summary>
    /// Information detailing the state of a module stream
    /// </summary>
    public class UpdateModuleStreamDetails 
    {
        
        /// <value>
        /// The name of the stream of the parent module
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "StreamName is required.")]
        [JsonProperty(PropertyName = "streamName")]
        public string StreamName { get; set; }
                ///
        /// <value>
        /// The status of the stream
        /// <br/>
        /// A stream with the \"ENABLED\" status can be used as a source for installing
        /// profiles.  Streams with this status are also \"ACTIVE\".
        /// <br/>
        /// A stream with the \"DISABLED\" status cannot be the source for installing
        /// profiles.  To install profiles and packages from this stream, it must be
        /// enabled.
        /// <br/>
        /// A stream with the \"ACTIVE\" status can be used as a source for installing
        /// profiles.  The packages that comprise the stream are also used when a
        /// matching package is installed directly.  In general, a stream can have
        /// this status if it is the default stream for the module and no stream has
        /// been explicitly enabled.
        /// 
        /// </value>
        ///
        public enum StatusEnum {
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLED")]
            Disabled,
            [EnumMember(Value = "ACTIVE")]
            Active
        };

        /// <value>
        /// The status of the stream
        /// <br/>
        /// A stream with the \"ENABLED\" status can be used as a source for installing
        /// profiles.  Streams with this status are also \"ACTIVE\".
        /// <br/>
        /// A stream with the \"DISABLED\" status cannot be the source for installing
        /// profiles.  To install profiles and packages from this stream, it must be
        /// enabled.
        /// <br/>
        /// A stream with the \"ACTIVE\" status can be used as a source for installing
        /// profiles.  The packages that comprise the stream are also used when a
        /// matching package is installed directly.  In general, a stream can have
        /// this status if it is the default stream for the module and no stream has
        /// been explicitly enabled.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
        
        /// <value>
        /// The date and time of the last status change for this object, as
        /// described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339),
        /// section 14.29.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeModified is required.")]
        [JsonProperty(PropertyName = "timeModified")]
        public System.Nullable<System.DateTime> TimeModified { get; set; }
        
        /// <value>
        /// The name of the software source that publishes this stream.
        /// </value>
        [JsonProperty(PropertyName = "softwareSourceName")]
        public string SoftwareSourceName { get; set; }
        
        /// <value>
        /// The URL of the software source that publishes this stream.
        /// </value>
        [JsonProperty(PropertyName = "softwareSourceUrl")]
        public string SoftwareSourceUrl { get; set; }
        
        /// <value>
        /// Indicates if the module stream is the default
        /// </value>
        [JsonProperty(PropertyName = "isDefault")]
        public System.Nullable<bool> IsDefault { get; set; }
        
        /// <value>
        /// The profiles of the stream
        /// </value>
        [JsonProperty(PropertyName = "profiles")]
        public System.Collections.Generic.List<UpdateModuleStreamProfileDetails> Profiles { get; set; }
        
    }
}
