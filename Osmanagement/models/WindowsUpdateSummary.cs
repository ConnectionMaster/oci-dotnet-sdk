/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementService.Models
{
    /// <summary>
    /// An update available for a Windows managed instance.
    /// </summary>
    public class WindowsUpdateSummary 
    {
        
        /// <value>
        /// Windows Update name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Unique identifier for the Windows update. NOTE - This is not an OCID,
        /// but is a unique identifier assigned by Microsoft.
        /// Example: 6981d463-cd91-4a26-b7c4-ea4ded9183ed
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// The purpose of this update.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UpdateType is required.")]
        [JsonProperty(PropertyName = "updateType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<UpdateTypes> UpdateType { get; set; }
        
        /// <value>
        /// Indicates whether the update can be installed using OSMS.
        /// </value>
        [JsonProperty(PropertyName = "installable")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<IsEligibleForInstallation> Installable { get; set; }
        
        /// <value>
        /// Indicates whether a reboot may be required to complete installation of this update.
        /// </value>
        [JsonProperty(PropertyName = "isRebootRequiredForInstallation")]
        public System.Nullable<bool> IsRebootRequiredForInstallation { get; set; }
        
    }
}
