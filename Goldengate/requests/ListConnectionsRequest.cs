/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Oci.GoldengateService.Models;

namespace Oci.GoldengateService.Requests
{
    /// <example>
    /// Click <a href="https://docs.cloud.oracle.com/en-us/iaas/tools/dot-net-examples/latest/goldengate/ListConnections.cs.html">here</a> to see an example of how to use ListConnections request.
    /// </example>
    public class ListConnectionsRequest : Oci.Common.IOciRequest
    {
        
        /// <value>
        /// The OCID of the compartment that contains the work request. Work requests should be scoped 
        /// to the same compartment as the resource the work request affects. If the work request concerns 
        /// multiple resources, and those resources are not in the same compartment, it is up to the service team 
        /// to pick the primary resource whose compartment should be used.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The array of technology types.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "technologyType", Oci.Common.Http.CollectionFormatType.Multi)]
        public System.Collections.Generic.List<TechnologyType> TechnologyType { get; set; }
        
        /// <value>
        /// The array of connection types.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "connectionType", Oci.Common.Http.CollectionFormatType.Multi)]
        public System.Collections.Generic.List<ConnectionType> ConnectionType { get; set; }
        
        /// <value>
        /// The OCID of the deployment which for the connection must be assigned.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "assignedDeploymentId")]
        public string AssignedDeploymentId { get; set; }
        
        /// <value>
        /// Filters for compatible connections which can be, but currently not assigned to the deployment specified by its id.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "assignableDeploymentId")]
        public string AssignableDeploymentId { get; set; }
        
        /// <value>
        /// Filters for connections which can be assigned to the latest version of the specified deployment type.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "assignableDeploymentType")]
        public System.Nullable<DeploymentType> AssignableDeploymentType { get; set; }
        
        /// <value>
        /// A filter to return only connections having the 'lifecycleState' given.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "lifecycleState")]
        public System.Nullable<Connection.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// A filter to return only the resources that match the entire 'displayName' given.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The maximum number of items to return.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "limit")]
        public System.Nullable<int> Limit { get; set; }
        
        /// <value>
        /// The page token representing the page at which to start retrieving results. This is usually
        /// retrieved from a previous list call.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "page")]
        public string Page { get; set; }
        
        /// <value>
        /// The sort order to use, either 'asc' or 'desc'.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "sortOrder")]
        public System.Nullable<SortOrder> SortOrder { get; set; }
        
        ///
        /// <value>
        /// The field to sort by. Only one sort order can be provided. Default order for 'timeCreated' is
        /// descending.  Default order for 'displayName' is ascending. If no value is specified
        /// timeCreated is the default.
        /// 
        /// </value>
        ///
        public enum SortByEnum {
            [EnumMember(Value = "timeCreated")]
            TimeCreated,
            [EnumMember(Value = "displayName")]
            DisplayName
        };

        /// <value>
        /// The field to sort by. Only one sort order can be provided. Default order for 'timeCreated' is
        /// descending.  Default order for 'displayName' is ascending. If no value is specified
        /// timeCreated is the default.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "sortBy")]
        public System.Nullable<SortByEnum> SortBy { get; set; }
        
        /// <value>
        /// The client request ID for tracing.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Header, "opc-request-id")]
        public string OpcRequestId { get; set; }
    }
}
