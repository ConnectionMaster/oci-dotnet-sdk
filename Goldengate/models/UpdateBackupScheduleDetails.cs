/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GoldengateService.Models
{
    /// <summary>
    /// Defines the backup schedule details for update operation.
    /// 
    /// </summary>
    public class UpdateBackupScheduleDetails 
    {
        
        /// <value>
        /// The start timestamp for the deployment backup schedule. The format is defined by
        /// [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeBackupScheduled")]
        public System.Nullable<System.DateTime> TimeBackupScheduled { get; set; }
                ///
        /// <value>
        /// The frequency of the deployment backup schedule. Frequency can be DAILY, WEEKLY or MONTHLY.
        /// 
        /// </value>
        ///
        public enum FrequencyBackupScheduledEnum {
            [EnumMember(Value = "DAILY")]
            Daily,
            [EnumMember(Value = "WEEKLY")]
            Weekly,
            [EnumMember(Value = "MONTHLY")]
            Monthly
        };

        /// <value>
        /// The frequency of the deployment backup schedule. Frequency can be DAILY, WEEKLY or MONTHLY.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "frequencyBackupScheduled")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<FrequencyBackupScheduledEnum> FrequencyBackupScheduled { get; set; }
        
        /// <value>
        /// Name of the bucket where the object is to be uploaded in the object storage
        /// </value>
        [JsonProperty(PropertyName = "bucketName")]
        public string BucketName { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Name of namespace that serves as a container for all of your buckets
        /// </value>
        [JsonProperty(PropertyName = "namespaceName")]
        public string NamespaceName { get; set; }
        
        /// <value>
        /// Parameter to allow users to create backup without trails
        /// </value>
        [JsonProperty(PropertyName = "isMetadataOnly")]
        public System.Nullable<bool> IsMetadataOnly { get; set; }
        
    }
}
