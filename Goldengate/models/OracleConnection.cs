/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GoldengateService.Models
{
    /// <summary>
    /// Represents the metadata of an Oracle Database Connection.
    /// 
    /// </summary>
    public class OracleConnection : Connection
    {
                ///
        /// <value>
        /// The Oracle technology type.
        /// </value>
        ///
        public enum TechnologyTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "AMAZON_RDS_ORACLE")]
            AmazonRdsOracle,
            [EnumMember(Value = "OCI_AUTONOMOUS_DATABASE")]
            OciAutonomousDatabase,
            [EnumMember(Value = "ORACLE_DATABASE")]
            OracleDatabase,
            [EnumMember(Value = "ORACLE_EXADATA")]
            OracleExadata
        };

        /// <value>
        /// The Oracle technology type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TechnologyType is required.")]
        [JsonProperty(PropertyName = "technologyType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TechnologyTypeEnum> TechnologyType { get; set; }
        
        /// <value>
        /// The username Oracle GoldenGate uses to connect the associated system of the given technology.
        /// This username must already exist and be available by the system/application to be connected to
        /// and must conform to the case sensitivty requirments defined in it.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Username is required.")]
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }
        
        /// <value>
        /// Connect descriptor or Easy Connect Naming method used to connect to a database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString { get; set; }
                ///
        /// <value>
        /// The mode of the database connection session to be established by the data client.
        /// 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database.
        /// Connection to a RAC database involves a redirection received from the SCAN listeners
        /// to the database node to connect to. By default the mode would be DIRECT.
        /// 
        /// </value>
        ///
        public enum SessionModeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "DIRECT")]
            Direct,
            [EnumMember(Value = "REDIRECT")]
            Redirect
        };

        /// <value>
        /// The mode of the database connection session to be established by the data client.
        /// 'REDIRECT' - for a RAC database, 'DIRECT' - for a non-RAC database.
        /// Connection to a RAC database involves a redirection received from the SCAN listeners
        /// to the database node to connect to. By default the mode would be DIRECT.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "sessionMode")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SessionModeEnum> SessionMode { get; set; }
        
        /// <value>
        /// Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host 
        /// field, or make sure the host name is resolvable in the target VCN.
        /// <br/>
        /// The private IP address of the connection's endpoint in the customer's VCN, typically a
        /// database endpoint or a big data endpoint (e.g. Kafka bootstrap server).
        /// In case the privateIp is provided, the subnetId must also be provided.
        /// In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible.
        /// In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "privateIp")]
        public string PrivateIp { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the database being referenced.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "databaseId")]
        public string DatabaseId { get; set; }
        
        [JsonProperty(PropertyName = "connectionType")]
        private readonly string connectionType = "ORACLE";
    }
}
