/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GoldengateService.Models
{
    /// <summary>
    /// Represents the metadata of a MongoDB Connection.
    /// 
    /// </summary>
    public class MongoDbConnection : Connection
    {
                ///
        /// <value>
        /// The MongoDB technology type.
        /// </value>
        ///
        public enum TechnologyTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "MONGODB")]
            Mongodb,
            [EnumMember(Value = "OCI_AUTONOMOUS_JSON_DATABASE")]
            OciAutonomousJsonDatabase,
            [EnumMember(Value = "AZURE_COSMOS_DB_FOR_MONGODB")]
            AzureCosmosDbForMongodb,
            [EnumMember(Value = "AMAZON_DOCUMENT_DB")]
            AmazonDocumentDb,
            [EnumMember(Value = "ORACLE_JSON_COLLECTION")]
            OracleJsonCollection,
            [EnumMember(Value = "ORACLE_REST_DATA_SERVICES")]
            OracleRestDataServices
        };

        /// <value>
        /// The MongoDB technology type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TechnologyType is required.")]
        [JsonProperty(PropertyName = "technologyType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TechnologyTypeEnum> TechnologyType { get; set; }
        
        /// <value>
        /// MongoDB connection string.
        /// e.g.: 'mongodb://mongodb0.example.com:27017/recordsrecords'
        /// 
        /// </value>
        [JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString { get; set; }
        
        /// <value>
        /// The username Oracle GoldenGate uses to connect to the database.
        /// This username must already exist and be available by the database to be connected to.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "databaseId")]
        public string DatabaseId { get; set; }
                ///
        /// <value>
        /// Security Protocol for MongoDB.
        /// </value>
        ///
        public enum SecurityProtocolEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "PLAIN")]
            Plain,
            [EnumMember(Value = "TLS")]
            Tls,
            [EnumMember(Value = "MTLS")]
            Mtls
        };

        /// <value>
        /// Security Protocol for MongoDB.
        /// </value>
        [JsonProperty(PropertyName = "securityProtocol")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SecurityProtocolEnum> SecurityProtocol { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Secret that stores the password Oracle GoldenGate uses to connect the associated database.
        /// Note: When provided, 'password' field must not be provided.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "passwordSecretId")]
        public string PasswordSecretId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Secret that stores the certificate key file of the mtls connection.
        /// - The content of a .pem file containing the client private key (for 2-way SSL).
        /// Note: When provided, 'tlsCertificateKeyFile' field must not be provided.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "tlsCertificateKeyFileSecretId")]
        public string TlsCertificateKeyFileSecretId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Secret that stores the password of the tls certificate key file.
        /// Note: When provided, 'tlsCertificateKeyFilePassword' field must not be provided.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "tlsCertificateKeyFilePasswordSecretId")]
        public string TlsCertificateKeyFilePasswordSecretId { get; set; }
        
        /// <value>
        /// Database Certificate - The base64 encoded content of a .pem file, containing the server public key (for 1 and 2-way SSL).
        /// It is not included in GET responses if the `view=COMPACT` query parameter is specified.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "tlsCaFile")]
        public string TlsCaFile { get; set; }
        
        [JsonProperty(PropertyName = "connectionType")]
        private readonly string connectionType = "MONGODB";
    }
}
