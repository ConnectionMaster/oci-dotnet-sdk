/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GoldengateService.Models
{
    /// <summary>
    /// The metadata specific to a production or development/testing environment.
    /// 
    /// </summary>
    public class DeploymentEnvironmentSummary 
    {
        
        /// <value>
        /// Specifies whether the deployment is used in a production or development/testing environment.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EnvironmentType is required.")]
        [JsonProperty(PropertyName = "environmentType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<EnvironmentType> EnvironmentType { get; set; }
        
        /// <value>
        /// The deployment category defines the broad separation of the deployment type into three categories.
        /// Currently the separation is 'DATA_REPLICATION', 'STREAM_ANALYTICS' and 'DATA_TRANSFORMS'.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Category is required.")]
        [JsonProperty(PropertyName = "category")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DeploymentCategory> Category { get; set; }
        
        /// <value>
        /// An object's Display Name.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The minimum CPU core count.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MinCpuCoreCount is required.")]
        [JsonProperty(PropertyName = "minCpuCoreCount")]
        public System.Nullable<int> MinCpuCoreCount { get; set; }
        
        /// <value>
        /// The default CPU core count.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DefaultCpuCoreCount is required.")]
        [JsonProperty(PropertyName = "defaultCpuCoreCount")]
        public System.Nullable<int> DefaultCpuCoreCount { get; set; }
        
        /// <value>
        /// The maximum CPU core count.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MaxCpuCoreCount is required.")]
        [JsonProperty(PropertyName = "maxCpuCoreCount")]
        public System.Nullable<int> MaxCpuCoreCount { get; set; }
        
        /// <value>
        /// Specifies whether the \"Auto scaling\" option should be enabled by default or not.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsAutoScalingEnabledByDefault is required.")]
        [JsonProperty(PropertyName = "isAutoScalingEnabledByDefault")]
        public System.Nullable<bool> IsAutoScalingEnabledByDefault { get; set; }
        
        /// <value>
        /// The multiplier value between CPU core count and network bandwidth.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NetworkBandwidthPerOcpuInGbps is required.")]
        [JsonProperty(PropertyName = "networkBandwidthPerOcpuInGbps")]
        public System.Nullable<int> NetworkBandwidthPerOcpuInGbps { get; set; }
        
        /// <value>
        /// The multiplier value between CPU core count and memory size.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MemoryPerOcpuInGBs is required.")]
        [JsonProperty(PropertyName = "memoryPerOcpuInGBs")]
        public System.Nullable<int> MemoryPerOcpuInGBs { get; set; }
        
        /// <value>
        /// The multiplier value between CPU core count and storage usage limit size.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "StorageUsageLimitPerOcpuInGBs is required.")]
        [JsonProperty(PropertyName = "storageUsageLimitPerOcpuInGBs")]
        public System.Nullable<int> StorageUsageLimitPerOcpuInGBs { get; set; }
        
    }
}
