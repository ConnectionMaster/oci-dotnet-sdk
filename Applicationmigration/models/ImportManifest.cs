/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApplicationmigrationService.Models
{
    /// <summary>
    /// Manifest describing details about an import source
    /// </summary>
    public class ImportManifest 
    {
        
        /// <value>
        /// the version of the export tool that was used to generate the manifest
        /// </value>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }
        
        /// <value>
        /// the type of application that the export tool was executed against to generate this manifest
        /// </value>
        [JsonProperty(PropertyName = "exportType")]
        public string ExportType { get; set; }
        
        /// <value>
        /// application specific details as parsed from various sources of the application that was exported
        /// </value>
        [JsonProperty(PropertyName = "exportDetails")]
        public System.Object ExportDetails { get; set; }
        
        /// <value>
        /// when this manifest was generated
        /// </value>
        [JsonProperty(PropertyName = "timestamp")]
        public System.Nullable<System.DateTime> Timestamp { get; set; }
        
        /// <value>
        /// the MD5 hash of the export artifact archive that was produced by the export tool and should be used with this manifest
        /// </value>
        [JsonProperty(PropertyName = "md5")]
        public string Md5 { get; set; }
        
        /// <value>
        /// a sha1 hash of all the fields of this manifest (excluding the signature)
        /// </value>
        [JsonProperty(PropertyName = "signature")]
        public string Signature { get; set; }
        
    }
}
