/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentityService.Models
{
    /// <summary>
    /// Users can enable multi-factor authentication (MFA) for their own user accounts. After MFA is enabled, the
    /// user is prompted for a time-based one-time password (TOTP) to authenticate before they can sign in to the
    /// Console. To enable multi-factor authentication, the user must register a mobile device with a TOTP authenticator app
    /// installed. The registration process creates the `MfaTotpDevice` object. The registration process requires
    /// interaction with the Console and cannot be completed programmatically. For more information, see
    /// [Managing Multi-Factor Authentication](https://docs.cloud.oracle.com/Content/Identity/Tasks/usingmfa.htm).
    /// 
    /// </summary>
    public class MfaTotpDevice 
    {
        
        /// <value>
        /// The OCID of the MFA TOTP device.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The seed for the MFA TOTP device (Base32 encoded).
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Seed is required.")]
        [JsonProperty(PropertyName = "seed")]
        public string Seed { get; set; }
        
        /// <value>
        /// The OCID of the user the MFA TOTP device belongs to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UserId is required.")]
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }
        
        /// <value>
        /// Date and time the `MfaTotpDevice` object was created, in the format defined by RFC3339.
        /// <br/>
        /// Example: 2016-08-25T21:10:29.600Z
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// Date and time when this MFA TOTP device will expire, in the format defined by RFC3339.
        /// Null if it never expires.
        /// <br/>
        /// Example: 2016-08-25T21:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeExpires")]
        public System.Nullable<System.DateTime> TimeExpires { get; set; }
                ///
        /// <value>
        /// The MFA TOTP device's current state. After creating the MFA TOTP device, make sure its `lifecycleState` changes from
        /// CREATING to ACTIVE before using it.
        /// 
        /// </value>
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "CREATING")]
            Creating,
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "INACTIVE")]
            Inactive,
            [EnumMember(Value = "DELETING")]
            Deleting,
            [EnumMember(Value = "DELETED")]
            Deleted
        };

        /// <value>
        /// The MFA TOTP device's current state. After creating the MFA TOTP device, make sure its `lifecycleState` changes from
        /// CREATING to ACTIVE before using it.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The detailed status of INACTIVE lifecycleState.
        /// Allowed values are:
        ///  - 1 - SUSPENDED
        ///  - 2 - DISABLED
        ///  - 4 - BLOCKED
        ///  - 8 - LOCKED
        /// 
        /// </value>
        [JsonProperty(PropertyName = "inactiveStatus")]
        public System.Nullable<long> InactiveStatus { get; set; }
        
        /// <value>
        /// Flag to indicate if the MFA TOTP device has been activated.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsActivated is required.")]
        [JsonProperty(PropertyName = "isActivated")]
        public System.Nullable<bool> IsActivated { get; set; }
        
    }
}
