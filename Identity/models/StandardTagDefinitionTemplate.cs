/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentityService.Models
{
    /// <summary>
    /// The template of the tag definition. This object includes necessary details to create the provided standard tag definition.
    /// </summary>
    public class StandardTagDefinitionTemplate 
    {
        
        /// <value>
        /// The default description of the tag namespace that users can use to create the tag definition
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Description is required.")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The name of this standard tag definition
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TagDefinitionName is required.")]
        [JsonProperty(PropertyName = "tagDefinitionName")]
        public string TagDefinitionName { get; set; }
                ///
        /// <value>
        /// The type of tag definition. Enum or string.
        /// </value>
        ///
        public enum TypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENUM")]
            Enum,
            [EnumMember(Value = "STRING")]
            String
        };

        /// <value>
        /// The type of tag definition. Enum or string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TypeEnum> Type { get; set; }
        
        /// <value>
        /// List of possible values. An optional parameter that will be present if the type of definition is enum.
        /// </value>
        [JsonProperty(PropertyName = "possibleValues")]
        public System.Collections.Generic.List<string> PossibleValues { get; set; }
        
        /// <value>
        /// Is the tag a cost tracking tag. Default will be false as cost tracking tags have been deprecated
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsCostTracking is required.")]
        [JsonProperty(PropertyName = "isCostTracking")]
        public System.Nullable<bool> IsCostTracking { get; set; }
                ///
        /// <value>
        /// The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
        /// </value>
        ///
        public enum EnumMutabilityEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "IMMUTABLE")]
            Immutable,
            [EnumMember(Value = "MUTABLE")]
            Mutable,
            [EnumMember(Value = "APPENDABLE")]
            Appendable
        };

        /// <value>
        /// The mutability of the possible values list for enum tags. This will default to IMMUTABLE for string value tags
        /// </value>
        [JsonProperty(PropertyName = "enumMutability")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<EnumMutabilityEnum> EnumMutability { get; set; }
        
    }
}
