/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// User provides a secret OCID, which will be used to retrieve the password to connect to the database.
    /// 
    /// </summary>
    public class DatabaseSecretCredentialDetails : DatabaseCredentialDetails
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Secret
        /// where the database password is stored.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PasswordSecretId is required.")]
        [JsonProperty(PropertyName = "passwordSecretId")]
        public string PasswordSecretId { get; set; }
        
        /// <value>
        /// The user to connect to the database.
        /// </value>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }
                ///
        /// <value>
        /// The role of the database user.
        /// </value>
        ///
        public enum RoleEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "NORMAL")]
            Normal,
            [EnumMember(Value = "SYSDBA")]
            Sysdba,
            [EnumMember(Value = "SYSDG")]
            Sysdg
        };

        /// <value>
        /// The role of the database user.
        /// </value>
        [JsonProperty(PropertyName = "role")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RoleEnum> Role { get; set; }
        
        [JsonProperty(PropertyName = "credentialType")]
        private readonly string credentialType = "SECRET";
    }
}
