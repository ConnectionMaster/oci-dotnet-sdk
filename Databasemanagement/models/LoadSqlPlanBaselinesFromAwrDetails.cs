/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The details required to load plans from Automatic Workload Repository (AWR).
    /// 
    /// </summary>
    public class LoadSqlPlanBaselinesFromAwrDetails 
    {
        
        /// <value>
        /// The name of the database job used for loading SQL plan baselines.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "JobName is required.")]
        [JsonProperty(PropertyName = "jobName")]
        public string JobName { get; set; }
        
        /// <value>
        /// The description of the job.
        /// </value>
        [JsonProperty(PropertyName = "jobDescription")]
        public string JobDescription { get; set; }
        
        /// <value>
        /// The begin snapshot.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BeginSnapshot is required.")]
        [JsonProperty(PropertyName = "beginSnapshot")]
        public System.Nullable<int> BeginSnapshot { get; set; }
        
        /// <value>
        /// The end snapshot.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EndSnapshot is required.")]
        [JsonProperty(PropertyName = "endSnapshot")]
        public System.Nullable<int> EndSnapshot { get; set; }
        
        /// <value>
        /// A filter applied to AWR to select only qualifying plans to be loaded.
        /// By default all plans in AWR are selected. The filter can take the form of
        /// any `WHERE` clause predicate that can be specified against the column
        /// `DBA_HIST_SQLTEXT.SQL_TEXT`. An example is `sql_text like 'SELECT %'`.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "sqlTextFilter")]
        public string SqlTextFilter { get; set; }
        
        /// <value>
        /// Indicates whether the plans are loaded as fixed plans (`true`) or non-fixed plans (`false`).
        /// By default, they are loaded as non-fixed plans.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isFixed")]
        public System.Nullable<bool> IsFixed { get; set; }
        
        /// <value>
        /// Indicates whether the loaded plans are enabled (`true`) or not (`false`).
        /// By default, they are enabled.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isEnabled")]
        public System.Nullable<bool> IsEnabled { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Credentials is required.")]
        [JsonProperty(PropertyName = "credentials")]
        public ManagedDatabaseCredential Credentials { get; set; }
        
    }
}
