/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// Information pertaining to binary logs of a MySQL server.
    /// </summary>
    public class ManagedMySqlDatabaseBinaryLogInformation 
    {
        
        /// <value>
        /// Status of binary logging on this server.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BinaryLogging is required.")]
        [JsonProperty(PropertyName = "binaryLogging")]
        public string BinaryLogging { get; set; }
        
        /// <value>
        /// The binary logging format used by this server.
        /// </value>
        [JsonProperty(PropertyName = "binaryLogFormat")]
        public string BinaryLogFormat { get; set; }
        
        /// <value>
        /// Indicates whether compression is enabled for transactions written to binary log files on this server.
        /// </value>
        [JsonProperty(PropertyName = "binaryLogCompression")]
        public string BinaryLogCompression { get; set; }
        
        /// <value>
        /// The compression ratio for binary log expressed as a percentage.
        /// </value>
        [JsonProperty(PropertyName = "binaryLogCompressionPercent")]
        public System.Nullable<int> BinaryLogCompressionPercent { get; set; }
        
        /// <value>
        /// The name of the binary log file.
        /// </value>
        [JsonProperty(PropertyName = "binaryLogName")]
        public string BinaryLogName { get; set; }
        
        /// <value>
        /// The position within the binary log file.
        /// </value>
        [JsonProperty(PropertyName = "binaryLogPosition")]
        public System.Nullable<long> BinaryLogPosition { get; set; }
        
    }
}
