/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// Information about a member of a MySQL server group replication for high availability.
    /// </summary>
    public class ManagedMySqlDatabaseHighAvailabilityMemberSummary 
    {
        
        /// <value>
        /// The host name of the group member that clients use to connect to it.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MemberHost is required.")]
        [JsonProperty(PropertyName = "memberHost")]
        public string MemberHost { get; set; }
        
        /// <value>
        /// The port number of the group member that clients use to connect to it.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MemberPort is required.")]
        [JsonProperty(PropertyName = "memberPort")]
        public System.Nullable<int> MemberPort { get; set; }
        
        /// <value>
        /// The current state of the group member.
        /// </value>
        [JsonProperty(PropertyName = "memberState")]
        public string MemberState { get; set; }
        
        /// <value>
        /// The current role of the group member in the group.
        /// </value>
        [JsonProperty(PropertyName = "memberRole")]
        public string MemberRole { get; set; }
        
        /// <value>
        /// The Universally Unique Identifier (UUID) of the member server.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MemberUuid is required.")]
        [JsonProperty(PropertyName = "memberUuid")]
        public string MemberUuid { get; set; }
        
    }
}
