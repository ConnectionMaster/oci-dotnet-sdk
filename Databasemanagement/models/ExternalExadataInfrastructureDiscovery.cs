/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The result of the Exadata infrastructure discovery.
    /// </summary>
    public class ExternalExadataInfrastructureDiscovery : EntityDiscovered
    {
        
        /// <value>
        /// The unique key of the discovery request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DiscoveryKey is required.")]
        [JsonProperty(PropertyName = "discoveryKey")]
        public string DiscoveryKey { get; set; }
                ///
        /// <value>
        /// The Oracle license model that applies to the database management resources.
        /// 
        /// </value>
        ///
        public enum LicenseModelEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "LICENSE_INCLUDED")]
            LicenseIncluded,
            [EnumMember(Value = "BRING_YOUR_OWN_LICENSE")]
            BringYourOwnLicense
        };

        /// <value>
        /// The Oracle license model that applies to the database management resources.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "licenseModel")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LicenseModelEnum> LicenseModel { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
                ///
        /// <value>
        /// The size of the Exadata infrastructure.
        /// </value>
        ///
        public enum RackSizeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "FULL")]
            Full,
            [EnumMember(Value = "HALF")]
            Half,
            [EnumMember(Value = "QUARTER")]
            Quarter,
            [EnumMember(Value = "EIGHTH")]
            Eighth,
            [EnumMember(Value = "UNKNOWN")]
            Unknown
        };

        /// <value>
        /// The size of the Exadata infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "rackSize")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RackSizeEnum> RackSize { get; set; }
        
        /// <value>
        /// The Oracle home path of the Exadata infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "gridHomePath")]
        public string GridHomePath { get; set; }
        
        /// <value>
        /// The list of DB systems in the Exadata infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "dbSystems")]
        public System.Collections.Generic.List<ExternalDatabaseSystemDiscoverySummary> DbSystems { get; set; }
        
        [JsonProperty(PropertyName = "storageGrid")]
        public ExternalStorageGridDiscoverySummary StorageGrid { get; set; }
        
        /// <value>
        /// The list of storage servers in the Exadata infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "storageServers")]
        public System.Collections.Generic.List<ExternalStorageServerDiscoverySummary> StorageServers { get; set; }
        
        [JsonProperty(PropertyName = "entityType")]
        private readonly string entityType = "INFRASTRUCTURE_DISCOVER";
    }
}
