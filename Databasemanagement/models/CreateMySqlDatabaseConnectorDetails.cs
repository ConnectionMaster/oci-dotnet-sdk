/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// Create Details of external database connector.
    /// </summary>
    public class CreateMySqlDatabaseConnectorDetails 
    {
        
        /// <value>
        /// External MySQL Database Connector Name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Agent Id of the MACS agent.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MacsAgentId is required.")]
        [JsonProperty(PropertyName = "macsAgentId")]
        public string MacsAgentId { get; set; }
        
        /// <value>
        /// Host name for Connector.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "HostName is required.")]
        [JsonProperty(PropertyName = "hostName")]
        public string HostName { get; set; }
        
        /// <value>
        /// Port number to connect to External MySQL Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Port is required.")]
        [JsonProperty(PropertyName = "port")]
        public System.Nullable<int> Port { get; set; }
        
        /// <value>
        /// Protocol to be used to connect to External MySQL Database; TCP, TCP with SSL or Socket.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NetworkProtocol is required.")]
        [JsonProperty(PropertyName = "networkProtocol")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MySqlNetworkProtocolType> NetworkProtocol { get; set; }
        
        /// <value>
        /// OCID of MySQL Database resource.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ExternalDatabaseId is required.")]
        [JsonProperty(PropertyName = "externalDatabaseId")]
        public string ExternalDatabaseId { get; set; }
        
        /// <value>
        /// Type of the credential.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CredentialType is required.")]
        [JsonProperty(PropertyName = "credentialType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MySqlCredType> CredentialType { get; set; }
        
        /// <value>
        /// If using existing SSL secret to connect, OCID for the secret resource.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SslSecretId is required.")]
        [JsonProperty(PropertyName = "sslSecretId")]
        public string SslSecretId { get; set; }
        
    }
}
