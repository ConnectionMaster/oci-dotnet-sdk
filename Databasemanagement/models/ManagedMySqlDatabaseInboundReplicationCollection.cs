/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The collection of inbound replication records for a specific MySQL server.
    /// </summary>
    public class ManagedMySqlDatabaseInboundReplicationCollection 
    {
        
        /// <value>
        /// The number of sources this server is replicating from.
        /// </value>
        [JsonProperty(PropertyName = "inboundReplicationsCount")]
        public System.Nullable<int> InboundReplicationsCount { get; set; }
        
        /// <value>
        /// The Universally Unique Identifier (UUID) value of this replica server.
        /// </value>
        [JsonProperty(PropertyName = "replicaUuid")]
        public string ReplicaUuid { get; set; }
        
        /// <value>
        /// The server ID value of this replica.
        /// </value>
        [JsonProperty(PropertyName = "replicaServerId")]
        public System.Nullable<long> ReplicaServerId { get; set; }
        
        /// <value>
        /// The number of applier threads for executing replication transactions in parallel.
        /// </value>
        [JsonProperty(PropertyName = "parallelWorkers")]
        public System.Nullable<int> ParallelWorkers { get; set; }
        
        /// <value>
        /// For multi-threaded replicas, indicates if transactions are executed and committed on the replica in the same order as they appear in the relay log.
        /// </value>
        [JsonProperty(PropertyName = "preserveCommitOrder")]
        public string PreserveCommitOrder { get; set; }
        
        /// <value>
        /// A list of ManagedMySqlDatabaseInboundReplicationSummary records.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Items is required.")]
        [JsonProperty(PropertyName = "items")]
        public System.Collections.Generic.List<ManagedMySqlDatabaseInboundReplicationSummary> Items { get; set; }
        
    }
}
