/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The details of the SQL job.
    /// </summary>
    public class SqlJob : Job
    {
                ///
        /// <value>
        /// The type of SQL. This is a mandatory field for the EXECUTE_SQL operationType.
        /// </value>
        ///
        public enum SqlTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "QUERY")]
            Query,
            [EnumMember(Value = "DML")]
            Dml,
            [EnumMember(Value = "DDL")]
            Ddl,
            [EnumMember(Value = "PLSQL")]
            Plsql
        };

        /// <value>
        /// The type of SQL. This is a mandatory field for the EXECUTE_SQL operationType.
        /// </value>
        [JsonProperty(PropertyName = "sqlType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SqlTypeEnum> SqlType { get; set; }
        
        /// <value>
        /// The SQL text to be executed in the job. This is a mandatory field for the EXECUTE_SQL operationType.
        /// </value>
        [JsonProperty(PropertyName = "sqlText")]
        public string SqlText { get; set; }
        
        [JsonProperty(PropertyName = "inBinds")]
        public JobInBindsDetails InBinds { get; set; }
        
        [JsonProperty(PropertyName = "outBinds")]
        public JobOutBindsDetails OutBinds { get; set; }
                ///
        /// <value>
        /// The SQL operation type.
        /// </value>
        ///
        public enum OperationTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "EXECUTE_SQL")]
            ExecuteSql
        };

        /// <value>
        /// The SQL operation type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OperationType is required.")]
        [JsonProperty(PropertyName = "operationType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<OperationTypeEnum> OperationType { get; set; }
        
        /// <value>
        /// The database user name used to execute the SQL job. If the job is being executed on a Managed Database Group,
        /// then the user name should exist on all the databases in the group with the same password.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }
                ///
        /// <value>
        /// The role of the database user. Indicates whether the database user is a normal user or sysdba.
        /// </value>
        ///
        public enum RoleEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "NORMAL")]
            Normal,
            [EnumMember(Value = "SYSDBA")]
            Sysdba
        };

        /// <value>
        /// The role of the database user. Indicates whether the database user is a normal user or sysdba.
        /// </value>
        [JsonProperty(PropertyName = "role")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RoleEnum> Role { get; set; }
        
        [JsonProperty(PropertyName = "jobType")]
        private readonly string jobType = "SQL";
    }
}
