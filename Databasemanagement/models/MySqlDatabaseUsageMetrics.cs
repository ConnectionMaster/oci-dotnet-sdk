/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The list of aggregated metrics for Managed MySQL Databases in the fleet.
    /// </summary>
    public class MySqlDatabaseUsageMetrics 
    {
        
        /// <value>
        /// The OCID of the compartment where the Managed MySQL Database resides.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The display name of the Managed MySQL Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseName is required.")]
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }
        
        /// <value>
        /// Indicates MySQL Database type, ONPREMISE or MySQL Database System.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseType is required.")]
        [JsonProperty(PropertyName = "databaseType")]
        public string DatabaseType { get; set; }
        
        /// <value>
        /// The type of MySQL Database System.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MdsDeploymentType is required.")]
        [JsonProperty(PropertyName = "mdsDeploymentType")]
        public string MdsDeploymentType { get; set; }
        
        /// <value>
        /// The lifecycle state of the MySQL Database System.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MdslifecycleState is required.")]
        [JsonProperty(PropertyName = "mdslifecycleState")]
        public string MdslifecycleState { get; set; }
        
        /// <value>
        /// The version of the MySQL Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseVersion is required.")]
        [JsonProperty(PropertyName = "databaseVersion")]
        public string DatabaseVersion { get; set; }
        
        /// <value>
        /// The OCID of the Managed MySQL Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DbId is required.")]
        [JsonProperty(PropertyName = "dbId")]
        public string DbId { get; set; }
        
        /// <value>
        /// The status of the MySQL Database. Indicates whether the status of the database
        /// is UP, DOWN, or UNKNOWN at the current time.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseStatus is required.")]
        [JsonProperty(PropertyName = "databaseStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<MySqlDatabaseStatus> DatabaseStatus { get; set; }
        
        /// <value>
        /// Indicates whether HeatWave is enabled for the MySQL Database System or not.
        /// </value>
        [JsonProperty(PropertyName = "isHeatWaveEnabled")]
        public System.Nullable<bool> IsHeatWaveEnabled { get; set; }
        
        /// <value>
        /// The name of the HeatWave cluster.
        /// </value>
        [JsonProperty(PropertyName = "heatWaveClusterDisplayName")]
        public string HeatWaveClusterDisplayName { get; set; }
        
        /// <value>
        /// The number of nodes in the HeatWave cluster.
        /// </value>
        [JsonProperty(PropertyName = "heatWaveNodeCount")]
        public System.Nullable<int> HeatWaveNodeCount { get; set; }
        
        /// <value>
        /// A list of the database health metrics like CPU, Storage, and Memory.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Metrics is required.")]
        [JsonProperty(PropertyName = "metrics")]
        public System.Collections.Generic.List<MySqlFleetMetricDefinition> Metrics { get; set; }
        
    }
}
