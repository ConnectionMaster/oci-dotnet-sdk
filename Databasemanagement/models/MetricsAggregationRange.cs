/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The set of aggregated data returned for a metric.
    /// </summary>
    public class MetricsAggregationRange 
    {
        
        [JsonProperty(PropertyName = "header")]
        public DbManagementAnalyticsMetric Header { get; set; }
        
        /// <value>
        /// The list of metrics returned for the specified request. Each of the metrics
        /// has a `metricName` and additional properties like `metadata`, `dimensions`.
        /// If a property is not set, then use the value from `header`.
        /// <br/>
        /// Suppose `m` be an item in the `metrics` array:
        /// - If `m.metricName` is not set, use `header.metricName` instead
        /// - If `m.durationInSeconds` is not set, use `header.durationInSeconds` instead
        /// - If `m.dimensions` is not set, use `header.dimensions` instead
        /// - If `m.metadata` is not set, use `header.metadata` instead
        /// 
        /// </value>
        [JsonProperty(PropertyName = "metrics")]
        public System.Collections.Generic.List<DbManagementAnalyticsMetric> Metrics { get; set; }
        
        /// <value>
        /// The beginning of the time range (inclusive) of the returned metric data.
        /// </value>
        [JsonProperty(PropertyName = "rangeStartTimeInEpochSeconds")]
        public System.Nullable<long> RangeStartTimeInEpochSeconds { get; set; }
        
        /// <value>
        /// The end of the time range (exclusive) of the returned metric data.
        /// </value>
        [JsonProperty(PropertyName = "rangeEndTimeInEpochSeconds")]
        public System.Nullable<long> RangeEndTimeInEpochSeconds { get; set; }
        
    }
}
