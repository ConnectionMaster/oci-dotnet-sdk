/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The details of an Oracle listener discovered in a cloud DB system discovery run.
    /// </summary>
    public class DiscoveredCloudListener : DiscoveredCloudDbSystemComponent
    {
        
        /// <value>
        /// The name of the DB node.
        /// </value>
        [JsonProperty(PropertyName = "dbNodeName")]
        public string DbNodeName { get; set; }
        
        /// <value>
        /// The Oracle home location of the listener.
        /// </value>
        [JsonProperty(PropertyName = "oracleHome")]
        public string OracleHome { get; set; }
        
        /// <value>
        /// The listener alias.
        /// </value>
        [JsonProperty(PropertyName = "listenerAlias")]
        public string ListenerAlias { get; set; }
        
        /// <value>
        /// The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
        /// </value>
        [JsonProperty(PropertyName = "adrHomeDirectory")]
        public string AdrHomeDirectory { get; set; }
        
        /// <value>
        /// The destination directory of the listener log file.
        /// </value>
        [JsonProperty(PropertyName = "logDirectory")]
        public string LogDirectory { get; set; }
        
        /// <value>
        /// The destination directory of the listener trace file.
        /// </value>
        [JsonProperty(PropertyName = "traceDirectory")]
        public string TraceDirectory { get; set; }
        
        /// <value>
        /// The listener version.
        /// </value>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }
                ///
        /// <value>
        /// The type of listener.
        /// </value>
        ///
        public enum ListenerTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ASM")]
            Asm,
            [EnumMember(Value = "LOCAL")]
            Local,
            [EnumMember(Value = "SCAN")]
            Scan
        };

        /// <value>
        /// The type of listener.
        /// </value>
        [JsonProperty(PropertyName = "listenerType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ListenerTypeEnum> ListenerType { get; set; }
        
        /// <value>
        /// The name of the host on which the cloud listener is running.
        /// </value>
        [JsonProperty(PropertyName = "hostName")]
        public string HostName { get; set; }
        
        /// <value>
        /// The list of protocol addresses the listener is configured to listen on.
        /// </value>
        [JsonProperty(PropertyName = "endpoints")]
        public System.Collections.Generic.List<CloudListenerEndpoint> Endpoints { get; set; }
        
        [JsonProperty(PropertyName = "connector")]
        public CloudDbSystemDiscoveryConnector Connector { get; set; }
        
        [JsonProperty(PropertyName = "componentType")]
        private readonly string componentType = "LISTENER";
    }
}
