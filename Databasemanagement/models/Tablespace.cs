/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// The details of a tablespace.
    /// </summary>
    public class Tablespace 
    {
        
        /// <value>
        /// The name of the tablespace.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
                ///
        /// <value>
        /// The type of tablespace.
        /// </value>
        ///
        public enum TypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "UNDO")]
            Undo,
            [EnumMember(Value = "LOST_WRITE_PROTECTION")]
            LostWriteProtection,
            [EnumMember(Value = "PERMANENT")]
            Permanent,
            [EnumMember(Value = "TEMPORARY")]
            Temporary
        };

        /// <value>
        /// The type of tablespace.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TypeEnum> Type { get; set; }
                ///
        /// <value>
        /// The status of the tablespace.
        /// </value>
        ///
        public enum StatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ONLINE")]
            Online,
            [EnumMember(Value = "OFFLINE")]
            Offline,
            [EnumMember(Value = "READ_ONLY")]
            ReadOnly
        };

        /// <value>
        /// The status of the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
        
        /// <value>
        /// The tablespace block size.
        /// </value>
        [JsonProperty(PropertyName = "blockSizeBytes")]
        public System.Nullable<decimal> BlockSizeBytes { get; set; }
                ///
        /// <value>
        /// The default logging attribute.
        /// </value>
        ///
        public enum LoggingEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "LOGGING")]
            Logging,
            [EnumMember(Value = "NOLOGGING")]
            Nologging
        };

        /// <value>
        /// The default logging attribute.
        /// </value>
        [JsonProperty(PropertyName = "logging")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LoggingEnum> Logging { get; set; }
        
        /// <value>
        /// Indicates whether the tablespace is under Force Logging mode.
        /// </value>
        [JsonProperty(PropertyName = "isForceLogging")]
        public System.Nullable<bool> IsForceLogging { get; set; }
                ///
        /// <value>
        /// Indicates whether the extents in the tablespace are Locally managed or Dictionary managed.
        /// </value>
        ///
        public enum ExtentManagementEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "LOCAL")]
            Local,
            [EnumMember(Value = "DICTIONARY")]
            Dictionary
        };

        /// <value>
        /// Indicates whether the extents in the tablespace are Locally managed or Dictionary managed.
        /// </value>
        [JsonProperty(PropertyName = "extentManagement")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ExtentManagementEnum> ExtentManagement { get; set; }
                ///
        /// <value>
        /// The type of extent allocation in effect for the tablespace.
        /// </value>
        ///
        public enum AllocationTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SYSTEM")]
            System,
            [EnumMember(Value = "UNIFORM")]
            Uniform,
            [EnumMember(Value = "USER")]
            User
        };

        /// <value>
        /// The type of extent allocation in effect for the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "allocationType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AllocationTypeEnum> AllocationType { get; set; }
        
        /// <value>
        /// Indicates whether the tablespace is plugged in.
        /// </value>
        [JsonProperty(PropertyName = "isPluggedIn")]
        public System.Nullable<bool> IsPluggedIn { get; set; }
                ///
        /// <value>
        /// Indicates whether the free and used segment space in the tablespace is managed using free lists (MANUAL) or bitmaps (AUTO).
        /// </value>
        ///
        public enum SegmentSpaceManagementEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "MANUAL")]
            Manual,
            [EnumMember(Value = "AUTO")]
            Auto
        };

        /// <value>
        /// Indicates whether the free and used segment space in the tablespace is managed using free lists (MANUAL) or bitmaps (AUTO).
        /// </value>
        [JsonProperty(PropertyName = "segmentSpaceManagement")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SegmentSpaceManagementEnum> SegmentSpaceManagement { get; set; }
                ///
        /// <value>
        /// Indicates whether default table compression is enabled or disabled.
        /// </value>
        ///
        public enum DefaultTableCompressionEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLED")]
            Disabled
        };

        /// <value>
        /// Indicates whether default table compression is enabled or disabled.
        /// </value>
        [JsonProperty(PropertyName = "defaultTableCompression")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultTableCompressionEnum> DefaultTableCompression { get; set; }
                ///
        /// <value>
        /// Indicates whether undo retention guarantee is enabled for the tablespace.
        /// </value>
        ///
        public enum RetentionEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "GUARANTEE")]
            Guarantee,
            [EnumMember(Value = "NOGUARANTEE")]
            Noguarantee,
            [EnumMember(Value = "NOT_APPLY")]
            NotApply
        };

        /// <value>
        /// Indicates whether undo retention guarantee is enabled for the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "retention")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RetentionEnum> Retention { get; set; }
        
        /// <value>
        /// Indicates whether the tablespace is a Bigfile tablespace or a Smallfile tablespace.
        /// </value>
        [JsonProperty(PropertyName = "isBigfile")]
        public System.Nullable<bool> IsBigfile { get; set; }
                ///
        /// <value>
        /// Indicates whether predicates are evaluated by Host or by Storage.
        /// </value>
        ///
        public enum PredicateEvaluationEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "HOST")]
            Host,
            [EnumMember(Value = "STORAGE")]
            Storage
        };

        /// <value>
        /// Indicates whether predicates are evaluated by Host or by Storage.
        /// </value>
        [JsonProperty(PropertyName = "predicateEvaluation")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PredicateEvaluationEnum> PredicateEvaluation { get; set; }
        
        /// <value>
        /// Indicates whether the tablespace is encrypted.
        /// </value>
        [JsonProperty(PropertyName = "isEncrypted")]
        public System.Nullable<bool> IsEncrypted { get; set; }
                ///
        /// <value>
        /// The operation type for which default compression is enabled.
        /// </value>
        ///
        public enum CompressForEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "BASIC")]
            Basic,
            [EnumMember(Value = "ADVANCED")]
            Advanced,
            [EnumMember(Value = "QUERY_LOW")]
            QueryLow,
            [EnumMember(Value = "QUERY_HIGH")]
            QueryHigh,
            [EnumMember(Value = "ARCHIVE_LOW")]
            ArchiveLow,
            [EnumMember(Value = "ARCHIVE_HIGH")]
            ArchiveHigh,
            [EnumMember(Value = "DIRECT_LOAD_ONLY")]
            DirectLoadOnly,
            [EnumMember(Value = "FOR_ALL_OPERATIONS")]
            ForAllOperations
        };

        /// <value>
        /// The operation type for which default compression is enabled.
        /// </value>
        [JsonProperty(PropertyName = "compressFor")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CompressForEnum> CompressFor { get; set; }
                ///
        /// <value>
        /// Indicates whether the In-Memory Column Store (IM column store) is by default enabled or disabled for tables in the tablespace.
        /// </value>
        ///
        public enum DefaultInMemoryEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLED")]
            Disabled
        };

        /// <value>
        /// Indicates whether the In-Memory Column Store (IM column store) is by default enabled or disabled for tables in the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemory")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultInMemoryEnum> DefaultInMemory { get; set; }
                ///
        /// <value>
        /// Indicates the default priority for In-Memory Column Store (IM column store) population for the tablespace.
        /// </value>
        ///
        public enum DefaultInMemoryPriorityEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "LOW")]
            Low,
            [EnumMember(Value = "MEDIUM")]
            Medium,
            [EnumMember(Value = "HIGH")]
            High,
            [EnumMember(Value = "CRITICAL")]
            Critical,
            [EnumMember(Value = "NONE")]
            None
        };

        /// <value>
        /// Indicates the default priority for In-Memory Column Store (IM column store) population for the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemoryPriority")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultInMemoryPriorityEnum> DefaultInMemoryPriority { get; set; }
                ///
        /// <value>
        /// Indicates how the IM column store is distributed by default for the tablespace in an Oracle Real Application Clusters (Oracle RAC) environment.
        /// </value>
        ///
        public enum DefaultInMemoryDistributeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "AUTO")]
            Auto,
            [EnumMember(Value = "BY_ROWID_RANGE")]
            ByRowidRange,
            [EnumMember(Value = "BY_PARTITION")]
            ByPartition,
            [EnumMember(Value = "BY_SUBPARTITION")]
            BySubpartition
        };

        /// <value>
        /// Indicates how the IM column store is distributed by default for the tablespace in an Oracle Real Application Clusters (Oracle RAC) environment.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemoryDistribute")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultInMemoryDistributeEnum> DefaultInMemoryDistribute { get; set; }
                ///
        /// <value>
        /// Indicates the default compression level for the IM column store for the tablespace.
        /// </value>
        ///
        public enum DefaultInMemoryCompressionEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "NO_MEMCOMPRESS")]
            NoMemcompress,
            [EnumMember(Value = "FOR_DML")]
            ForDml,
            [EnumMember(Value = "FOR_QUERY_LOW")]
            ForQueryLow,
            [EnumMember(Value = "FOR_QUERY_HIGH")]
            ForQueryHigh,
            [EnumMember(Value = "FOR_CAPACITY_LOW")]
            ForCapacityLow,
            [EnumMember(Value = "FOR_CAPACITY_HIGH")]
            ForCapacityHigh
        };

        /// <value>
        /// Indicates the default compression level for the IM column store for the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemoryCompression")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultInMemoryCompressionEnum> DefaultInMemoryCompression { get; set; }
                ///
        /// <value>
        /// Indicates the duplicate setting for the IM column store in an Oracle RAC environment.
        /// </value>
        ///
        public enum DefaultInMemoryDuplicateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "NO_DUPLICATE")]
            NoDuplicate,
            [EnumMember(Value = "DUPLICATE")]
            Duplicate,
            [EnumMember(Value = "DUPLICATE_ALL")]
            DuplicateAll
        };

        /// <value>
        /// Indicates the duplicate setting for the IM column store in an Oracle RAC environment.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemoryDuplicate")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultInMemoryDuplicateEnum> DefaultInMemoryDuplicate { get; set; }
                ///
        /// <value>
        /// Indicates whether the tablespace is for shared tablespace, or for local temporary tablespace for leaf (read-only) instances, or for local temporary tablespace for all instance types.
        /// </value>
        ///
        public enum SharedEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SHARED")]
            Shared,
            [EnumMember(Value = "LOCAL_ON_LEAF")]
            LocalOnLeaf,
            [EnumMember(Value = "LOCAL_ON_ALL")]
            LocalOnAll
        };

        /// <value>
        /// Indicates whether the tablespace is for shared tablespace, or for local temporary tablespace for leaf (read-only) instances, or for local temporary tablespace for all instance types.
        /// </value>
        [JsonProperty(PropertyName = "shared")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SharedEnum> Shared { get; set; }
                ///
        /// <value>
        /// Indicates whether default index compression is enabled or disabled.
        /// </value>
        ///
        public enum DefaultIndexCompressionEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLED")]
            Disabled
        };

        /// <value>
        /// Indicates whether default index compression is enabled or disabled.
        /// </value>
        [JsonProperty(PropertyName = "defaultIndexCompression")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultIndexCompressionEnum> DefaultIndexCompression { get; set; }
                ///
        /// <value>
        /// The operation type for which default index compression is enabled.
        /// </value>
        ///
        public enum IndexCompressForEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ADVANCED_LOW")]
            AdvancedLow,
            [EnumMember(Value = "ADVANCED_HIGH")]
            AdvancedHigh,
            [EnumMember(Value = "NONE")]
            None
        };

        /// <value>
        /// The operation type for which default index compression is enabled.
        /// </value>
        [JsonProperty(PropertyName = "indexCompressFor")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<IndexCompressForEnum> IndexCompressFor { get; set; }
        
        /// <value>
        /// This specifies the default value for the CELLMEMORY attribute that tables created in the tablespace will inherit unless the behavior is overridden explicitly. This column is intended for use with Oracle Exadata.
        /// </value>
        [JsonProperty(PropertyName = "defaultCellMemory")]
        public string DefaultCellMemory { get; set; }
                ///
        /// <value>
        /// Indicates how the IM column store is populated on various instances by default for the tablespace.
        /// </value>
        ///
        public enum DefaultInMemoryServiceEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "DEFAULT")]
            Default,
            [EnumMember(Value = "NONE")]
            None,
            [EnumMember(Value = "ALL")]
            All,
            [EnumMember(Value = "USER_DEFINED")]
            UserDefined
        };

        /// <value>
        /// Indicates how the IM column store is populated on various instances by default for the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemoryService")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DefaultInMemoryServiceEnum> DefaultInMemoryService { get; set; }
        
        /// <value>
        /// Indicates the service name for the service on which the IM column store should be populated by default for the tablespace. This column has a value only when the corresponding DEF_INMEMORY_SERVICE is USER_DEFINED. In all other cases, this column is null.
        /// </value>
        [JsonProperty(PropertyName = "defaultInMemoryServiceName")]
        public string DefaultInMemoryServiceName { get; set; }
                ///
        /// <value>
        /// The lost write protection setting for the tablespace.
        /// </value>
        ///
        public enum LostWriteProtectEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "PROTECT_OFF")]
            ProtectOff,
            [EnumMember(Value = "SUSPEND")]
            Suspend
        };

        /// <value>
        /// The lost write protection setting for the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "lostWriteProtect")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LostWriteProtectEnum> LostWriteProtect { get; set; }
        
        /// <value>
        /// Indicates whether this is a chunk tablespace.
        /// </value>
        [JsonProperty(PropertyName = "isChunkTablespace")]
        public System.Nullable<bool> IsChunkTablespace { get; set; }
        
        /// <value>
        /// The temporary tablespace group.
        /// </value>
        [JsonProperty(PropertyName = "tempGroup")]
        public string TempGroup { get; set; }
        
        /// <value>
        /// The maximum tablespace size in KB. If the tablespace contains any data files with Autoextend enabled, then this column displays the amount of underlying free storage space for the tablespace. For example, if the current tablespace size is 1 GB, the combined maximum size of all its data files is 32 GB, and its underlying storage (for example, ASM or file system storage) has 20 GB of free space, then this column will have a value of approximately 20 GB. If the tablespace contains only data files with autoextend disabled, then this column displays the allocated space for the entire tablespace, that is, the combined size of all data files in the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "maxSizeKB")]
        public System.Nullable<decimal> MaxSizeKB { get; set; }
        
        /// <value>
        /// The allocated tablespace size in KB.
        /// </value>
        [JsonProperty(PropertyName = "allocatedSizeKB")]
        public System.Nullable<decimal> AllocatedSizeKB { get; set; }
        
        /// <value>
        /// The size of the tablespace available for user data in KB. The difference between tablespace size and user data size is used for storing metadata.
        /// </value>
        [JsonProperty(PropertyName = "userSizeKB")]
        public System.Nullable<decimal> UserSizeKB { get; set; }
        
        /// <value>
        /// The free space available in the tablespace in KB.
        /// </value>
        [JsonProperty(PropertyName = "freeSpaceKB")]
        public System.Nullable<decimal> FreeSpaceKB { get; set; }
        
        /// <value>
        /// The total space used by the tablespace in KB.
        /// </value>
        [JsonProperty(PropertyName = "usedSpaceKB")]
        public System.Nullable<decimal> UsedSpaceKB { get; set; }
        
        /// <value>
        /// The percentage of used space out of the maximum available space in the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "usedPercentAvailable")]
        public System.Double UsedPercentAvailable { get; set; }
        
        /// <value>
        /// The percentage of used space out of the total allocated space in the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "usedPercentAllocated")]
        public System.Double UsedPercentAllocated { get; set; }
        
        /// <value>
        /// Indicates whether this is the default tablespace.
        /// </value>
        [JsonProperty(PropertyName = "isDefault")]
        public System.Nullable<bool> IsDefault { get; set; }
        
        /// <value>
        /// A list of the data files associated with the tablespace.
        /// </value>
        [JsonProperty(PropertyName = "datafiles")]
        public System.Collections.Generic.List<Datafile> Datafiles { get; set; }
        
    }
}
