/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemanagementService.Models
{
    /// <summary>
    /// Details of the Sql tuning set.
    /// </summary>
    public class SqlTuningSet 
    {
        
        /// <value>
        /// The unique Sql tuning set identifier.
        /// </value>
        [JsonProperty(PropertyName = "id")]
        public System.Nullable<int> Id { get; set; }
        
        /// <value>
        /// The owner of the Sql tuning set.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Owner is required.")]
        [JsonProperty(PropertyName = "owner")]
        public string Owner { get; set; }
        
        /// <value>
        /// The name of the Sql tuning set.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// Number of statements in the Sql tuning set
        /// </value>
        [JsonProperty(PropertyName = "statementCount")]
        public System.Nullable<int> StatementCount { get; set; }
        
        /// <value>
        /// The created time of the Sql tuning set.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The description of the Sql tuning set.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// Last modified time of the Sql tuning set.
        /// </value>
        [JsonProperty(PropertyName = "timeLastModified")]
        public System.Nullable<System.DateTime> TimeLastModified { get; set; }
        
        /// <value>
        /// Current status of the Sql tuning set.
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SqlTuningSetStatusTypes> Status { get; set; }
        
        /// <value>
        /// Name of the Sql tuning set scheduler job.
        /// </value>
        [JsonProperty(PropertyName = "scheduledJobName")]
        public string ScheduledJobName { get; set; }
        
        /// <value>
        /// Latest execution error of the plsql that was submitted as a scheduler job.
        /// </value>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }
        
        /// <value>
        /// In OCI database management, there is a limit to fetch only 2000 rows.
        /// This flag indicates whether all Sql statements of this Sql tuning set matching the filter criteria are fetched or not.
        /// Possible values are 'Yes' or 'No'
        ///   - Yes - All Sql statements matching the filter criteria are fetched.
        ///   - No  - There are more Sql statements matching the fitler criteria.
        ///           User should fine tune the filter criteria to narrow down the result set.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "allSqlStatementsFetched")]
        public string AllSqlStatementsFetched { get; set; }
        
        /// <value>
        /// A list of the Sqls associated with the Sql tuning set.
        /// </value>
        [JsonProperty(PropertyName = "sqlList")]
        public System.Collections.Generic.List<SqlInSqlTuningSet> SqlList { get; set; }
        
    }
}
