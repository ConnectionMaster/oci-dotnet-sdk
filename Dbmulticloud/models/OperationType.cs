/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;

namespace Oci.DbmulticloudService.Models
{
  /// <summary>
  /// Possible operation types.
  /// </summary>
  public enum OperationType {
      /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
      [EnumMember(Value = null)]
      UnknownEnumValue,
      [EnumMember(Value = "CREATE_AZURE_CONNECTOR")]
      CreateAzureConnector,
      [EnumMember(Value = "DELETE_AZURE_CONNECTOR")]
      DeleteAzureConnector,
      [EnumMember(Value = "UPDATE_AZURE_CONNECTOR")]
      UpdateAzureConnector,
      [EnumMember(Value = "MOVE_AZURE_CONNECTOR")]
      MoveAzureConnector,
      [EnumMember(Value = "REFRESH_AZURE_CONNECTOR")]
      RefreshAzureConnector,
      [EnumMember(Value = "CREATE_AZURE_BLOB_CONTAINER")]
      CreateAzureBlobContainer,
      [EnumMember(Value = "DELETE_AZURE_BLOB_CONTAINER")]
      DeleteAzureBlobContainer,
      [EnumMember(Value = "UPDATE_AZURE_BLOB_CONTAINER")]
      UpdateAzureBlobContainer,
      [EnumMember(Value = "MOVE_AZURE_BLOB_CONTAINER")]
      MoveAzureBlobContainer,
      [EnumMember(Value = "CREATE_AZURE_BLOB_MOUNT")]
      CreateAzureBlobMount,
      [EnumMember(Value = "MOVE_AZURE_BLOB_MOUNT")]
      MoveAzureBlobMount,
      [EnumMember(Value = "UPDATE_AZURE_BLOB_MOUNT")]
      UpdateAzureBlobMount,
      [EnumMember(Value = "DELETE_AZURE_BLOB_MOUNT")]
      DeleteAzureBlobMount,
      [EnumMember(Value = "CREATE_MULTICLOUD_DISCOVERY")]
      CreateMulticloudDiscovery,
      [EnumMember(Value = "DELETE_MULTICLOUD_DISCOVERY")]
      DeleteMulticloudDiscovery,
      [EnumMember(Value = "UPDATE_MULTICLOUD_DISCOVERY")]
      UpdateMulticloudDiscovery,
      [EnumMember(Value = "MOVE_MULTICLOUD_DISCOVERY")]
      MoveMulticloudDiscovery,
      [EnumMember(Value = "CREATE_AZURE_VAULT")]
      CreateAzureVault,
      [EnumMember(Value = "DELETE_AZURE_VAULT")]
      DeleteAzureVault,
      [EnumMember(Value = "UPDATE_AZURE_VAULT")]
      UpdateAzureVault,
      [EnumMember(Value = "MOVE_AZURE_VAULT")]
      MoveAzureVault,
      [EnumMember(Value = "REFRESH_AZURE_VAULT")]
      RefreshAzureVault,
      [EnumMember(Value = "CREATE_AZURE_VAULT_ASSOCIATION")]
      CreateAzureVaultAssociation,
      [EnumMember(Value = "DELETE_AZURE_VAULT_ASSOCIATION")]
      DeleteAzureVaultAssociation,
      [EnumMember(Value = "UPDATE_AZURE_VAULT_ASSOCIATION")]
      UpdateAzureVaultAssociation,
      [EnumMember(Value = "MOVE_AZURE_VAULT_ASSOCIATION")]
      MoveAzureVaultAssociation,
      [EnumMember(Value = "PATCH_DB_RESOURCE")]
      PatchDbResource,
      [EnumMember(Value = "CREATE_GCP_IDENTITY_CONFIGURATION")]
      CreateGcpIdentityConfiguration,
      [EnumMember(Value = "CREATE_GCP_CONNECTOR")]
      CreateGcpConnector,
      [EnumMember(Value = "DELETE_GCP_CONNECTOR")]
      DeleteGcpConnector,
      [EnumMember(Value = "UPDATE_GCP_CONNECTOR")]
      UpdateGcpConnector,
      [EnumMember(Value = "MOVE_GCP_CONNECTOR")]
      MoveGcpConnector,
      [EnumMember(Value = "REFRESH_GCP_CONNECTOR")]
      RefreshGcpConnector,
      [EnumMember(Value = "GCP_DISCOVERY")]
      GcpDiscovery,
      [EnumMember(Value = "CREATE_GCP_KEY_RING")]
      CreateGcpKeyRing,
      [EnumMember(Value = "DELETE_GCP_KEY_RING")]
      DeleteGcpKeyRing,
      [EnumMember(Value = "UPDATE_GCP_KEY_RING")]
      UpdateGcpKeyRing,
      [EnumMember(Value = "MOVE_GCP_KEY_RING")]
      MoveGcpKeyRing,
      [EnumMember(Value = "REFRESH_GCP_KEY_RING")]
      RefreshGcpKeyRing
  }
}
