/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.AispeechService.Models
{
    /// <summary>
    /// Description of Transcription Task.
    /// </summary>
    public class TranscriptionTask 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the task.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// A user-friendly display name for the task.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Task started time.
        /// </value>
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }
        
        /// <value>
        /// Task finished time.
        /// </value>
        [JsonProperty(PropertyName = "timeFinished")]
        public System.Nullable<System.DateTime> TimeFinished { get; set; }
        
        /// <value>
        /// How much progress the operation has made, vs the total amount of work that must be performed.
        /// </value>
        [JsonProperty(PropertyName = "percentComplete")]
        public System.Nullable<int> PercentComplete { get; set; }
        
        /// <value>
        /// Time to live duration in days for tasks. Task will be available till max 90 days.
        /// </value>
        [JsonProperty(PropertyName = "ttlInDays")]
        public System.Nullable<int> TtlInDays { get; set; }
        
        [JsonProperty(PropertyName = "modelDetails")]
        public TranscriptionModelDetails ModelDetails { get; set; }
        
        [JsonProperty(PropertyName = "audioFormatDetails")]
        public AudioFormatDetails AudioFormatDetails { get; set; }
        
        /// <value>
        /// Size of input file in Bytes.
        /// </value>
        [JsonProperty(PropertyName = "fileSizeInBytes")]
        public System.Nullable<int> FileSizeInBytes { get; set; }
        
        /// <value>
        /// Duration of input file in Seconds.
        /// </value>
        [JsonProperty(PropertyName = "fileDurationInSeconds")]
        public System.Nullable<int> FileDurationInSeconds { get; set; }
        
        /// <value>
        /// Task proccessing duration, which excludes waiting time in the system.
        /// </value>
        [JsonProperty(PropertyName = "processingDurationInSeconds")]
        public System.Nullable<int> ProcessingDurationInSeconds { get; set; }
        
        [JsonProperty(PropertyName = "inputLocation")]
        public ObjectLocation InputLocation { get; set; }
        
        [JsonProperty(PropertyName = "outputLocation")]
        public ObjectLocation OutputLocation { get; set; }
                ///
        /// <value>
        /// The current state of the Task.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ACCEPTED")]
            Accepted,
            [EnumMember(Value = "IN_PROGRESS")]
            InProgress,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "CANCELED")]
            Canceled
        };

        /// <value>
        /// The current state of the Task.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
    }
}
