/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.PsqlService.Models
{
    /// <summary>
    /// Database configuration.
    /// </summary>
    public class ConfigParams 
    {
        
        /// <value>
        /// The configuration variable name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConfigKey is required.")]
        [JsonProperty(PropertyName = "configKey")]
        public string ConfigKey { get; set; }
        
        /// <value>
        /// Default value for the configuration variable.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DefaultConfigValue is required.")]
        [JsonProperty(PropertyName = "defaultConfigValue")]
        public string DefaultConfigValue { get; set; }
        
        /// <value>
        /// User-selected configuration variable value.
        /// </value>
        [JsonProperty(PropertyName = "overridenConfigValue")]
        public string OverridenConfigValue { get; set; }
        
        /// <value>
        /// Range or list of allowed values.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AllowedValues is required.")]
        [JsonProperty(PropertyName = "allowedValues")]
        public string AllowedValues { get; set; }
        
        /// <value>
        /// If true, modifying this configuration value will require a restart of the database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsRestartRequired is required.")]
        [JsonProperty(PropertyName = "isRestartRequired")]
        public System.Nullable<bool> IsRestartRequired { get; set; }
        
        /// <value>
        /// Data type of the variable.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataType is required.")]
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; set; }
        
        /// <value>
        /// Whether the value can be overridden or not.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsOverridable is required.")]
        [JsonProperty(PropertyName = "isOverridable")]
        public System.Nullable<bool> IsOverridable { get; set; }
        
        /// <value>
        /// Details about the PostgreSQL parameter.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Description is required.")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
    }
}
