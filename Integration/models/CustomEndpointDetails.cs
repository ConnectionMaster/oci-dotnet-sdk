/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IntegrationService.Models
{
    /// <summary>
    /// Details for a custom endpoint for the integration instance.
    /// </summary>
    public class CustomEndpointDetails 
    {
        
        /// <value>
        /// A custom hostname to be used for the integration instance URL, in FQDN format.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Hostname is required.")]
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; set; }
                ///
        /// <value>
        /// Indicates if custom endpoint is managed by oracle or customer.
        /// </value>
        ///
        public enum ManagedTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ORACLE_MANAGED")]
            OracleManaged,
            [EnumMember(Value = "CUSTOMER_MANAGED")]
            CustomerManaged
        };

        /// <value>
        /// Indicates if custom endpoint is managed by oracle or customer.
        /// </value>
        [JsonProperty(PropertyName = "managedType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ManagedTypeEnum> ManagedType { get; set; }
        
        /// <value>
        /// DNS Zone name
        /// </value>
        [JsonProperty(PropertyName = "dnsZoneName")]
        public string DnsZoneName { get; set; }
                ///
        /// <value>
        /// Type of DNS.
        /// </value>
        ///
        public enum DnsTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "OCI")]
            Oci
        };

        /// <value>
        /// Type of DNS.
        /// </value>
        [JsonProperty(PropertyName = "dnsType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DnsTypeEnum> DnsType { get; set; }
        
        /// <value>
        /// Optional OCID of a vault/secret containing a private SSL certificate bundle to be used for the custom hostname.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "certificateSecretId")]
        public string CertificateSecretId { get; set; }
        
        /// <value>
        /// The secret version used for the certificate-secret-id (if certificate-secret-id is specified).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "certificateSecretVersion")]
        public System.Nullable<int> CertificateSecretVersion { get; set; }
        
        /// <value>
        /// When creating the DNS CNAME record for the custom hostname, this value must be specified in the rdata.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "alias")]
        public string Alias { get; set; }
        
    }
}
