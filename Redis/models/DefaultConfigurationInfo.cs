/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.RedisService.Models
{
    /// <summary>
    /// Details of a configuration setting in the OCI Cache Default Config Set.
    /// </summary>
    public class DefaultConfigurationInfo 
    {
        
        /// <value>
        /// The key of the configuration setting.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConfigKey is required.")]
        [JsonProperty(PropertyName = "configKey")]
        public string ConfigKey { get; set; }
        
        /// <value>
        /// The default value for the configuration setting.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DefaultConfigValue is required.")]
        [JsonProperty(PropertyName = "defaultConfigValue")]
        public string DefaultConfigValue { get; set; }
        
        /// <value>
        /// Allowed values for the configuration setting.
        /// </value>
        [JsonProperty(PropertyName = "allowedValues")]
        public string AllowedValues { get; set; }
        
        /// <value>
        /// The data type of the configuration setting.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataType is required.")]
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; set; }
        
        /// <value>
        /// Indicates if the configuration is modifiable.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsModifiable is required.")]
        [JsonProperty(PropertyName = "isModifiable")]
        public System.Nullable<bool> IsModifiable { get; set; }
        
        /// <value>
        /// Description of the configuration setting.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
    }
}
