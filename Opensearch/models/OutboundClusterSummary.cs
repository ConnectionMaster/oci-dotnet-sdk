/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpensearchService.Models
{
    /// <summary>
    /// Contains details of a Outbound cluster
    /// 
    /// </summary>
    public class OutboundClusterSummary 
    {
        
        /// <value>
        /// Name of the Outbound cluster. Avoid entering confidential information.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Sets the time interval between regular application-level ping messages that are sent to try and keep outbound cluster connections alive. If set to -1, application-level ping messages to this outbound cluster are not sent. If unset, application-level ping messages are sent according to the global transport.ping_schedule setting, which defaults to -1 meaning that pings are not sent.
        /// </value>
        [JsonProperty(PropertyName = "pingSchedule")]
        public string PingSchedule { get; set; }
        
        /// <value>
        /// Flag to indicate whether to skip the Outbound cluster during cross cluster search, if it is unavailable
        /// </value>
        [JsonProperty(PropertyName = "isSkipUnavailable")]
        public System.Nullable<bool> IsSkipUnavailable { get; set; }
        
        /// <value>
        /// OCID of the Outbound cluster
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SeedClusterId is required.")]
        [JsonProperty(PropertyName = "seedClusterId")]
        public string SeedClusterId { get; set; }
        
        /// <value>
        /// Mode for the cross cluster connection
        /// </value>
        [JsonProperty(PropertyName = "mode")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CccMode> Mode { get; set; }
        
    }
}
