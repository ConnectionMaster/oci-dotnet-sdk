/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpensearchService.Models
{
    /// <summary>
    /// SAML policy is optionally used for Opensearch cluster to config SAML authentication
    /// 
    /// </summary>
    public class SecuritySamlConfig 
    {
        
        /// <value>
        /// A flag determine whether SAML is enabled
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsEnabled is required.")]
        [JsonProperty(PropertyName = "isEnabled")]
        public System.Nullable<bool> IsEnabled { get; set; }
        
        /// <value>
        /// The content of identity provider metadata
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IdpMetadataContent is required.")]
        [JsonProperty(PropertyName = "idpMetadataContent")]
        public string IdpMetadataContent { get; set; }
        
        /// <value>
        /// The unique name for a identity provider entity
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IdpEntityId is required.")]
        [JsonProperty(PropertyName = "idpEntityId")]
        public string IdpEntityId { get; set; }
        
        /// <value>
        /// The endpoint of opendashboard
        /// </value>
        [JsonProperty(PropertyName = "opendashboardUrl")]
        public string OpendashboardUrl { get; set; }
        
        /// <value>
        /// The backend role of admins who have all permissions like local master user
        /// </value>
        [JsonProperty(PropertyName = "adminBackendRole")]
        public string AdminBackendRole { get; set; }
        
        /// <value>
        /// The subject key is used to get username from SAML assertion. By default, it is NameID
        /// </value>
        [JsonProperty(PropertyName = "subjectKey")]
        public string SubjectKey { get; set; }
        
        /// <value>
        /// The roles key is sued to get backend roles from SAML assertion
        /// </value>
        [JsonProperty(PropertyName = "rolesKey")]
        public string RolesKey { get; set; }
        
    }
}
