/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ContainerengineService.Models
{
    /// <summary>
    /// Node Pool Cycling Details
    /// </summary>
    public class NodePoolCyclingDetails 
    {
        
        /// <value>
        /// Maximum active nodes that would be terminated from nodepool during the cycling nodepool process.
        /// OKE supports both integer and percentage input.
        /// Defaults to 0, Ranges from 0 to Nodepool size or 0% to 100%
        /// 
        /// </value>
        [JsonProperty(PropertyName = "maximumUnavailable")]
        public string MaximumUnavailable { get; set; }
        
        /// <value>
        /// Maximum additional new compute instances that would be temporarily created and added to nodepool during the cycling nodepool process.
        /// OKE supports both integer and percentage input.
        /// Defaults to 1, Ranges from 0 to Nodepool size or 0% to 100%
        /// 
        /// </value>
        [JsonProperty(PropertyName = "maximumSurge")]
        public string MaximumSurge { get; set; }
        
        /// <value>
        /// If cycling operation should be performed on the nodes in the node pool.
        /// </value>
        [JsonProperty(PropertyName = "isNodeCyclingEnabled")]
        public System.Nullable<bool> IsNodeCyclingEnabled { get; set; }
        
        /// <value>
        /// An ordered list of cycle modes that should be performed on the OKE nodes. 
        /// 
        /// </value>
        [JsonProperty(PropertyName = "cycleModes")]
        public System.Collections.Generic.List<CycleMode> CycleModes { get; set; }
        
    }
}
