/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LicensemanagerService.Models
{
    /// <summary>
    /// License record summary.
    /// </summary>
    public class LicenseRecord 
    {
        
        /// <value>
        /// The license record [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) with which the license record is associated.
        /// </value>
        [JsonProperty(PropertyName = "productLicenseId")]
        public string ProductLicenseId { get; set; }
        
        /// <value>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The license record display name. Avoid entering confidential information.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The license record product ID.
        /// </value>
        [JsonProperty(PropertyName = "productId")]
        public string ProductId { get; set; }
        
        /// <value>
        /// The number of license units added by the user for the given license record.
        /// Default 1
        /// 
        /// </value>
        [JsonProperty(PropertyName = "licenseCount")]
        public System.Nullable<int> LicenseCount { get; set; }
        
        /// <value>
        /// The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339)
        /// date format.
        /// Example: 2018-09-12
        /// </value>
        [JsonProperty(PropertyName = "expirationDate")]
        public System.Nullable<System.DateTime> ExpirationDate { get; set; }
        
        /// <value>
        /// The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339)
        /// date format.
        /// Example: 2018-09-12
        /// </value>
        [JsonProperty(PropertyName = "supportEndDate")]
        public System.Nullable<System.DateTime> SupportEndDate { get; set; }
        
        /// <value>
        /// Specifies if the license count is unlimited.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsUnlimited is required.")]
        [JsonProperty(PropertyName = "isUnlimited")]
        public System.Nullable<bool> IsUnlimited { get; set; }
        
        /// <value>
        /// Specifies if the license record term is perpertual.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsPerpetual is required.")]
        [JsonProperty(PropertyName = "isPerpetual")]
        public System.Nullable<bool> IsPerpetual { get; set; }
        
        /// <value>
        /// The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The current license record state.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifeCycleState> LifecycleState { get; set; }
        
        /// <value>
        /// The product license unit.
        /// </value>
        [JsonProperty(PropertyName = "licenseUnit")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LicenseUnit> LicenseUnit { get; set; }
        
        /// <value>
        /// The product license name with which the license record is associated.
        /// </value>
        [JsonProperty(PropertyName = "productLicense")]
        public string ProductLicense { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
