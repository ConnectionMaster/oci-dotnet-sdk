/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LicensemanagerService.Models
{
    /// <summary>
    /// The product license summary.
    /// </summary>
    public class ProductLicenseSummary 
    {
        
        /// <value>
        /// The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the product license is created.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The current product license status.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<Status> Status { get; set; }
        
        /// <value>
        /// Status description for the current product license status.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "statusDescription")]
        public string StatusDescription { get; set; }
        
        /// <value>
        /// The current product license state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifeCycleState> LifecycleState { get; set; }
        
        /// <value>
        /// The total number of licenses available for the product license, calculated by adding up all the license counts for active license records associated with the product license.
        /// </value>
        [JsonProperty(PropertyName = "totalActiveLicenseUnitCount")]
        public System.Nullable<int> TotalActiveLicenseUnitCount { get; set; }
        
        /// <value>
        /// The number of license units consumed. Updated after each allocation run.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "totalLicenseUnitsConsumed")]
        public System.Double TotalLicenseUnitsConsumed { get; set; }
        
        /// <value>
        /// The number of license records associated with the product license.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "totalLicenseRecordCount")]
        public System.Nullable<int> TotalLicenseRecordCount { get; set; }
        
        /// <value>
        /// The number of active license records associated with the product license.
        /// </value>
        [JsonProperty(PropertyName = "activeLicenseRecordCount")]
        public System.Nullable<int> ActiveLicenseRecordCount { get; set; }
        
        /// <value>
        /// The product license unit.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LicenseUnit is required.")]
        [JsonProperty(PropertyName = "licenseUnit")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LicenseUnit> LicenseUnit { get; set; }
        
        /// <value>
        /// Specifies whether the vendor is Oracle or a third party.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsVendorOracle is required.")]
        [JsonProperty(PropertyName = "isVendorOracle")]
        public System.Nullable<bool> IsVendorOracle { get; set; }
        
        /// <value>
        /// Specifies whether or not the product license is oversubscribed.
        /// </value>
        [JsonProperty(PropertyName = "isOverSubscribed")]
        public System.Nullable<bool> IsOverSubscribed { get; set; }
        
        /// <value>
        /// Specifies if the license unit count is unlimited.
        /// </value>
        [JsonProperty(PropertyName = "isUnlimited")]
        public System.Nullable<bool> IsUnlimited { get; set; }
        
        /// <value>
        /// License record name
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The vendor of the ProductLicense
        /// 
        /// </value>
        [JsonProperty(PropertyName = "vendorName")]
        public string VendorName { get; set; }
        
        /// <value>
        /// The time the product license was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time the product license was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The images associated with the product license.
        /// </value>
        [JsonProperty(PropertyName = "images")]
        public System.Collections.Generic.List<ImageResponse> Images { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
