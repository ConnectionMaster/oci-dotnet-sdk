/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApigatewayService.Models
{
    /// <summary>
    /// Connection details for an external RESP based cache store for Response Caching.
    /// 
    /// </summary>
    public class ExternalRespCache : ResponseCacheDetails
    {
        
        /// <value>
        /// The set of cache store members to connect to. At present only a single server is supported.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Servers is required.")]
        [JsonProperty(PropertyName = "servers")]
        public System.Collections.Generic.List<ResponseCacheRespServer> Servers { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Oracle Vault Service secret resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AuthenticationSecretId is required.")]
        [JsonProperty(PropertyName = "authenticationSecretId")]
        public string AuthenticationSecretId { get; set; }
        
        /// <value>
        /// The version number of the authentication secret to use.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AuthenticationSecretVersionNumber is required.")]
        [JsonProperty(PropertyName = "authenticationSecretVersionNumber")]
        public System.Nullable<long> AuthenticationSecretVersionNumber { get; set; }
        
        /// <value>
        /// Defines if the connection should be over SSL.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isSslEnabled")]
        public System.Nullable<bool> IsSslEnabled { get; set; }
        
        /// <value>
        /// Defines whether or not to uphold SSL verification.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isSslVerifyDisabled")]
        public System.Nullable<bool> IsSslVerifyDisabled { get; set; }
        
        /// <value>
        /// Defines the timeout for establishing a connection with the Response Cache.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "connectTimeoutInMs")]
        public System.Nullable<int> ConnectTimeoutInMs { get; set; }
        
        /// <value>
        /// Defines the timeout for reading data from the Response Cache.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "readTimeoutInMs")]
        public System.Nullable<int> ReadTimeoutInMs { get; set; }
        
        /// <value>
        /// Defines the timeout for transmitting data to the Response Cache.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "sendTimeoutInMs")]
        public System.Nullable<int> SendTimeoutInMs { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "EXTERNAL_RESP_CACHE";
    }
}
