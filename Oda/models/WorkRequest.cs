/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OdaService.Models
{
    /// <summary>
    /// The description of work request, including its status.
    /// </summary>
    public class WorkRequest 
    {
        
        /// <value>
        /// The identifier of the work request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The identifier of the compartment that contains the work request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The identifier of the Digital Assistant instance to which this work request pertains.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OdaInstanceId is required.")]
        [JsonProperty(PropertyName = "odaInstanceId")]
        public string OdaInstanceId { get; set; }
                ///
        /// <value>
        /// The type of the operation that's associated with the work request.
        /// </value>
        ///
        public enum RequestActionEnum {
            [EnumMember(Value = "CREATE_ODA_INSTANCE")]
            CreateOdaInstance,
            [EnumMember(Value = "UPGRADE_ODA_INSTANCE")]
            UpgradeOdaInstance,
            [EnumMember(Value = "DELETE_ODA_INSTANCE")]
            DeleteOdaInstance,
            [EnumMember(Value = "PURGE_ODA_INSTANCE")]
            PurgeOdaInstance,
            [EnumMember(Value = "RECOVER_ODA_INSTANCE")]
            RecoverOdaInstance,
            [EnumMember(Value = "STOP_ODA_INSTANCE")]
            StopOdaInstance,
            [EnumMember(Value = "START_ODA_INSTANCE")]
            StartOdaInstance,
            [EnumMember(Value = "CHANGE_ODA_INSTANCE_COMPARTMENT")]
            ChangeOdaInstanceCompartment,
            [EnumMember(Value = "CREATE_ASSOCIATION")]
            CreateAssociation,
            [EnumMember(Value = "DELETE_ASSOCIATION")]
            DeleteAssociation,
            [EnumMember(Value = "UPDATE_ENTITLEMENTS_FOR_CACCT")]
            UpdateEntitlementsForCacct,
            [EnumMember(Value = "LOOKUP_ODA_INSTANCES_FOR_CACCT")]
            LookupOdaInstancesForCacct
        };

        /// <value>
        /// The type of the operation that's associated with the work request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RequestAction is required.")]
        [JsonProperty(PropertyName = "requestAction")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<RequestActionEnum> RequestAction { get; set; }
                ///
        /// <value>
        /// The status of current work request.
        /// </value>
        ///
        public enum StatusEnum {
            [EnumMember(Value = "ACCEPTED")]
            Accepted,
            [EnumMember(Value = "IN_PROGRESS")]
            InProgress,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "CANCELING")]
            Canceling,
            [EnumMember(Value = "CANCELED")]
            Canceled
        };

        /// <value>
        /// The status of current work request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
        
        /// <value>
        /// A short message that provides more detail about the current status.
        /// For example, if a work request fails, then this may include information
        /// about why it failed.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage { get; set; }
        
        /// <value>
        /// The resources that this work request affects.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Resources is required.")]
        [JsonProperty(PropertyName = "resources")]
        public System.Collections.Generic.List<WorkRequestResource> Resources { get; set; }
        
        /// <value>
        /// Percentage of the request completed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PercentComplete is required.")]
        [JsonProperty(PropertyName = "percentComplete")]
        public System.Nullable<float> PercentComplete { get; set; }
        
        /// <value>
        /// The date and time that the request was created, as described in
        /// [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeAccepted is required.")]
        [JsonProperty(PropertyName = "timeAccepted")]
        public System.Nullable<System.DateTime> TimeAccepted { get; set; }
        
        /// <value>
        /// The date and time that the request was started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), CKQ
        /// section 14.29.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }
        
        /// <value>
        /// The date and time that the object finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339). CKQ
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeFinished")]
        public System.Nullable<System.DateTime> TimeFinished { get; set; }
        
    }
}
