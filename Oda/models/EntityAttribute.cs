/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OdaService.Models
{
    /// <summary>
    /// Attribute of an entity
    /// </summary>
    public class EntityAttribute 
    {
        
        /// <value>
        /// The name of an entity attribute
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// The type of an entity attribute
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<EntityAttributeType> Type { get; set; }
        
        [JsonProperty(PropertyName = "naturalLanguageMapping")]
        public EntityAttributeNaturalLanguageMapping NaturalLanguageMapping { get; set; }
        
        /// <value>
        /// Is the entity attribute multi-value
        /// </value>
        [JsonProperty(PropertyName = "isMultiValue")]
        public System.Nullable<bool> IsMultiValue { get; set; }
        
        /// <value>
        /// Is the entity attribute a fuzzy match
        /// </value>
        [JsonProperty(PropertyName = "isFuzzyMatch")]
        public System.Nullable<bool> IsFuzzyMatch { get; set; }
        
        /// <value>
        /// Are comparisons inverted in the entity attribute
        /// </value>
        [JsonProperty(PropertyName = "isInvertComparisons")]
        public System.Nullable<bool> IsInvertComparisons { get; set; }
        
        /// <value>
        /// Temporal preference of an attribute
        /// </value>
        [JsonProperty(PropertyName = "temporalPreference")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TemporalPreference> TemporalPreference { get; set; }
        
        /// <value>
        /// Name of referenced entity.
        /// </value>
        [JsonProperty(PropertyName = "entityName")]
        public string EntityName { get; set; }
        
    }
}
