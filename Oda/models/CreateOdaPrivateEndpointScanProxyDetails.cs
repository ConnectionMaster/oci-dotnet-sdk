/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OdaService.Models
{
    /// <summary>
    /// Properties that are required to create an ODA Private Endpoint Scan Proxy.
    /// </summary>
    public class CreateOdaPrivateEndpointScanProxyDetails 
    {
        
        /// <value>
        /// Type indicating whether Scan listener is specified by its FQDN or list of IPs
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ScanListenerType is required.")]
        [JsonProperty(PropertyName = "scanListenerType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<OdaPrivateEndpointScanProxy.ScanListenerTypeEnum> ScanListenerType { get; set; }
        
        /// <value>
        /// The protocol used for communication between client, scanProxy and RAC's scan listeners
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Protocol is required.")]
        [JsonProperty(PropertyName = "protocol")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<OdaPrivateEndpointScanProxy.ProtocolEnum> Protocol { get; set; }
        
        /// <value>
        /// The FQDN/IPs and port information of customer's Real Application Cluster (RAC)'s SCAN listeners.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ScanListenerInfos is required.")]
        [JsonProperty(PropertyName = "scanListenerInfos")]
        public System.Collections.Generic.List<ScanListenerInfo> ScanListenerInfos { get; set; }
        
    }
}
