/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.AuditService.Models
{
    /// <summary>
    /// The payload of the event. Information within `data` comes from the resource emitting the event.
    /// 
    /// </summary>
    public class Data 
    {
        
        /// <value>
        /// This value links multiple audit events that are part of the same API operation. For example, 
        /// a long running API operations that emit an event at the start and the end of an operation
        /// would use the same value in this field for both events.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "eventGroupingId")]
        public string EventGroupingId { get; set; }
        
        /// <value>
        /// Name of the API operation that generated this event.
        /// <br/>
        /// Example: GetInstance
        /// </value>
        [JsonProperty(PropertyName = "eventName")]
        public string EventName { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment of the resource 
        /// emitting the event.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The name of the compartment. This value is the friendly name associated with compartmentId.
        /// This value can change, but the service logs the value that appeared at the time of the audit
        /// event.
        /// <br/>
        /// Example: CompartmentA
        /// </value>
        [JsonProperty(PropertyName = "compartmentName")]
        public string CompartmentName { get; set; }
        
        /// <value>
        /// The name of the resource emitting the event.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "resourceName")]
        public string ResourceName { get; set; }
        
        /// <value>
        /// An [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) or some other ID for the resource
        /// emitting the event.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// The availability domain where the resource resides.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "availabilityDomain")]
        public string AvailabilityDomain { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, 
        /// type, or namespace. Exists for cross-compatibility only. For more information, 
        /// see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more
        /// information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        [JsonProperty(PropertyName = "identity")]
        public Identity Identity { get; set; }
        
        [JsonProperty(PropertyName = "request")]
        public Request Request { get; set; }
        
        [JsonProperty(PropertyName = "response")]
        public Response Response { get; set; }
        
        [JsonProperty(PropertyName = "stateChange")]
        public StateChange StateChange { get; set; }
        
        /// <value>
        /// A container object for attribues unique to the resource emitting the event.
        /// <br/>
        /// Example:   -----    {      &quot;imageId&quot;: &quot;ocid1.image.oc1.phx.<unique_ID>&quot;,      &quot;shape&quot;: &quot;VM.Standard1.1&quot;,      &quot;type&quot;: &quot;CustomerVmi&quot;    }  -----
        /// </value>
        [JsonProperty(PropertyName = "additionalDetails")]
        public System.Collections.Generic.Dictionary<string, System.Object> AdditionalDetails { get; set; }
        
    }
}
