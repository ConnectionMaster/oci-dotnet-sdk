/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OperatoraccesscontrolService.Models
{
    /// <summary>
    /// Summary of access request.
    /// </summary>
    public class AccessRequestSummary 
    {
        
        /// <value>
        /// The OCID of the access request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// This is a system-generated identifier.
        /// </value>
        [JsonProperty(PropertyName = "requestId")]
        public string RequestId { get; set; }
        
        /// <value>
        /// Comment associated with the access request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AccessReasonSummary is required.")]
        [JsonProperty(PropertyName = "accessReasonSummary")]
        public string AccessReasonSummary { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the access request.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The OCID of the target resource associated with the access request. The operator raises an access request to get approval to 
        /// access the target resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceId is required.")]
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// The name of the target resource.
        /// </value>
        [JsonProperty(PropertyName = "resourceName")]
        public string ResourceName { get; set; }
        
        /// <value>
        /// The subresources requested for approval.
        /// </value>
        [JsonProperty(PropertyName = "subResourceList")]
        public System.Collections.Generic.List<string> SubResourceList { get; set; }
        
        /// <value>
        /// resourceType for which the AccessRequest is applicable
        /// </value>
        [JsonProperty(PropertyName = "resourceType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ResourceTypes> ResourceType { get; set; }
        
        /// <value>
        /// The current state of the AccessRequest.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AccessRequestLifecycleStates> LifecycleState { get; set; }
        
        /// <value>
        /// More in detail about the lifeCycleState.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// Time when the access request was created by the operator user in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeOfCreation")]
        public System.Nullable<System.DateTime> TimeOfCreation { get; set; }
        
        /// <value>
        /// Time when the access request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeOfModification")]
        public System.Nullable<System.DateTime> TimeOfModification { get; set; }
        
        /// <value>
        /// The time when access request is scheduled to be approved in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeOfUserCreation")]
        public System.Nullable<System.DateTime> TimeOfUserCreation { get; set; }
        
        /// <value>
        /// Duration in hours for which access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "duration")]
        public System.Nullable<int> Duration { get; set; }
        
        /// <value>
        /// Duration in hours for which extension access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "extendDuration")]
        public System.Nullable<int> ExtendDuration { get; set; }
        
        /// <value>
        /// Priority assigned to the access request by the operator
        /// </value>
        [JsonProperty(PropertyName = "severity")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AccessRequestSeverities> Severity { get; set; }
        
        /// <value>
        /// Whether the access request was automatically approved.
        /// </value>
        [JsonProperty(PropertyName = "isAutoApproved")]
        public System.Nullable<bool> IsAutoApproved { get; set; }
        
        /// <value>
        /// Time in future when the user for the access request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeRequestedForFutureAccess")]
        public System.Nullable<System.DateTime> TimeRequestedForFutureAccess { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
