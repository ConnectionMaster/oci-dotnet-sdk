/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OperatoraccesscontrolService.Models
{
    /// <summary>
    /// An Oracle operator raises access request when they need access to any infrastructure resource governed by Operator Access Control.
    /// The access request identifies the target resource and the set of operator actions. Access request handling depends upon the Operator Control 
    /// that governs the target resource, and the set of operator actions listed for approval in the access request. If all of the operator actions 
    /// listed in the access request are in the pre-approved list in the Operator Control that governs the target resource, then the access request is 
    /// automatically approved. If not, then the access request requires explicit approval from the approver group specified by the Operator Control governing the target resource.
    /// <br/>
    /// You can approve or reject an access request. You can also revoke the approval of an already approved access request. While creating an access request, 
    /// the operator specifies the duration of access. You have the option to approve the entire duration or reduce or even increase the time duration. 
    /// An operator can also request for an extension. The approval for such an extension is processed the same way the original access request was processed.
    /// 
    /// </summary>
    public class AccessRequest 
    {
        
        /// <value>
        /// The OCID of the access request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// This is an automatic identifier generated by the system which is easier for human comprehension.
        /// </value>
        [JsonProperty(PropertyName = "requestId")]
        public string RequestId { get; set; }
        
        /// <value>
        /// Summary comment by the operator creating the access request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AccessReasonSummary is required.")]
        [JsonProperty(PropertyName = "accessReasonSummary")]
        public string AccessReasonSummary { get; set; }
        
        /// <value>
        /// A unique identifier associated with the operator who raised the request. This identifier can not be used directly to identify the operator.
        /// You need to provide this identifier if you would like Oracle to provide additional information about the operator action within Oracle tenancy.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "operatorId")]
        public string OperatorId { get; set; }
        
        /// <value>
        /// The OCID of the target resource associated with the access request. The operator raises an access request to get approval to 
        /// access the target resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceId is required.")]
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// The name of the target resource.
        /// </value>
        [JsonProperty(PropertyName = "resourceName")]
        public string ResourceName { get; set; }
        
        /// <value>
        /// The subresources requested for approval.
        /// </value>
        [JsonProperty(PropertyName = "subResourceList")]
        public System.Collections.Generic.List<string> SubResourceList { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the access request.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// resourceType for which the AccessRequest is applicable
        /// </value>
        [JsonProperty(PropertyName = "resourceType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ResourceTypes> ResourceType { get; set; }
        
        /// <value>
        /// List of operator actions for which approval is sought by the operator user.
        /// </value>
        [JsonProperty(PropertyName = "actionRequestsList")]
        public System.Collections.Generic.List<string> ActionRequestsList { get; set; }
        
        /// <value>
        /// Summary reason for which the operator is requesting access on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }
        
        /// <value>
        /// Priority assigned to the access request by the operator
        /// </value>
        [JsonProperty(PropertyName = "severity")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AccessRequestSeverities> Severity { get; set; }
        
        /// <value>
        /// Duration in hours for which access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "duration")]
        public System.Nullable<int> Duration { get; set; }
        
        /// <value>
        /// Duration in hours for which extension access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "extendDuration")]
        public System.Nullable<int> ExtendDuration { get; set; }
        
        /// <value>
        /// The OCID of the workflow associated with the access request. This is needed if you want to contact Oracle Support for a stuck access request
        /// or for an access request that encounters an internal error.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "workflowId")]
        public System.Collections.Generic.List<string> WorkflowId { get; set; }
        
        /// <value>
        /// Whether the access request was automatically approved.
        /// </value>
        [JsonProperty(PropertyName = "isAutoApproved")]
        public System.Nullable<bool> IsAutoApproved { get; set; }
        
        /// <value>
        /// The current state of the AccessRequest.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AccessRequestLifecycleStates> LifecycleState { get; set; }
        
        /// <value>
        /// more in detail about the lifeCycleState.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// Time when the access request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeOfCreation")]
        public System.Nullable<System.DateTime> TimeOfCreation { get; set; }
        
        /// <value>
        /// Time when the access request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeOfModification")]
        public System.Nullable<System.DateTime> TimeOfModification { get; set; }
        
        /// <value>
        /// The time when access request is scheduled to be approved in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeOfUserCreation")]
        public System.Nullable<System.DateTime> TimeOfUserCreation { get; set; }
        
        /// <value>
        /// The OCID of the user that last modified the access request.
        /// </value>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }
        
        /// <value>
        /// The last recent Comment entered by the approver of the request.
        /// </value>
        [JsonProperty(PropertyName = "approverComment")]
        public string ApproverComment { get; set; }
        
        /// <value>
        /// The comment entered by the operator while closing the request.
        /// </value>
        [JsonProperty(PropertyName = "closureComment")]
        public string ClosureComment { get; set; }
        
        /// <value>
        /// The OCID of the operator control governing the target resource.
        /// </value>
        [JsonProperty(PropertyName = "opctlId")]
        public string OpctlId { get; set; }
        
        /// <value>
        /// Name of the Operator control governing the target resource.
        /// </value>
        [JsonProperty(PropertyName = "opctlName")]
        public string OpctlName { get; set; }
        
        /// <value>
        /// System message that will be displayed to the operator at login to the target resource.
        /// </value>
        [JsonProperty(PropertyName = "systemMessage")]
        public string SystemMessage { get; set; }
        
        /// <value>
        /// Additional message specific to the access request that can be specified by the approver at the time of approval.
        /// </value>
        [JsonProperty(PropertyName = "opctlAdditionalMessage")]
        public string OpctlAdditionalMessage { get; set; }
        
        /// <value>
        /// Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level. 
        /// By default, auditing is enabled at the command level i.e., each command issued by the operator is audited. When keystroke-level is chosen, 
        /// in addition to command level logging, key strokes are also logged.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "auditType")]
        public System.Collections.Generic.List<string> AuditType { get; set; }
        
        /// <value>
        /// Number of approvers required to approve an access request.
        /// </value>
        [JsonProperty(PropertyName = "numberOfApproversRequired")]
        public System.Nullable<int> NumberOfApproversRequired { get; set; }
        
        /// <value>
        /// Number of approvers who have authorized an access request.
        /// </value>
        [JsonProperty(PropertyName = "numberOfApprovers")]
        public System.Nullable<int> NumberOfApprovers { get; set; }
        
        /// <value>
        /// Number of approvers who have authorized an access request for extension.
        /// </value>
        [JsonProperty(PropertyName = "numberOfExtensionApprovers")]
        public System.Nullable<int> NumberOfExtensionApprovers { get; set; }
        
        /// <value>
        /// Contains the user ids who have approved the accessRequest for extension.
        /// </value>
        [JsonProperty(PropertyName = "approverDetails")]
        public System.Collections.Generic.List<ApproverDetail> ApproverDetails { get; set; }
        
        /// <value>
        /// Contains the user ids who have approved the accessRequest for extension.
        /// </value>
        [JsonProperty(PropertyName = "extensionApproverDetails")]
        public System.Collections.Generic.List<ApproverDetail> ExtensionApproverDetails { get; set; }
        
        /// <value>
        /// Whether the access request was requested for Validate Assignment.
        /// </value>
        [JsonProperty(PropertyName = "isValidateAssignment")]
        public System.Nullable<bool> IsValidateAssignment { get; set; }
        
        /// <value>
        /// Time in future when the user for the access request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeRequestedForFutureAccess")]
        public System.Nullable<System.DateTime> TimeRequestedForFutureAccess { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
