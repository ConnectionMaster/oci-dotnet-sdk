/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoadbalancerService.Models
{
    /// <summary>
    /// A \"path route rule\" to evaluate an incoming URI path, and then route a matching request to the specified backend set.
    /// <br/>
    /// Path route rules apply only to HTTP and HTTPS requests. They have no effect on TCP requests.
    /// 
    /// </summary>
    public class PathRoute 
    {
        
        /// <value>
        /// The path string to match against the incoming URI path.
        /// <br/>
        /// *  Path strings are case-insensitive.
        /// <br/>
        /// *  Asterisk (*) wildcards are not supported.
        /// <br/>
        /// *  Regular expressions are not supported.
        /// <br/>
        /// Example: /example/video/123
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Path is required.")]
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }
        
        /// <value>
        /// The type of matching to apply to incoming URIs.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PathMatchType is required.")]
        [JsonProperty(PropertyName = "pathMatchType")]
        public PathMatchType PathMatchType { get; set; }
        
        /// <value>
        /// The name of the target backend set for requests where the incoming URI matches the specified path.
        /// <br/>
        /// Example: example_backend_set
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BackendSetName is required.")]
        [JsonProperty(PropertyName = "backendSetName")]
        public string BackendSetName { get; set; }
        
    }
}
