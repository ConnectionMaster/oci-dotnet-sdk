/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatalabelingservicedataplaneService.Models
{
    /// <summary>
    /// This allows the labeler to apply label the highlighted text from OCR, this includes labelled and unlabelled data.
    /// </summary>
    public class KeyValueSelectionEntity : Entity
    {
        
        /// <value>
        /// Entity Name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Text is required.")]
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }
        
        /// <value>
        /// A collection of label entities.
        /// </value>
        [JsonProperty(PropertyName = "labels")]
        public System.Collections.Generic.List<Label> Labels { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BoundingPolygon is required.")]
        [JsonProperty(PropertyName = "boundingPolygon")]
        public BoundingPolygon BoundingPolygon { get; set; }
        
        /// <value>
        /// Integer value.
        /// </value>
        [JsonProperty(PropertyName = "rotation")]
        public System.Nullable<decimal> Rotation { get; set; }
        
        /// <value>
        /// float value, score from OCR.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Confidence is required.")]
        [JsonProperty(PropertyName = "confidence")]
        public System.Nullable<float> Confidence { get; set; }
        
        /// <value>
        /// Integer value.
        /// </value>
        [JsonProperty(PropertyName = "pageNumber")]
        public System.Nullable<decimal> PageNumber { get; set; }
        
        [JsonProperty(PropertyName = "entityType")]
        private readonly string entityType = "KEYVALUESELECTION";
    }
}
