/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FilestorageService.Models
{
    /// <summary>
    /// Details for updating the export set.
    /// </summary>
    public class UpdateExportSetDetails 
    {
        
        /// <value>
        /// A user-friendly name. It does not have to be unique, and it is changeable.
        /// Avoid entering confidential information.
        /// <br/>
        /// Example: My export set
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Controls the maximum `tbytes`, `fbytes`, and `abytes`
        /// values reported by `NFS FSSTAT` calls through any associated
        /// mount targets. This is an advanced feature. For most
        /// applications, use the default value. The
        /// `tbytes` value reported by `FSSTAT` will be
        /// `maxFsStatBytes`. The value of `fbytes` and `abytes` will be
        /// `maxFsStatBytes` minus the metered size of the file
        /// system. If the metered size is larger than `maxFsStatBytes`,
        /// then `fbytes` and `abytes` will both be '0'.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "maxFsStatBytes")]
        public System.Nullable<long> MaxFsStatBytes { get; set; }
        
        /// <value>
        /// Controls the maximum `ffiles`, `ffiles`, and `afiles`
        /// values reported by `NFS FSSTAT` calls through any associated
        /// mount targets. This is an advanced feature. For most
        /// applications, use the default value. The
        /// `tfiles` value reported by `FSSTAT` will be
        /// `maxFsStatFiles`. The value of `ffiles` and `afiles` will be
        /// `maxFsStatFiles` minus the metered size of the file
        /// system. If the metered size is larger than `maxFsStatFiles`,
        /// then `ffiles` and `afiles` will both be '0'.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "maxFsStatFiles")]
        public System.Nullable<long> MaxFsStatFiles { get; set; }
        
    }
}
