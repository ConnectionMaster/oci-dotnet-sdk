/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.FilestorageService.Models
{
    /// <summary>
    /// Details for creating a quota rule in the file system.
    /// </summary>
    public class CreateQuotaRuleDetails 
    {
                ///
        /// <value>
        /// The type of the owner of this quota rule and usage.
        /// 
        /// </value>
        ///
        public enum PrincipalTypeEnum {
            [EnumMember(Value = "FILE_SYSTEM_LEVEL")]
            FileSystemLevel,
            [EnumMember(Value = "DEFAULT_GROUP")]
            DefaultGroup,
            [EnumMember(Value = "DEFAULT_USER")]
            DefaultUser,
            [EnumMember(Value = "INDIVIDUAL_GROUP")]
            IndividualGroup,
            [EnumMember(Value = "INDIVIDUAL_USER")]
            IndividualUser
        };

        /// <value>
        /// The type of the owner of this quota rule and usage.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PrincipalType is required.")]
        [JsonProperty(PropertyName = "principalType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<PrincipalTypeEnum> PrincipalType { get; set; }
        
        /// <value>
        /// An identifier for the user or the group associated with quota rule and usage. UNIX-like operating systems use this integer value to
        /// identify a user or group to manage access control.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "principalId")]
        public System.Nullable<int> PrincipalId { get; set; }
        
        /// <value>
        /// Whether the quota rule will be enforced.
        /// If `isHardQuota` is true, the quota rule is enforced so that the write is blocked if usage
        /// exceeds the hard quota limit.
        /// If `isHardQuota` is false, writes succeed even if usage exceeds the soft quota limit, but the quota rule is violated.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsHardQuota is required.")]
        [JsonProperty(PropertyName = "isHardQuota")]
        public System.Nullable<bool> IsHardQuota { get; set; }
        
        /// <value>
        /// A user-friendly name. It does not have to be unique, and it is changeable.
        /// Avoid entering confidential information.
        /// Example: UserXYZ's quota
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The value of the quota rule in gigabytes.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "QuotaLimitInGigabytes is required.")]
        [JsonProperty(PropertyName = "quotaLimitInGigabytes")]
        public System.Nullable<int> QuotaLimitInGigabytes { get; set; }
        
    }
}
