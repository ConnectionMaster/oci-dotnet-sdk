/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Oci.FilestorageService.Models;

namespace Oci.FilestorageService.Requests
{
    /// <example>
    /// Click <a href="https://docs.cloud.oracle.com/en-us/iaas/tools/dot-net-examples/latest/filestorage/ListQuotaRules.cs.html">here</a> to see an example of how to use ListQuotaRules request.
    /// </example>
    public class ListQuotaRulesRequest : Oci.Common.IOciRequest
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the file system.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FileSystemId is required.")]
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Path, "fileSystemId")]
        public string FileSystemId { get; set; }
        
        ///
        /// <value>
        /// The type of the owner of this quota rule and usage.
        /// 
        /// </value>
        ///
        public enum PrincipalTypeEnum {
            [EnumMember(Value = "FILE_SYSTEM_LEVEL")]
            FileSystemLevel,
            [EnumMember(Value = "DEFAULT_GROUP")]
            DefaultGroup,
            [EnumMember(Value = "DEFAULT_USER")]
            DefaultUser,
            [EnumMember(Value = "INDIVIDUAL_GROUP")]
            IndividualGroup,
            [EnumMember(Value = "INDIVIDUAL_USER")]
            IndividualUser
        };

        /// <value>
        /// The type of the owner of this quota rule and usage.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PrincipalType is required.")]
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "principalType")]
        public System.Nullable<PrincipalTypeEnum> PrincipalType { get; set; }
        
        /// <value>
        /// For list pagination. The maximum number of results per page,
        /// or items to return in a paginated \"List\" call.
        /// 1 is the minimum, 4096 is the maximum.
        /// <br/>
        /// For important details about how pagination works,
        /// see [List Pagination](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).
        /// <br/>
        /// Example: 500
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "limit")]
        public System.Nullable<int> Limit { get; set; }
        
        /// <value>
        /// For list pagination. The value of the `opc-next-page` response
        /// header from the previous \"List\" call.
        /// <br/>
        /// For important details about how pagination works,
        /// see [List Pagination](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/usingapi.htm#nine).
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "page")]
        public string Page { get; set; }
        
        /// <value>
        /// An identifier for the user or the group associated with quota rule and usage. UNIX-like operating systems use this integer value to
        /// identify a user or group to manage access control.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "principalId")]
        public System.Nullable<int> PrincipalId { get; set; }
        
        /// <value>
        /// An option to display only the users or groups that violate their quota rules.
        /// If `areViolatorsOnly` is false, results report all the quota and usage.
        /// If `areViolatorsOnly` is true, results only report the quota and usage for
        /// the users or groups that violate their quota rules.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "areViolatorsOnly")]
        public System.Nullable<bool> AreViolatorsOnly { get; set; }
        
        ///
        /// <value>
        /// The sort order to use, either 'asc' or 'desc', where 'asc' is
        /// ascending and 'desc' is descending. The default order is 'desc'
        /// except for numeric values.
        /// 
        /// </value>
        ///
        public enum SortOrderEnum {
            [EnumMember(Value = "ASC")]
            Asc,
            [EnumMember(Value = "DESC")]
            Desc
        };

        /// <value>
        /// The sort order to use, either 'asc' or 'desc', where 'asc' is
        /// ascending and 'desc' is descending. The default order is 'desc'
        /// except for numeric values.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "sortOrder")]
        public System.Nullable<SortOrderEnum> SortOrder { get; set; }
        
        /// <value>
        /// For optimistic concurrency control. In the PUT or DELETE call
        /// for a resource, set the `if-match` parameter to the value of the
        /// etag from a previous GET or POST response for that resource.
        /// The resource will be updated or deleted only if the etag you
        /// provide matches the resource's current etag value.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Header, "if-match")]
        public string IfMatch { get; set; }
        
        /// <value>
        /// Unique identifier for the request.
        /// If you need to contact Oracle about a particular request, please provide the request ID.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Header, "opc-request-id")]
        public string OpcRequestId { get; set; }
    }
}
