/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BastionService.Models
{
    /// <summary>
    /// A bastion session resource. A bastion session lets authorized users connect to a target resource using a Secure Shell (SSH) for a predetermined amount of time.
    /// </summary>
    public class Session 
    {
        
        /// <value>
        /// The unique identifier (OCID) of the session, which can't be changed after creation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The name of the session.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The unique identifier (OCID) of the bastion that is hosting this session.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BastionId is required.")]
        [JsonProperty(PropertyName = "bastionId")]
        public string BastionId { get; set; }
        
        /// <value>
        /// The name of the bastion that is hosting this session.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BastionName is required.")]
        [JsonProperty(PropertyName = "bastionName")]
        public string BastionName { get; set; }
        
        /// <value>
        /// The username that the session uses to connect to the target resource.
        /// </value>
        [JsonProperty(PropertyName = "bastionUserName")]
        public string BastionUserName { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetResourceDetails is required.")]
        [JsonProperty(PropertyName = "targetResourceDetails")]
        public TargetResourceDetails TargetResourceDetails { get; set; }
        
        /// <value>
        /// The connection message for the session.
        /// </value>
        [JsonProperty(PropertyName = "sshMetadata")]
        public System.Collections.Generic.Dictionary<string, string> SshMetadata { get; set; }
                ///
        /// <value>
        /// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
        /// </value>
        ///
        public enum KeyTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "PUB")]
            Pub
        };

        /// <value>
        /// The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
        /// </value>
        [JsonProperty(PropertyName = "keyType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<KeyTypeEnum> KeyType { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyDetails is required.")]
        [JsonProperty(PropertyName = "keyDetails")]
        public PublicKeyDetails KeyDetails { get; set; }
        
        /// <value>
        /// The public key of the bastion host. You can use this to verify that you're connecting to the correct bastion.
        /// </value>
        [JsonProperty(PropertyName = "bastionPublicHostKeyInfo")]
        public string BastionPublicHostKeyInfo { get; set; }
        
        /// <value>
        /// The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// Example: 2020-01-25T21:10:29.600Z
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// Example: 2020-01-25T21:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The current state of the session.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SessionLifecycleState> LifecycleState { get; set; }
        
        /// <value>
        /// A message describing the current session state in more detail.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// The amount of time the session can remain active.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SessionTtlInSeconds is required.")]
        [JsonProperty(PropertyName = "sessionTtlInSeconds")]
        public System.Nullable<int> SessionTtlInSeconds { get; set; }
        
    }
}
