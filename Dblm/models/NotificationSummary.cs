/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DblmService.Models
{
    /// <summary>
    /// Notifications
    /// </summary>
    public class NotificationSummary 
    {
                ///
        /// <value>
        /// Notification type
        /// </value>
        ///
        public enum NotificationTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "CVE")]
            Cve,
            [EnumMember(Value = "ADVISORY")]
            Advisory,
            [EnumMember(Value = "PATCH")]
            Patch
        };

        /// <value>
        /// Notification type
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NotificationType is required.")]
        [JsonProperty(PropertyName = "notificationType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<NotificationTypeEnum> NotificationType { get; set; }
        
        /// <value>
        /// Notification text
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NotificationText is required.")]
        [JsonProperty(PropertyName = "notificationText")]
        public string NotificationText { get; set; }
        
        /// <value>
        /// Notification identifier.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// Published date
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimePublished is required.")]
        [JsonProperty(PropertyName = "timePublished")]
        public System.Nullable<System.DateTime> TimePublished { get; set; }
        
    }
}
