/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The details used to save a security assessment.
    /// </summary>
    public class CreateSecurityAssessmentDetails 
    {
        
        /// <value>
        /// The OCID of the compartment that contains the security assessment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The display name of the security assessment.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Description of the security assessment.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The OCID of the target database or target database group on which security assessment is to be run.
        /// </value>
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }
        
        /// <value>
        /// The type of security assessment resource whether it is individual or group resource. For individual target use type TARGET_DATABASE and for group resource use type TARGET_DATABASE_GROUP. If not provided, TARGET_DATABASE would be used as default value.
        /// </value>
        [JsonProperty(PropertyName = "targetType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<SecurityAssessmentTargetType> TargetType { get; set; }
                ///
        /// <value>
        /// The type of the security assessment
        /// </value>
        ///
        public enum TypeEnum {
            [EnumMember(Value = "LATEST")]
            Latest,
            [EnumMember(Value = "SAVED")]
            Saved,
            [EnumMember(Value = "SAVE_SCHEDULE")]
            SaveSchedule,
            [EnumMember(Value = "COMPARTMENT")]
            Compartment,
            [EnumMember(Value = "TEMPLATE")]
            Template,
            [EnumMember(Value = "TEMPLATE_BASELINE")]
            TemplateBaseline
        };

        /// <value>
        /// The type of the security assessment
        /// </value>
        [JsonProperty(PropertyName = "type")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TypeEnum> Type { get; set; }
        
        /// <value>
        /// The OCID of the template assessment. It will be required while creating the template baseline assessment.
        /// </value>
        [JsonProperty(PropertyName = "templateAssessmentId")]
        public string TemplateAssessmentId { get; set; }
        
        /// <value>
        /// The OCID of the security assessment. The assessment should be of type SAVED. 
        /// It will be required while creating the template baseline assessment for individual targets to fetch the detailed information from an existing security assessment.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "baseSecurityAssessmentId")]
        public string BaseSecurityAssessmentId { get; set; }
        
        /// <value>
        /// Indicates whether the assessment is scheduled to run.
        /// </value>
        [JsonProperty(PropertyName = "isAssessmentScheduled")]
        public System.Nullable<bool> IsAssessmentScheduled { get; set; }
        
        /// <value>
        /// To schedule the assessment for running periodically, specify the schedule in this attribute.
        /// Create or schedule one assessment per compartment. If not defined, the assessment runs immediately.
        /// Format -
        /// <version-string>;<version-specific-schedule>
        /// <br/>
        /// Allowed version strings - \"v1\"
        /// v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month>
        /// Each of the above fields potentially introduce constraints. A workrequest is created only
        /// when clock time satisfies all the constraints. Constraints introduced:
        /// 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59])
        /// 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59])
        /// 3. hours = <hh> (So, the allowed range for <hh> is [0, 23])
        /// <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday))
        /// 4. No constraint introduced when it is '*'. When not, day of week must equal the given value
        /// <day-of-month> can be either '*' (without quotes or a number between 1 and 28)
        /// 5. No constraint introduced when it is '*'. When not, day of month must equal the given value
        /// 
        /// </value>
        [JsonProperty(PropertyName = "schedule")]
        public string Schedule { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
