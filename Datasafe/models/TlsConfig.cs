/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The details required to establish a TLS enabled connection.
    /// </summary>
    public class TlsConfig 
    {
                ///
        /// <value>
        /// Status to represent whether the database connection is TLS enabled or not.
        /// </value>
        ///
        public enum StatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLED")]
            Disabled
        };

        /// <value>
        /// Status to represent whether the database connection is TLS enabled or not.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
                ///
        /// <value>
        /// The format of the certificate store.
        /// </value>
        ///
        public enum CertificateStoreTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "JKS")]
            Jks
        };

        /// <value>
        /// The format of the certificate store.
        /// </value>
        [JsonProperty(PropertyName = "certificateStoreType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<CertificateStoreTypeEnum> CertificateStoreType { get; set; }
        
        /// <value>
        /// The password to read the trust store and key store files, if they are password protected.
        /// </value>
        [JsonProperty(PropertyName = "storePassword")]
        public string StorePassword { get; set; }
        
        /// <value>
        /// Base64 encoded string of trust store file content.
        /// </value>
        [JsonProperty(PropertyName = "trustStoreContent")]
        public string TrustStoreContent { get; set; }
        
        /// <value>
        /// Base64 encoded string of key store file content.
        /// </value>
        [JsonProperty(PropertyName = "keyStoreContent")]
        public string KeyStoreContent { get; set; }
        
    }
}
