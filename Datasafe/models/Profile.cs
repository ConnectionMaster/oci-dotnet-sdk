/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The comprehensive information about the user profiles available on a given target.
    /// It includes details such as profile name, failed login attempts, password reuse time, password verification function,
    /// password verification function implementation code snippet, sessions per user, connect time inactive account time,
    /// password lock time, cpu usage per session, target id, and compartment id.
    /// 
    /// </summary>
    public class Profile 
    {
        
        /// <value>
        /// The OCID of the user assessment corresponding to the target under consideration.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UserAssessmentId is required.")]
        [JsonProperty(PropertyName = "userAssessmentId")]
        public string UserAssessmentId { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the user assessment.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The OCID of the target database.
        /// </value>
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }
        
        /// <value>
        /// The name of the profile.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ProfileName is required.")]
        [JsonProperty(PropertyName = "profileName")]
        public string ProfileName { get; set; }
        
        /// <value>
        /// The number of users that have a given profile.
        /// </value>
        [JsonProperty(PropertyName = "userCount")]
        public System.Nullable<int> UserCount { get; set; }
        
        /// <value>
        /// Maximum times the user is allowed in fail login before the user account is locked.
        /// </value>
        [JsonProperty(PropertyName = "failedLoginAttempts")]
        public string FailedLoginAttempts { get; set; }
        
        /// <value>
        /// Name of the PL/SQL that can be used for password verification.
        /// </value>
        [JsonProperty(PropertyName = "passwordVerificationFunction")]
        public string PasswordVerificationFunction { get; set; }
        
        /// <value>
        /// Details about the PL/SQL that can be used for password verification.
        /// </value>
        [JsonProperty(PropertyName = "passwordVerificationFunctionDetails")]
        public string PasswordVerificationFunctionDetails { get; set; }
        
        /// <value>
        /// Number of days the user account remains locked after failed login.
        /// </value>
        [JsonProperty(PropertyName = "passwordLockTime")]
        public string PasswordLockTime { get; set; }
        
        /// <value>
        /// Number of days the password is valid before expiry.
        /// </value>
        [JsonProperty(PropertyName = "passwordLifeTime")]
        public string PasswordLifeTime { get; set; }
        
        /// <value>
        /// Number of day after the user can use the already used password.
        /// </value>
        [JsonProperty(PropertyName = "passwordReuseMax")]
        public string PasswordReuseMax { get; set; }
        
        /// <value>
        /// Number of days before which a password cannot be reused.
        /// </value>
        [JsonProperty(PropertyName = "passwordReuseTime")]
        public string PasswordReuseTime { get; set; }
        
        /// <value>
        /// Number of days the password rollover is allowed. Minimum value can be 1/24 day (1 hour) to 60 days.
        /// </value>
        [JsonProperty(PropertyName = "passwordRolloverTime")]
        public string PasswordRolloverTime { get; set; }
        
        /// <value>
        /// Number of grace days for user to change password.
        /// </value>
        [JsonProperty(PropertyName = "passwordGraceTime")]
        public string PasswordGraceTime { get; set; }
        
        /// <value>
        /// Represents if the profile is created by user.
        /// </value>
        [JsonProperty(PropertyName = "isUserCreated")]
        public System.Nullable<bool> IsUserCreated { get; set; }
        
        /// <value>
        /// Specify the number of concurrent sessions to which you want to limit the user.
        /// </value>
        [JsonProperty(PropertyName = "sessionsPerUser")]
        public string SessionsPerUser { get; set; }
        
        /// <value>
        /// The permitted periods of continuous inactive time during a session, expressed in minutes.
        /// Long-running queries and other operations are not subject to this limit.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "inactiveAccountTime")]
        public string InactiveAccountTime { get; set; }
        
        /// <value>
        /// Specify the total elapsed time limit for a session, expressed in minutes.
        /// </value>
        [JsonProperty(PropertyName = "connectTime")]
        public string ConnectTime { get; set; }
        
        /// <value>
        /// Specify the permitted periods of continuous inactive time during a  session, expressed in minutes.
        /// </value>
        [JsonProperty(PropertyName = "idleTime")]
        public string IdleTime { get; set; }
        
        /// <value>
        /// Specify the total resource cost for a session, expressed in service units. Oracle Database calculates the total
        /// service units as a weighted sum of CPU_PER_SESSION, CONNECT_TIME, LOGICAL_READS_PER_SESSION, and PRIVATE_SGA.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "compositeLimit")]
        public string CompositeLimit { get; set; }
        
        /// <value>
        /// Specify the CPU time limit for a call (a parse, execute, or fetch), expressed in hundredths of seconds.
        /// </value>
        [JsonProperty(PropertyName = "cpuPerCall")]
        public string CpuPerCall { get; set; }
        
        /// <value>
        /// Specify the CPU time limit for a session, expressed in hundredth of seconds.
        /// </value>
        [JsonProperty(PropertyName = "cpuPerSession")]
        public string CpuPerSession { get; set; }
        
        /// <value>
        /// Specify the permitted the number of data blocks read for a call to process a SQL statement (a parse, execute, or fetch).
        /// </value>
        [JsonProperty(PropertyName = "logicalReadsPerCall")]
        public string LogicalReadsPerCall { get; set; }
        
        /// <value>
        /// Specify the permitted number of data blocks read in a session, including blocks read from memory and disk.
        /// </value>
        [JsonProperty(PropertyName = "logicalReadsPerSession")]
        public string LogicalReadsPerSession { get; set; }
        
        /// <value>
        /// Specify the amount of private space a session can allocate in the shared pool of the system global area (SGA),
        /// expressed in bytes.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "privateSga")]
        public string PrivateSga { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
