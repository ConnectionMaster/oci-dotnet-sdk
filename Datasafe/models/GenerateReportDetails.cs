/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// Details for the report generation.
    /// </summary>
    public class GenerateReportDetails 
    {
        
        /// <value>
        /// The name of the report to be generated
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Array of database target OCIDs.
        /// </value>
        [JsonProperty(PropertyName = "targetIds")]
        public System.Collections.Generic.List<string> TargetIds { get; set; }
        
        /// <value>
        /// The description of the report to be generated
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment
        /// into which the resource should be moved.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
                ///
        /// <value>
        /// Specifies the format of report to be .xls or .pdf or .json
        /// </value>
        ///
        public enum MimeTypeEnum {
            [EnumMember(Value = "PDF")]
            Pdf,
            [EnumMember(Value = "XLS")]
            Xls
        };

        /// <value>
        /// Specifies the format of report to be .xls or .pdf or .json
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MimeType is required.")]
        [JsonProperty(PropertyName = "mimeType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MimeTypeEnum> MimeType { get; set; }
        
        /// <value>
        /// Specifies the time until which the data needs to be reported.
        /// </value>
        [JsonProperty(PropertyName = "timeLessThan")]
        public System.Nullable<System.DateTime> TimeLessThan { get; set; }
        
        /// <value>
        /// Specifies the time after which the data needs to be reported.
        /// </value>
        [JsonProperty(PropertyName = "timeGreaterThan")]
        public System.Nullable<System.DateTime> TimeGreaterThan { get; set; }
        
        /// <value>
        /// Specifies the limit on the number of rows in the report.
        /// </value>
        [JsonProperty(PropertyName = "rowLimit")]
        public System.Nullable<int> RowLimit { get; set; }
        
    }
}
