/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The Random Number masking format generates random and unique integers within
    /// a range. The range is defined by the startValue and endValue attributes. The 
    /// start value must be less than or equal to the end value. When masking columns 
    /// with uniqueness constraint, ensure that the range is sufficient enough to 
    /// generate unique values. To learn more, check Random Number in the Data Safe 
    /// documentation. 
    /// 
    /// </summary>
    public class RandomNumberFormatEntry : FormatEntry
    {
        
        /// <value>
        /// The lower bound of the range within which random numbers should be 
        /// generated. It must be less than or equal to the end value. It 
        /// supports input of long type.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "StartValue is required.")]
        [JsonProperty(PropertyName = "startValue")]
        public System.Nullable<long> StartValue { get; set; }
        
        /// <value>
        /// The upper bound of the range within which random numbers should be 
        /// generated. It must be greater than or equal to the start value. 
        /// It supports input of long type. 
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EndValue is required.")]
        [JsonProperty(PropertyName = "endValue")]
        public System.Nullable<long> EndValue { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "RANDOM_NUMBER";
    }
}
