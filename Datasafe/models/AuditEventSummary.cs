/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The resource represents the audit events collected from the target database by Oracle Data Safe.
    /// </summary>
    public class AuditEventSummary 
    {
        
        /// <value>
        /// The OCID of the audit event.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The OCID of the compartment containing the audit event. The compartment is the same as that of audit profile of the target database resource.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The name of the database user whose actions were audited.
        /// </value>
        [JsonProperty(PropertyName = "dbUserName")]
        public string DbUserName { get; set; }
        
        /// <value>
        /// The OCID of the target database that was audited.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetId is required.")]
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }
        
        /// <value>
        /// The name of the target database that was audited.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetName is required.")]
        [JsonProperty(PropertyName = "targetName")]
        public string TargetName { get; set; }
                ///
        /// <value>
        /// The type of the target database that was audited. Allowed values are
        ///   - DATABASE_CLOUD_SERVICE - Represents Oracle Database Cloud Services.
        ///   - AUTONOMOUS_DATABASE - Represents Oracle Autonomous Databases.
        ///   - INSTALLED_DATABASE - Represents databases running on-premises or on compute instances.
        /// 
        /// </value>
        ///
        public enum DatabaseTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "DATABASE_CLOUD_SERVICE")]
            DatabaseCloudService,
            [EnumMember(Value = "AUTONOMOUS_DATABASE")]
            AutonomousDatabase,
            [EnumMember(Value = "INSTALLED_DATABASE")]
            InstalledDatabase
        };

        /// <value>
        /// The type of the target database that was audited. Allowed values are
        ///   - DATABASE_CLOUD_SERVICE - Represents Oracle Database Cloud Services.
        ///   - AUTONOMOUS_DATABASE - Represents Oracle Autonomous Databases.
        ///   - INSTALLED_DATABASE - Represents databases running on-premises or on compute instances.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseType is required.")]
        [JsonProperty(PropertyName = "databaseType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DatabaseTypeEnum> DatabaseType { get; set; }
                ///
        /// <value>
        /// The class of the target that was audited.
        /// </value>
        ///
        public enum TargetClassEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "DATABASE")]
            Database
        };

        /// <value>
        /// The class of the target that was audited.
        /// </value>
        [JsonProperty(PropertyName = "targetClass")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TargetClassEnum> TargetClass { get; set; }
        
        /// <value>
        /// The time that the audit event occurs in the target database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AuditEventTime is required.")]
        [JsonProperty(PropertyName = "auditEventTime")]
        public System.Nullable<System.DateTime> AuditEventTime { get; set; }
        
        /// <value>
        /// The timestamp when this audit event was collected from the target database by Data Safe.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCollected is required.")]
        [JsonProperty(PropertyName = "timeCollected")]
        public System.Nullable<System.DateTime> TimeCollected { get; set; }
        
        /// <value>
        /// The name of the operating system user for the database session.
        /// </value>
        [JsonProperty(PropertyName = "osUserName")]
        public string OsUserName { get; set; }
        
        /// <value>
        /// The name of the action executed by the user on the target database. For example ALTER, CREATE or DROP.
        /// </value>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; set; }
                ///
        /// <value>
        /// Indicates whether the operation was a success or a failure.
        /// </value>
        ///
        public enum OperationStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SUCCESS")]
            Success,
            [EnumMember(Value = "FAILURE")]
            Failure
        };

        /// <value>
        /// Indicates whether the operation was a success or a failure.
        /// </value>
        [JsonProperty(PropertyName = "operationStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<OperationStatusEnum> OperationStatus { get; set; }
        
        /// <value>
        /// The name of the detail action executed by the user on the target database. For example ALTER SEQUENCE, CREATE TRIGGER or CREATE INDEX.
        /// </value>
        [JsonProperty(PropertyName = "eventName")]
        public string EventName { get; set; }
        
        /// <value>
        /// Oracle Error code generated by the action. Zero indicates the action was successful.
        /// </value>
        [JsonProperty(PropertyName = "errorCode")]
        public string ErrorCode { get; set; }
        
        /// <value>
        /// The detailed message on why the error occurred.
        /// </value>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }
        
        /// <value>
        /// The type of the object in the source database affected by the action. For example PL/SQL, SYNONYM or PACKAGE BODY.
        /// </value>
        [JsonProperty(PropertyName = "objectType")]
        public string ObjectType { get; set; }
        
        /// <value>
        /// The name of the object affected by the action.
        /// </value>
        [JsonProperty(PropertyName = "objectName")]
        public string ObjectName { get; set; }
        
        /// <value>
        /// The schema name of the object affected by the action.
        /// </value>
        [JsonProperty(PropertyName = "objectOwner")]
        public string ObjectOwner { get; set; }
        
        /// <value>
        /// The name of the host machine from which the session was spawned.
        /// </value>
        [JsonProperty(PropertyName = "clientHostname")]
        public string ClientHostname { get; set; }
        
        /// <value>
        /// The IP address of the host machine from which the session was spawned.
        /// </value>
        [JsonProperty(PropertyName = "clientIp")]
        public string ClientIp { get; set; }
        
        /// <value>
        /// The OCID of the audit trail that generated this audit event. To be noted, this field has been deprecated.
        /// </value>
        [JsonProperty(PropertyName = "auditTrailId")]
        public string AuditTrailId { get; set; }
        
        /// <value>
        /// Indicates whether an alert was raised for this audit event.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsAlerted is required.")]
        [JsonProperty(PropertyName = "isAlerted")]
        public System.Nullable<bool> IsAlerted { get; set; }
        
        /// <value>
        /// The action taken for this audit event.
        /// </value>
        [JsonProperty(PropertyName = "actionTaken")]
        public string ActionTaken { get; set; }
        
        /// <value>
        /// The application from which the audit event was generated. For example SQL Plus or SQL Developer.
        /// </value>
        [JsonProperty(PropertyName = "clientProgram")]
        public string ClientProgram { get; set; }
        
        /// <value>
        /// The SQL associated with the audit event.
        /// </value>
        [JsonProperty(PropertyName = "commandText")]
        public string CommandText { get; set; }
        
        /// <value>
        /// List of bind variables associated with the command text.
        /// </value>
        [JsonProperty(PropertyName = "commandParam")]
        public string CommandParam { get; set; }
        
        /// <value>
        /// List of all other attributes of the audit event seperated by a colon other than the one returned in audit record.
        /// </value>
        [JsonProperty(PropertyName = "extendedEventAttributes")]
        public string ExtendedEventAttributes { get; set; }
                ///
        /// <value>
        /// The location of the audit. Currently the value is audit table.
        /// </value>
        ///
        public enum AuditLocationEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "AUDIT_TABLE")]
            AuditTable
        };

        /// <value>
        /// The location of the audit. Currently the value is audit table.
        /// </value>
        [JsonProperty(PropertyName = "auditLocation")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AuditLocationEnum> AuditLocation { get; set; }
        
        /// <value>
        /// The operating system terminal of the user session.
        /// </value>
        [JsonProperty(PropertyName = "osTerminal")]
        public string OsTerminal { get; set; }
        
        /// <value>
        /// The client identifier in each Oracle session.
        /// </value>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }
        
        /// <value>
        /// Comma-seperated list of audit policies that caused the current audit event.
        /// </value>
        [JsonProperty(PropertyName = "auditPolicies")]
        public string AuditPolicies { get; set; }
                ///
        /// <value>
        /// The type of the auditing.
        /// </value>
        ///
        public enum AuditTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "STANDARD")]
            Standard,
            [EnumMember(Value = "FINE_GRAINED")]
            FineGrained,
            [EnumMember(Value = "XS")]
            Xs,
            [EnumMember(Value = "DATABASE_VAULT")]
            DatabaseVault,
            [EnumMember(Value = "LABEL_SECURITY")]
            LabelSecurity,
            [EnumMember(Value = "RMAN")]
            Rman,
            [EnumMember(Value = "DATAPUMP")]
            Datapump,
            [EnumMember(Value = "DIRECT_PATH_API")]
            DirectPathApi
        };

        /// <value>
        /// The type of the auditing.
        /// </value>
        [JsonProperty(PropertyName = "auditType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AuditTypeEnum> AuditType { get; set; }
        
        /// <value>
        /// The secondary id assigned for the peer database registered with Data Safe.
        /// </value>
        [JsonProperty(PropertyName = "peerTargetDatabaseKey")]
        public System.Nullable<int> PeerTargetDatabaseKey { get; set; }
        
        /// <value>
        /// The underlying source of unified audit trail.
        /// </value>
        [JsonProperty(PropertyName = "trailSource")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AuditTrailSource> TrailSource { get; set; }
        
        /// <value>
        /// Unique name of the database associated to the peer target database.
        /// </value>
        [JsonProperty(PropertyName = "databaseUniqueName")]
        public string DatabaseUniqueName { get; set; }
        
        /// <value>
        /// Semicolon-seperated list of application context namespace, attribute, value information in (APPCTX_NSPACE,APPCTX_ATTRIBUTE=<value>) format.
        /// </value>
        [JsonProperty(PropertyName = "applicationContexts")]
        public string ApplicationContexts { get; set; }
        
        /// <value>
        /// Fine-grained auditing (FGA) policy name that generated this audit record.
        /// </value>
        [JsonProperty(PropertyName = "fgaPolicyName")]
        public string FgaPolicyName { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
