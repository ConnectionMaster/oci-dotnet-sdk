/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// An audit trail represents the source of audit records that provides documentary evidence of
    /// the sequence of activities in the target database. Configuring audit trails in Data Safe, and enabling
    /// audit data collection on the audit trails copies the audit records from the target database's audit trail
    /// into the Data Safe repository.
    /// 
    /// </summary>
    public class AuditTrail 
    {
        
        /// <value>
        /// The OCID of the audit trail.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The OCID of the  parent audit.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AuditProfileId is required.")]
        [JsonProperty(PropertyName = "auditProfileId")]
        public string AuditProfileId { get; set; }
        
        /// <value>
        /// The OCID of the Data Safe target for which the audit trail is created.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetId is required.")]
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }
        
        /// <value>
        /// The display name of the audit trail.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The date and time the audit trail was created, in the format defined by RFC3339.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The date and time the audit trail was updated, in the format defined by RFC3339.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeUpdated is required.")]
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The current state of the audit trail.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AuditTrailLifecycleState> LifecycleState { get; set; }
        
        /// <value>
        /// The current sub-state of the audit trail.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AuditTrailStatus> Status { get; set; }
        
        /// <value>
        /// Details about the current state of the audit trail in Data Safe.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// An audit trail location represents the source of audit records that provides documentary
        /// evidence of the sequence of activities in the target database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "trailLocation")]
        public string TrailLocation { get; set; }
        
        /// <value>
        /// The description of the audit trail.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// Indicates if auto purge is enabled on the target database, which helps delete audit data in the
        /// target database every seven days so that the database's audit trail does not become too large.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAutoPurgeEnabled")]
        public System.Nullable<bool> IsAutoPurgeEnabled { get; set; }
        
        /// <value>
        /// The date from which the audit trail must start collecting data, in the format defined by RFC3339.
        /// </value>
        [JsonProperty(PropertyName = "auditCollectionStartTime")]
        public System.Nullable<System.DateTime> AuditCollectionStartTime { get; set; }
        
        /// <value>
        /// The OCID of the workrequest for audit trail which collects audit records.
        /// </value>
        [JsonProperty(PropertyName = "workRequestId")]
        public string WorkRequestId { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the audit trail and is the same as the compartment of the audit profile resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The date and time until when the audit events were collected from the target database by the Data Safe audit trail 
        /// collection process, in the format defined by RFC3339.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLastCollected")]
        public System.Nullable<System.DateTime> TimeLastCollected { get; set; }
        
        /// <value>
        /// The secondary id assigned for the peer database registered with Data Safe.
        /// </value>
        [JsonProperty(PropertyName = "peerTargetDatabaseKey")]
        public System.Nullable<int> PeerTargetDatabaseKey { get; set; }
        
        /// <value>
        /// The underlying source of unified audit trail.
        /// </value>
        [JsonProperty(PropertyName = "trailSource")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AuditTrailSource> TrailSource { get; set; }
        
        /// <value>
        /// The date and time of the last purge job. The purge job deletes audit data in the
        /// target database every seven days so that the database's audit trail does not become too large.
        /// In the format defined by RFC3339.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "purgeJobTime")]
        public System.Nullable<System.DateTime> PurgeJobTime { get; set; }
                ///
        /// <value>
        /// The current status of the audit trail purge job.
        /// </value>
        ///
        public enum PurgeJobStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "FAILED")]
            Failed
        };

        /// <value>
        /// The current status of the audit trail purge job.
        /// </value>
        [JsonProperty(PropertyName = "purgeJobStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PurgeJobStatusEnum> PurgeJobStatus { get; set; }
        
        /// <value>
        /// The details of the audit trail purge job that ran at the time specified by purgeJobTime\".
        /// </value>
        [JsonProperty(PropertyName = "purgeJobDetails")]
        public string PurgeJobDetails { get; set; }
        
        /// <value>
        /// Indicates if the Datasafe updates last archive time on target database. If isAutoPurgeEnabled field
        /// is enabled, this field must be true.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "canUpdateLastArchiveTimeOnTarget")]
        public System.Nullable<bool> CanUpdateLastArchiveTimeOnTarget { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
