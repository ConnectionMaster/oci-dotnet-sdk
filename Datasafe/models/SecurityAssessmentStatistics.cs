/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// Statistics showing the number of findings for each category grouped by risk levels for all
    /// the targets in the specified security assessment.
    /// <br/>
    /// The categories include Auditing, Authorization Control, Data Encryption, Database Configuration,
    /// Fine-Grained Access Control, Privileges and Roles, and User Accounts.
    /// The risk levels include High Risk, Medium Risk, Low Risk, Advisory, Evaluate, and Pass.
    /// 
    /// </summary>
    public class SecurityAssessmentStatistics 
    {
        
        /// <value>
        /// The total number of targets in this security assessment.
        /// </value>
        [JsonProperty(PropertyName = "targetsCount")]
        public System.Nullable<int> TargetsCount { get; set; }
        
        [JsonProperty(PropertyName = "highRisk")]
        public SectionStatistics HighRisk { get; set; }
        
        [JsonProperty(PropertyName = "mediumRisk")]
        public SectionStatistics MediumRisk { get; set; }
        
        [JsonProperty(PropertyName = "lowRisk")]
        public SectionStatistics LowRisk { get; set; }
        
        [JsonProperty(PropertyName = "advisory")]
        public SectionStatistics Advisory { get; set; }
        
        [JsonProperty(PropertyName = "evaluate")]
        public SectionStatistics Evaluate { get; set; }
        
        [JsonProperty(PropertyName = "pass")]
        public SectionStatistics Pass { get; set; }
        
    }
}
