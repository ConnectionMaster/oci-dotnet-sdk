/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The details of the report schedule.
    /// </summary>
    public class ScheduleReportDetails 
    {
        
        /// <value>
        /// The name of the report to be scheduled
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The schedule to generate the report periodically in the specified format:
        /// <version-string>;<version-specific-schedule>
        /// <br/>
        /// Allowed version strings - \"v1\"
        /// v1's version specific schedule -<ss> <mm> <hh> <day-of-week> <day-of-month>
        /// Each of the above fields potentially introduce constraints. A workrequest is created only
        /// when clock time satisfies all the constraints. Constraints introduced:
        /// 1. seconds = <ss> (So, the allowed range for <ss> is [0, 59])
        /// 2. minutes = <mm> (So, the allowed range for <mm> is [0, 59])
        /// 3. hours = <hh> (So, the allowed range for <hh> is [0, 23])
        /// 4. <day-of-week> can be either '*' (without quotes or a number between 1(Monday) and 7(Sunday))
        /// No constraint introduced when it is '*'. When not, day of week must equal the given value
        /// 5. <day-of-month> can be either '*' (without quotes or a number between 1 and 28)
        /// No constraint introduced when it is '*'. When not, day of month must equal the given value
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Schedule is required.")]
        [JsonProperty(PropertyName = "schedule")]
        public string Schedule { get; set; }
                ///
        /// <value>
        /// Specifies if the report will be in .xls or .pdf or .json format
        /// </value>
        ///
        public enum MimeTypeEnum {
            [EnumMember(Value = "PDF")]
            Pdf,
            [EnumMember(Value = "XLS")]
            Xls,
            [EnumMember(Value = "JSON")]
            Json
        };

        /// <value>
        /// Specifies if the report will be in .xls or .pdf or .json format
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MimeType is required.")]
        [JsonProperty(PropertyName = "mimeType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MimeTypeEnum> MimeType { get; set; }
        
        /// <value>
        /// The OCID of the compartment
        /// in which the resource should be created.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ReportDetails is required.")]
        [JsonProperty(PropertyName = "reportDetails")]
        public ReportDetails ReportDetails { get; set; }
        
    }
}
