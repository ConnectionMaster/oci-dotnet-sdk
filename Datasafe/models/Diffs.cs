/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// Results of the comparison of an item between two security assessments.
    /// 
    /// </summary>
    public class Diffs 
    {
        
        [JsonProperty(PropertyName = "current")]
        public Finding Current { get; set; }
        
        [JsonProperty(PropertyName = "baseline")]
        public Finding Baseline { get; set; }
        
        /// <value>
        /// This array identifies the items that are present in the baseline, but are missing from the current assessment.
        /// </value>
        [JsonProperty(PropertyName = "removedItems")]
        public System.Collections.Generic.List<string> RemovedItems { get; set; }
        
        /// <value>
        /// This array identifies the items that are present in the current assessment, but are missing from the baseline.
        /// </value>
        [JsonProperty(PropertyName = "addedItems")]
        public System.Collections.Generic.List<string> AddedItems { get; set; }
        
        /// <value>
        /// This array contains the items that are present in both the current assessment and the baseline, but are different in the two assessments.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "modifiedItems")]
        public System.Collections.Generic.List<string> ModifiedItems { get; set; }
                ///
        /// <value>
        /// The severity of this diff.
        /// </value>
        ///
        public enum SeverityEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "HIGH")]
            High,
            [EnumMember(Value = "MEDIUM")]
            Medium,
            [EnumMember(Value = "LOW")]
            Low,
            [EnumMember(Value = "EVALUATE")]
            Evaluate,
            [EnumMember(Value = "ADVISORY")]
            Advisory,
            [EnumMember(Value = "PASS")]
            Pass
        };

        /// <value>
        /// The severity of this diff.
        /// </value>
        [JsonProperty(PropertyName = "severity")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SeverityEnum> Severity { get; set; }
        
    }
}
