/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The Regular Expression masking format gives the flexibility to use regular 
    /// expressions to search for sensitive data in a column of Large Object data 
    /// type (LOB), and replace the data with a fixed string, fixed number, null 
    /// value, or SQL expression. It can also be used for columns of VARCHAR2 type 
    /// to mask parts of strings. To learn more, check Regular Expressions in the 
    /// Data Safe documentation. 
    /// 
    /// </summary>
    public class RegularExpressionFormatEntry : FormatEntry
    {
        
        /// <value>
        /// The pattern that should be used to search for data.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RegularExpression is required.")]
        [JsonProperty(PropertyName = "regularExpression")]
        public string RegularExpression { get; set; }
        
        /// <value>
        /// The value that should be used to replace the data matching the regular 
        /// expression. It can be a fixed string, fixed number, null value, or 
        /// SQL expression. 
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ReplaceWith is required.")]
        [JsonProperty(PropertyName = "replaceWith")]
        public string ReplaceWith { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "REGULAR_EXPRESSION";
    }
}
