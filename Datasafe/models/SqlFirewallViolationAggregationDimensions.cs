/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatasafeService.Models
{
    /// <summary>
    /// The details of the aggregation dimensions used for summarizing SQL violations.
    /// </summary>
    public class SqlFirewallViolationAggregationDimensions 
    {
        
        /// <value>
        /// The time of the SQL violation occurrence in the target database.
        /// </value>
        [JsonProperty(PropertyName = "operationTime")]
        public System.Collections.Generic.List<System.DateTime> OperationTime { get; set; }
        
        /// <value>
        /// The name of the database user.
        /// </value>
        [JsonProperty(PropertyName = "dbUserName")]
        public System.Collections.Generic.List<string> DbUserName { get; set; }
        
        /// <value>
        /// The OCID of the target database.
        /// </value>
        [JsonProperty(PropertyName = "targetId")]
        public System.Collections.Generic.List<string> TargetId { get; set; }
        
        /// <value>
        /// The name of the target database.
        /// </value>
        [JsonProperty(PropertyName = "targetName")]
        public System.Collections.Generic.List<string> TargetName { get; set; }
        
        /// <value>
        /// The application from which the SQL violation was generated. Examples SQL Plus or SQL Developer.
        /// </value>
        [JsonProperty(PropertyName = "clientProgram")]
        public System.Collections.Generic.List<string> ClientProgram { get; set; }
        
        /// <value>
        /// The name of the action executed by the user on the target database, for example, ALTER, CREATE, DROP.
        /// </value>
        [JsonProperty(PropertyName = "operation")]
        public System.Collections.Generic.List<string> Operation { get; set; }
        
        /// <value>
        /// The name of the operating system user for the database session.
        /// </value>
        [JsonProperty(PropertyName = "clientOsUserName")]
        public System.Collections.Generic.List<string> ClientOsUserName { get; set; }
        
        /// <value>
        /// Indicates whether SQL or context violation.
        /// </value>
        [JsonProperty(PropertyName = "violationCause")]
        public System.Collections.Generic.List<string> ViolationCause { get; set; }
        
        /// <value>
        /// The IP address of the host from which the session was spawned.
        /// </value>
        [JsonProperty(PropertyName = "clientIp")]
        public System.Collections.Generic.List<string> ClientIp { get; set; }
        
        /// <value>
        /// The action taken for this SQL violation.
        /// </value>
        [JsonProperty(PropertyName = "violationAction")]
        public System.Collections.Generic.List<string> ViolationAction { get; set; }
                ///
        ///
        public enum SqlLevelEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "USER_ISSUED_SQL")]
            UserIssuedSql,
            [EnumMember(Value = "ALL_SQL")]
            AllSql
        };

        /// <value>
        /// Specifies the level of SQL included for this SQL Firewall policy.
        /// USER_ISSUED_SQL - User issued SQL statements only.
        /// ALL_SQL - Includes all SQL statements including SQL statement issued inside PL/SQL units.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "sqlLevel", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<SqlLevelEnum> SqlLevel { get; set; }
        
    }
}
