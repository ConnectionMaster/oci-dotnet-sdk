/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Oci.DatasafeService.Models;

namespace Oci.DatasafeService.Requests
{
    /// <example>
    /// Click <a href="https://docs.cloud.oracle.com/en-us/iaas/tools/dot-net-examples/latest/datasafe/ListAuditEvents.cs.html">here</a> to see an example of how to use ListAuditEvents request.
    /// </example>
    public class ListAuditEventsRequest : Oci.Common.IOciRequest
    {
        
        /// <value>
        /// A filter to return only resources that match the specified compartment OCID.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Unique identifier for the request.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Header, "opc-request-id")]
        public string OpcRequestId { get; set; }
        
        /// <value>
        /// Default is false.
        /// When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the 'accessLevel' setting.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "compartmentIdInSubtree")]
        public System.Nullable<bool> CompartmentIdInSubtree { get; set; }
        
        ///
        /// <value>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED.
        /// Setting this to ACCESSIBLE returns only those compartments for which the
        /// user has INSPECT permissions directly or indirectly (permissions can be on a
        /// resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// 
        /// </value>
        ///
        public enum AccessLevelEnum {
            [EnumMember(Value = "RESTRICTED")]
            Restricted,
            [EnumMember(Value = "ACCESSIBLE")]
            Accessible
        };

        /// <value>
        /// Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED.
        /// Setting this to ACCESSIBLE returns only those compartments for which the
        /// user has INSPECT permissions directly or indirectly (permissions can be on a
        /// resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "accessLevel")]
        public System.Nullable<AccessLevelEnum> AccessLevel { get; set; }
        
        /// <value>
        /// For details about how pagination works, see [List Pagination](https://docs.cloud.oracle.com/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "limit")]
        public System.Nullable<int> Limit { get; set; }
        
        /// <value>
        /// It is usually retrieved from a previous \"List\" call. For details about how pagination works,
        /// see [List Pagination](https://docs.cloud.oracle.com/en-us/iaas/Content/API/Concepts/usingapi.htm#nine).
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "page")]
        public string Page { get; set; }
        
        /// <value>
        /// The scimQuery query parameter accepts filter expressions that use the syntax described in Section 3.2.2.2
        /// of the System for Cross-Domain Identity Management (SCIM) specification, which is available
        /// at [RFC3339](https://tools.ietf.org/html/draft-ietf-scim-api-12). In SCIM filtering expressions,
        /// text, date, and time values must be enclosed in quotation marks, with date and time values using ISO-8601 format.
        /// (Numeric and boolean values should not be quoted.)
        /// <br/>
        /// **Example: ** (operationTime ge &quot;2021-06-04T12:00:00.000Z&quot;) and (eventName eq &quot;LOGON&quot;)
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "scimQuery")]
        public string ScimQuery { get; set; }
        
        ///
        /// <value>
        /// The sort order to use, either ascending (ASC) or descending (DESC).
        /// </value>
        ///
        public enum SortOrderEnum {
            [EnumMember(Value = "ASC")]
            Asc,
            [EnumMember(Value = "DESC")]
            Desc
        };

        /// <value>
        /// The sort order to use, either ascending (ASC) or descending (DESC).
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "sortOrder")]
        public System.Nullable<SortOrderEnum> SortOrder { get; set; }
        
        ///
        /// <value>
        /// If this query parameter is specified, the result is sorted by this query parameter value.
        /// 
        /// </value>
        ///
        public enum SortByEnum {
            [EnumMember(Value = "dbUserName")]
            DbUserName,
            [EnumMember(Value = "targetName")]
            TargetName,
            [EnumMember(Value = "databaseType")]
            DatabaseType,
            [EnumMember(Value = "targetClass")]
            TargetClass,
            [EnumMember(Value = "auditEventTime")]
            AuditEventTime,
            [EnumMember(Value = "timeCollected")]
            TimeCollected,
            [EnumMember(Value = "osUserName")]
            OsUserName,
            [EnumMember(Value = "operation")]
            Operation,
            [EnumMember(Value = "operationStatus")]
            OperationStatus,
            [EnumMember(Value = "eventName")]
            EventName,
            [EnumMember(Value = "errorCode")]
            ErrorCode,
            [EnumMember(Value = "errorMessage")]
            ErrorMessage,
            [EnumMember(Value = "objectType")]
            ObjectType,
            [EnumMember(Value = "objectName")]
            ObjectName,
            [EnumMember(Value = "objectOwner")]
            ObjectOwner,
            [EnumMember(Value = "clientHostname")]
            ClientHostname,
            [EnumMember(Value = "clientIp")]
            ClientIp,
            [EnumMember(Value = "isAlerted")]
            IsAlerted,
            [EnumMember(Value = "actionTaken")]
            ActionTaken,
            [EnumMember(Value = "clientProgram")]
            ClientProgram,
            [EnumMember(Value = "commandText")]
            CommandText,
            [EnumMember(Value = "commandParam")]
            CommandParam,
            [EnumMember(Value = "extendedEventAttributes")]
            ExtendedEventAttributes,
            [EnumMember(Value = "auditLocation")]
            AuditLocation,
            [EnumMember(Value = "osTerminal")]
            OsTerminal,
            [EnumMember(Value = "clientId")]
            ClientId,
            [EnumMember(Value = "auditPolicies")]
            AuditPolicies,
            [EnumMember(Value = "auditType")]
            AuditType
        };

        /// <value>
        /// If this query parameter is specified, the result is sorted by this query parameter value.
        /// 
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "sortBy")]
        public System.Nullable<SortByEnum> SortBy { get; set; }
    }
}
