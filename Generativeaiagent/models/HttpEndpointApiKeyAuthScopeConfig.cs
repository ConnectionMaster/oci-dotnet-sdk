/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GenerativeaiagentService.Models
{
    /// <summary>
    /// Specifies authentication using an API key injected either as a header or query parameter.
    /// <br/>
    /// - If `authScope = AGENT`: The API key is retrieved from OCI Vault using the agent\u2019s identity.
    /// 
    /// </summary>
    public class HttpEndpointApiKeyAuthScopeConfig : HttpEndpointAuthScopeConfig
    {
        
        /// <value>
        /// The OCID of the vault secret with API key.
        /// Required when `authScope` is AGENT.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "vaultSecretId")]
        public string VaultSecretId { get; set; }
                ///
        /// <value>
        /// The location of the API key in the request.
        /// </value>
        ///
        public enum KeyLocationEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "HEADER")]
            Header,
            [EnumMember(Value = "QUERY_PARAMETER")]
            QueryParameter
        };

        /// <value>
        /// The location of the API key in the request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyLocation is required.")]
        [JsonProperty(PropertyName = "keyLocation")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<KeyLocationEnum> KeyLocation { get; set; }
        
        /// <value>
        /// The name of the key parameter in the location.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyName is required.")]
        [JsonProperty(PropertyName = "keyName")]
        public string KeyName { get; set; }
        
        [JsonProperty(PropertyName = "httpEndpointAuthScopeConfigType")]
        private readonly string httpEndpointAuthScopeConfigType = "HTTP_ENDPOINT_API_KEY_AUTH_SCOPE_CONFIG";
    }
}
