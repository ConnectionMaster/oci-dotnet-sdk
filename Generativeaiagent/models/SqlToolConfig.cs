/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GenerativeaiagentService.Models
{
    /// <summary>
    /// The configuration for SQL Tool.
    /// 
    /// </summary>
    public class SqlToolConfig : ToolConfig
    {
        
        [JsonProperty(PropertyName = "iclExamples")]
        public InputLocation IclExamples { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseSchema is required.")]
        [JsonProperty(PropertyName = "databaseSchema")]
        public InputLocation DatabaseSchema { get; set; }
        
        /// <value>
        /// To enable/disable SQL execution.
        /// </value>
        [JsonProperty(PropertyName = "shouldEnableSqlExecution")]
        public System.Nullable<bool> ShouldEnableSqlExecution { get; set; }
                ///
        /// <value>
        /// Dialect to be used for SQL generation.
        /// </value>
        ///
        public enum DialectEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SQL_LITE")]
            SqlLite,
            [EnumMember(Value = "ORACLE_SQL")]
            OracleSql
        };

        /// <value>
        /// Dialect to be used for SQL generation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Dialect is required.")]
        [JsonProperty(PropertyName = "dialect")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DialectEnum> Dialect { get; set; }
                ///
        /// <value>
        /// Size of the model.
        /// </value>
        ///
        public enum ModelSizeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SMALL")]
            Small,
            [EnumMember(Value = "LARGE")]
            Large
        };

        /// <value>
        /// Size of the model.
        /// </value>
        [JsonProperty(PropertyName = "modelSize")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ModelSizeEnum> ModelSize { get; set; }
        
        /// <value>
        /// To enable/disable self correction.
        /// </value>
        [JsonProperty(PropertyName = "shouldEnableSelfCorrection")]
        public System.Nullable<bool> ShouldEnableSelfCorrection { get; set; }
        
        [JsonProperty(PropertyName = "tableAndColumnDescription")]
        public InputLocation TableAndColumnDescription { get; set; }
        
        [JsonProperty(PropertyName = "generationLlmCustomization")]
        public LlmCustomization GenerationLlmCustomization { get; set; }
        
        [JsonProperty(PropertyName = "databaseConnection")]
        public DatabaseConnection DatabaseConnection { get; set; }
        
        [JsonProperty(PropertyName = "toolConfigType")]
        private readonly string toolConfigType = "SQL_TOOL_CONFIG";
    }
}
