/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;

namespace Oci.DistributeddatabaseService.Models
{
  /// <summary>
  /// Possible operation types.
  /// </summary>
  public enum OperationType {
      /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
      [EnumMember(Value = null)]
      UnknownEnumValue,
      [EnumMember(Value = "CREATE_DISTRIBUTED_DB")]
      CreateDistributedDb,
      [EnumMember(Value = "PATCH_DISTRIBUTED_DB_INSERT_SHARDS")]
      PatchDistributedDbInsertShards,
      [EnumMember(Value = "PATCH_DISTRIBUTED_DB_REMOVE_SHARDS")]
      PatchDistributedDbRemoveShards,
      [EnumMember(Value = "PATCH_DISTRIBUTED_DB_MERGE_CATALOG_SHARDS")]
      PatchDistributedDbMergeCatalogShards,
      [EnumMember(Value = "DELETE_DISTRIBUTED_DB")]
      DeleteDistributedDb,
      [EnumMember(Value = "CHANGE_DISTRIBUTED_DB_COMPARTMENT")]
      ChangeDistributedDbCompartment,
      [EnumMember(Value = "CONFIGURE_DISTRIBUTED_DB_GSMS")]
      ConfigureDistributedDbGsms,
      [EnumMember(Value = "CONFIGURE_DISTRIBUTED_DB_SHARDING")]
      ConfigureDistributedDbSharding,
      [EnumMember(Value = "GENERATE_DISTRIBUTED_DB_GSM_CERT_SIGNING_REQ")]
      GenerateDistributedDbGsmCertSigningReq,
      [EnumMember(Value = "ROTATE_DISTRIBUTED_DB_PASSWORDS")]
      RotateDistributedDbPasswords,
      [EnumMember(Value = "START_DISTRIBUTED_DB")]
      StartDistributedDb,
      [EnumMember(Value = "STOP_DISTRIBUTED_DB")]
      StopDistributedDb,
      [EnumMember(Value = "START_DISTRIBUTED_DB_SHARD")]
      StartDistributedDbShard,
      [EnumMember(Value = "START_DISTRIBUTED_DB_CATALOG")]
      StartDistributedDbCatalog,
      [EnumMember(Value = "STOP_DISTRIBUTED_DB_SHARD")]
      StopDistributedDbShard,
      [EnumMember(Value = "STOP_DISTRIBUTED_DB_CATALOG")]
      StopDistributedDbCatalog,
      [EnumMember(Value = "UPLOAD_DISTRIBUTED_DB_SIGNED_CERT_AND_GENERATE_WALLET")]
      UploadDistributedDbSignedCertAndGenerateWallet,
      [EnumMember(Value = "CREATE_DISTRIBUTED_DB_SHARD")]
      CreateDistributedDbShard,
      [EnumMember(Value = "CREATE_DISTRIBUTED_DB_CATALOG")]
      CreateDistributedDbCatalog,
      [EnumMember(Value = "CREATE_DISTRIBUTED_DB_GSM")]
      CreateDistributedDbGsm,
      [EnumMember(Value = "UPDATE_DISTRIBUTED_DB_CATALOG_SHARDS")]
      UpdateDistributedDbCatalogShards,
      [EnumMember(Value = "VALIDATE_NETWORK")]
      ValidateNetwork,
      [EnumMember(Value = "EXECUTE_VALIDATE_NETWORK_TESTS")]
      ExecuteValidateNetworkTests,
      [EnumMember(Value = "CREATE_PRIVATE_ENDPOINT")]
      CreatePrivateEndpoint,
      [EnumMember(Value = "DELETE_PRIVATE_ENDPOINT")]
      DeletePrivateEndpoint,
      [EnumMember(Value = "CHANGE_PRIVATE_ENDPOINT_COMPARTMENT")]
      ChangePrivateEndpointCompartment,
      [EnumMember(Value = "REINSTATE_PROXY_INSTANCE")]
      ReinstateProxyInstance,
      [EnumMember(Value = "DELETE_DISTRIBUTED_DB_SHARD")]
      DeleteDistributedDbShard,
      [EnumMember(Value = "DELETE_DISTRIBUTED_DB_CATALOG")]
      DeleteDistributedDbCatalog,
      [EnumMember(Value = "DELETE_DISTRIBUTED_DB_GSM")]
      DeleteDistributedDbGsm,
      [EnumMember(Value = "ADD_GDSCONTROL_NODE")]
      AddGdscontrolNode,
      [EnumMember(Value = "CHANGE_DISTRIBUTED_DB_BACKUP_CONFIG")]
      ChangeDistributedDbBackupConfig
  }
}
