/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CapacitymanagementService.Models
{
    /// <summary>
    /// An internal summary model containing information about the demand signal delivery resources.
    /// 
    /// </summary>
    public class InternalOccmDemandSignalDeliverySummary 
    {
        
        /// <value>
        /// The OCID of this demand signal delivery resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The OCID of the tenancy from which the demand signal delivery resource is created.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The OCID of the corresponding customer group to which this demand signal delivery resource belongs to.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OccCustomerGroupId is required.")]
        [JsonProperty(PropertyName = "occCustomerGroupId")]
        public string OccCustomerGroupId { get; set; }
        
        /// <value>
        /// The OCID of the demand signal under which this delivery will be grouped.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DemandSignalId is required.")]
        [JsonProperty(PropertyName = "demandSignalId")]
        public string DemandSignalId { get; set; }
        
        /// <value>
        /// The OCID of the demand signal item corresponding to which this delivery is made.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DemandSignalItemId is required.")]
        [JsonProperty(PropertyName = "demandSignalItemId")]
        public string DemandSignalItemId { get; set; }
        
        /// <value>
        /// The quantity of the resource that OCI will supply to the customer.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AcceptedQuantity is required.")]
        [JsonProperty(PropertyName = "acceptedQuantity")]
        public System.Nullable<long> AcceptedQuantity { get; set; }
        
        /// <value>
        /// The current lifecycle state of the resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<InternalOccmDemandSignalDelivery.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The enum values corresponding to the various states associated with the delivery resource.
        /// <br/>
        /// SUBMITTED -> The state where operators have started working and thinking on the quantity that OCI can delivery for the corresponding demand signal item.
        /// IN_REVIEW -> The operators are waiting on approvals from different teams/folks in this state.
        /// ACCEPTED -> OCI has accepted your resource request and will deliver the quantity as specified by acceptance quantity of this resource.
        /// DECLINED -> OCI has declined you resource request.
        /// DELIVERED -> OCI has delivered the accepted quantity to the customers.
        /// <br/>
        /// NOTE: The resource becomes visible to customers in ACCEPTED, DECLINED or DELIVERED state.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleDetails is required.")]
        [JsonProperty(PropertyName = "lifecycleDetails")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<InternalOccmDemandSignalDelivery.LifecycleDetailsEnum> LifecycleDetails { get; set; }
        
        /// <value>
        /// This field could be used by OCI to communicate the reason for declining the request.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "justification")]
        public string Justification { get; set; }
        
        /// <value>
        /// The date on which the OCI delivered the resource to the customers.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeDelivered")]
        public System.Nullable<System.DateTime> TimeDelivered { get; set; }
        
        /// <value>
        /// This field acts as a notes section for operators.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "notes")]
        public string Notes { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
