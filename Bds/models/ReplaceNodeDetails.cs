/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BdsService.Models
{
    /// <summary>
    /// The information about the node to be replaced.
    /// </summary>
    public class ReplaceNodeDetails 
    {
        
        /// <value>
        /// Host name of the node to replace. MASTER, UTILITY and EDGE node are only supported types
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NodeHostName is required.")]
        [JsonProperty(PropertyName = "nodeHostName")]
        public string NodeHostName { get; set; }
        
        /// <value>
        /// The id of the nodeBackup to use for replacing the node.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NodeBackupId is required.")]
        [JsonProperty(PropertyName = "nodeBackupId")]
        public string NodeBackupId { get; set; }
        
        /// <value>
        /// Base-64 encoded password for the cluster admin user.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ClusterAdminPassword is required.")]
        [JsonProperty(PropertyName = "clusterAdminPassword")]
        public string ClusterAdminPassword { get; set; }
        
        /// <value>
        /// Shape of the new vm when replacing the node. If not provided, BDS will attempt to replace the node with the shape of current node.
        /// </value>
        [JsonProperty(PropertyName = "shape")]
        public string Shape { get; set; }
        
    }
}
