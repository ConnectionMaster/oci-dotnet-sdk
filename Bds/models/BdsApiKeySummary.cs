/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BdsService.Models
{
    /// <summary>
    /// The API key summary.
    /// </summary>
    public class BdsApiKeySummary 
    {
        
        /// <value>
        /// Identifier of the user's API key.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// User friendly identifier used to uniquely differentiate between different API keys.
        /// Only ASCII alphanumeric characters with no spaces allowed.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyAlias is required.")]
        [JsonProperty(PropertyName = "keyAlias")]
        public string KeyAlias { get; set; }
        
        /// <value>
        /// The current status of the API key.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<BdsApiKey.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The name of the region to establish the Object Storage endpoint which was set as part of key creation operation.
        /// If no region was provided this will be set to be the same region where the cluster lives. Example us-phoenix-1 .
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DefaultRegion is required.")]
        [JsonProperty(PropertyName = "defaultRegion")]
        public string DefaultRegion { get; set; }
        
        /// <value>
        /// The time the API key was created, shown as an RFC 3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
    }
}
