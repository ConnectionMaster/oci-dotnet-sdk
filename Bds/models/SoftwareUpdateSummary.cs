/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BdsService.Models
{
    /// <summary>
    /// The software update that is currently available for the cluster.
    /// </summary>
    public class SoftwareUpdateSummary 
    {
        
        /// <value>
        /// Unique identifier of a given software update
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SoftwareUpdateKey is required.")]
        [JsonProperty(PropertyName = "softwareUpdateKey")]
        public string SoftwareUpdateKey { get; set; }
        
        /// <value>
        /// The version of the software update.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SoftwareUpdateVersion is required.")]
        [JsonProperty(PropertyName = "softwareUpdateVersion")]
        public string SoftwareUpdateVersion { get; set; }
        
        /// <value>
        /// The time when the software update was released.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeReleased is required.")]
        [JsonProperty(PropertyName = "timeReleased")]
        public System.Nullable<System.DateTime> TimeReleased { get; set; }
        
        /// <value>
        /// Type of current software update.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SoftwareUpdateType is required.")]
        [JsonProperty(PropertyName = "softwareUpdateType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<SoftwareUpdate.SoftwareUpdateTypeEnum> SoftwareUpdateType { get; set; }
        
        /// <value>
        /// The lifecycle state of the software update.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<SoftwareUpdate.LifecycleStateEnum> LifecycleState { get; set; }
        
    }
}
