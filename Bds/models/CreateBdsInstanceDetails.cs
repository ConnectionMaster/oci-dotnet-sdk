/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BdsService.Models
{
    /// <summary>
    /// The information about the new cluster.
    /// </summary>
    public class CreateBdsInstanceDetails 
    {
        
        /// <value>
        /// The OCID of the compartment.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Name of the Big Data Service cluster.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Version of the Hadoop distribution.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ClusterVersion is required.")]
        [JsonProperty(PropertyName = "clusterVersion")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<BdsInstance.ClusterVersionEnum> ClusterVersion { get; set; }
        
        /// <value>
        /// The SSH public key used to authenticate the cluster connection.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ClusterPublicKey is required.")]
        [JsonProperty(PropertyName = "clusterPublicKey")]
        public string ClusterPublicKey { get; set; }
        
        /// <value>
        /// Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ClusterAdminPassword is required.")]
        [JsonProperty(PropertyName = "clusterAdminPassword")]
        public string ClusterAdminPassword { get; set; }
        
        /// <value>
        /// Boolean flag specifying whether or not the cluster is highly available (HA).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsHighAvailability is required.")]
        [JsonProperty(PropertyName = "isHighAvailability")]
        public System.Nullable<bool> IsHighAvailability { get; set; }
        
        /// <value>
        /// Boolean flag specifying whether or not the cluster should be set up as secure.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsSecure is required.")]
        [JsonProperty(PropertyName = "isSecure")]
        public System.Nullable<bool> IsSecure { get; set; }
        
        [JsonProperty(PropertyName = "networkConfig")]
        public NetworkConfig NetworkConfig { get; set; }
        
        /// <value>
        /// Pre-authenticated URL of the script in Object Store that is downloaded and executed.
        /// </value>
        [JsonProperty(PropertyName = "bootstrapScriptUrl")]
        public string BootstrapScriptUrl { get; set; }
        
        /// <value>
        /// The list of nodes in the Big Data Service cluster.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Nodes is required.")]
        [JsonProperty(PropertyName = "nodes")]
        public System.Collections.Generic.List<CreateNodeDetails> Nodes { get; set; }
        
        /// <value>
        /// The user-defined kerberos realm name.
        /// </value>
        [JsonProperty(PropertyName = "kerberosRealmName")]
        public string KerberosRealmName { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type, or scope.
        /// Exists for cross-compatibility only. For example, `{\"bar-key\": \"value\"}`
        /// 
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For example, `{\"foo-namespace\": {\"bar-key\": \"value\"}}`
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// The OCID of the Key Management master encryption key.
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyId")]
        public string KmsKeyId { get; set; }
        
        /// <value>
        /// Profile of the Big Data Service cluster.
        /// </value>
        [JsonProperty(PropertyName = "clusterProfile")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<BdsInstance.ClusterProfileEnum> ClusterProfile { get; set; }
        
    }
}
