/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BdsService.Models
{
    /// <summary>
    /// List of TLS/SSL information of services
    /// </summary>
    public class CertificateServiceInfoSummary 
    {
                ///
        /// <value>
        /// Name of the service
        /// </value>
        ///
        public enum ServiceEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ZOOKEEPER")]
            Zookeeper,
            [EnumMember(Value = "AMS")]
            Ams,
            [EnumMember(Value = "HDFS")]
            Hdfs,
            [EnumMember(Value = "YARN")]
            Yarn,
            [EnumMember(Value = "MAPREDUCE")]
            Mapreduce,
            [EnumMember(Value = "OOZIE")]
            Oozie,
            [EnumMember(Value = "HBASE")]
            Hbase,
            [EnumMember(Value = "SPARK")]
            Spark,
            [EnumMember(Value = "HIVE")]
            Hive,
            [EnumMember(Value = "KAFKA")]
            Kafka,
            [EnumMember(Value = "FLINK")]
            Flink,
            [EnumMember(Value = "REGISTRY")]
            Registry
        };

        /// <value>
        /// Name of the service
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Service is required.")]
        [JsonProperty(PropertyName = "service")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ServiceEnum> Service { get; set; }
                ///
        /// <value>
        /// Whether certificate is enabled or disabled
        /// </value>
        ///
        public enum ServiceCertificateStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ENABLED")]
            Enabled,
            [EnumMember(Value = "DISABLED")]
            Disabled
        };

        /// <value>
        /// Whether certificate is enabled or disabled
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServiceCertificateStatus is required.")]
        [JsonProperty(PropertyName = "serviceCertificateStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ServiceCertificateStatusEnum> ServiceCertificateStatus { get; set; }
        
        /// <value>
        /// List of Host specific certificate details
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "HostSpecificCertificateDetails is required.")]
        [JsonProperty(PropertyName = "hostSpecificCertificateDetails")]
        public System.Collections.Generic.List<HostSpecificCertificateDetails> HostSpecificCertificateDetails { get; set; }
        
    }
}
