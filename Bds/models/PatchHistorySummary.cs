/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.BdsService.Models
{
    /// <summary>
    /// Patch history of this cluster.
    /// </summary>
    public class PatchHistorySummary 
    {
        
        /// <value>
        /// The version of the patch.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Version is required.")]
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }
                ///
        /// <value>
        /// The status of this patch.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "INSTALLING")]
            Installing,
            [EnumMember(Value = "INSTALLED")]
            Installed,
            [EnumMember(Value = "FAILED")]
            Failed
        };

        /// <value>
        /// The status of this patch.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The time when the patch history was last updated.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeUpdated is required.")]
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
                ///
        /// <value>
        /// The type of current patch history.
        /// DP - Data Plane patch(This history type is internal available only)
        /// ODH - Oracle Distribution of Hadoop update
        /// OS - Operating System update
        /// BDS - Big Data Service update
        /// 
        /// </value>
        ///
        public enum PatchTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ODH")]
            Odh,
            [EnumMember(Value = "OS")]
            Os,
            [EnumMember(Value = "BDS")]
            Bds
        };

        /// <value>
        /// The type of current patch history.
        /// DP - Data Plane patch(This history type is internal available only)
        /// ODH - Oracle Distribution of Hadoop update
        /// OS - Operating System update
        /// BDS - Big Data Service update
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PatchType is required.")]
        [JsonProperty(PropertyName = "patchType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PatchTypeEnum> PatchType { get; set; }
        
    }
}
