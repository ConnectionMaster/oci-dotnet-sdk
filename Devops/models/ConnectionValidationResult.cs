/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DevopsService.Models
{
    /// <summary>
    /// The result of validating the credentials of a connection.
    /// </summary>
    public class ConnectionValidationResult 
    {
                ///
        /// <value>
        /// The latest result of whether the credentials pass the validation.
        /// </value>
        ///
        public enum ResultEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "PASS")]
            Pass,
            [EnumMember(Value = "FAIL")]
            Fail
        };

        /// <value>
        /// The latest result of whether the credentials pass the validation.
        /// </value>
        [JsonProperty(PropertyName = "result")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ResultEnum> Result { get; set; }
        
        /// <value>
        /// The latest timestamp when the connection was validated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
        /// </value>
        [JsonProperty(PropertyName = "timeValidated")]
        public System.Nullable<System.DateTime> TimeValidated { get; set; }
        
        /// <value>
        /// A message describing the result of connection validation in more detail.
        /// </value>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }
        
    }
}
