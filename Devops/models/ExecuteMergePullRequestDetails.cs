/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DevopsService.Models
{
    /// <summary>
    /// The information about the merge.
    /// </summary>
    public class ExecuteMergePullRequestDetails : MergePullRequestDetails
    {
        
        /// <value>
        /// The commit message to be shown for this pull request in the destination branch after merge is done.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CommitMessage is required.")]
        [JsonProperty(PropertyName = "commitMessage")]
        public string CommitMessage { get; set; }
        
        /// <value>
        /// the strategy of merging.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MergeStrategy is required.")]
        [JsonProperty(PropertyName = "mergeStrategy")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MergeStrategy> MergeStrategy { get; set; }
                ///
        /// <value>
        /// What needs to happen after the merge is done successfully.
        /// </value>
        ///
        public enum PostMergeActionEnum {
            [EnumMember(Value = "DELETE_SOURCE_BRANCH")]
            DeleteSourceBranch,
            [EnumMember(Value = "KEEP_SOURCE_BRANCH")]
            KeepSourceBranch
        };

        /// <value>
        /// What needs to happen after the merge is done successfully.
        /// </value>
        [JsonProperty(PropertyName = "postMergeAction")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<PostMergeActionEnum> PostMergeAction { get; set; }
        
        [JsonProperty(PropertyName = "actionType")]
        private readonly string actionType = "EXECUTE";
    }
}
