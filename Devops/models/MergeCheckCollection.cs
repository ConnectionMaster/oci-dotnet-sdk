/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DevopsService.Models
{
    /// <summary>
    /// list of merge checks.
    /// </summary>
    public class MergeCheckCollection 
    {
        
        /// <value>
        /// List of pullRequest mergeCheck objects.
        ///  Example: {&quot;items&quot;: [{ &quot;type&quot; : &quot;CONFLICT(ENUM values)&quot;,                                   &quot;status&quot; : &quot;FAILED(ENUM values)&quot;},                                {&quot;type&quot;: &quot;APPROVAL_RULE(ENUM VALUE)&quot;,                                  &quot;ruleName&quot;: &quot;rule 1&quot;,                                  &quot;status&quot; : &quot;NEEDS_APPROVAL(ENUM values)&quot;,                                  &quot;totalApprovalCount&quot;:&quot;5&quot;,                                  &quot;currentApprovalCount&quot;:&quot;1&quot;,                                  &quot;reviewers&quot;:[<Reviewer OCID>],                                  &quot;level&quot;: &quot;PROJECT/REPOSITORY(ENUM values)&quot;},                                {&quot;type&quot;: &quot;APPROVAL_RULE(ENUM VALUE)&quot;,                                  &quot;ruleName&quot;: &quot;rule 2&quot;,                                &quot;status&quot; : &quot;SUCCEEDED(ENUM values)&quot;,                                &quot;totalApprovalCount&quot;:&quot;5&quot;,                                &quot;currentApprovalCount&quot;:&quot;5&quot;,                                &quot;reviewers&quot;:[<Reviewer OCID>],                                &quot;level&quot;: &quot;PROJECT/REPOSITORY(ENUM values)&quot;} ,                                {&quot;type&quot;: &quot;BUILD(ENUM VALUE)&quot;,                                 &quot;pipelineId&quot;: &quot;PipelineOCID&quot;,                                 &quot;buildRunId&quot;: &quot;BuildRunOCID&quot;,                                 &quot;status&quot; : &quot;SUCCEEDED/PENDING/FAIlED/IN-PROGRESS(ENUM values)&quot;}]}
        /// </value>
        [JsonProperty(PropertyName = "items")]
        public System.Collections.Generic.List<MergeCheck> Items { get; set; }
        
        /// <value>
        /// The time Stamp of the validation check.
        /// </value>
        [JsonProperty(PropertyName = "timeValidated")]
        public System.Nullable<System.DateTime> TimeValidated { get; set; }
        
    }
}
