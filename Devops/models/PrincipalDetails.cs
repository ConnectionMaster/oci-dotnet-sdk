/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DevopsService.Models
{
    /// <summary>
    /// The principal details
    /// </summary>
    public class PrincipalDetails 
    {
        
        /// <value>
        /// the OCID of the principal
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PrincipalId is required.")]
        [JsonProperty(PropertyName = "principalId")]
        public string PrincipalId { get; set; }
        
        /// <value>
        /// the name of the principal
        /// </value>
        [JsonProperty(PropertyName = "principalName")]
        public string PrincipalName { get; set; }
                ///
        /// <value>
        /// the type of principal
        /// </value>
        ///
        public enum PrincipalTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SERVICE")]
            Service,
            [EnumMember(Value = "USER")]
            User,
            [EnumMember(Value = "INSTANCE")]
            Instance,
            [EnumMember(Value = "RESOURCE")]
            Resource
        };

        /// <value>
        /// the type of principal
        /// </value>
        [JsonProperty(PropertyName = "principalType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PrincipalTypeEnum> PrincipalType { get; set; }
                ///
        /// <value>
        /// The state of the principal, it can be active or inactive or suppressed for emails
        /// </value>
        ///
        public enum PrincipalStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "INACTIVE")]
            Inactive,
            [EnumMember(Value = "SUPPRESSED")]
            Suppressed
        };

        /// <value>
        /// The state of the principal, it can be active or inactive or suppressed for emails
        /// </value>
        [JsonProperty(PropertyName = "principalState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PrincipalStateEnum> PrincipalState { get; set; }
        
    }
}
