/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;

namespace Oci.DevopsService.Models
{
  /// <summary>
  /// Possible operation types.
  /// </summary>
  public enum OperationType {
      /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
      [EnumMember(Value = null)]
      UnknownEnumValue,
      [EnumMember(Value = "CREATE_PROJECT")]
      CreateProject,
      [EnumMember(Value = "UPDATE_PROJECT")]
      UpdateProject,
      [EnumMember(Value = "DELETE_PROJECT")]
      DeleteProject,
      [EnumMember(Value = "MOVE_PROJECT")]
      MoveProject,
      [EnumMember(Value = "CREATE_DEPLOY_PIPELINE")]
      CreateDeployPipeline,
      [EnumMember(Value = "UPDATE_DEPLOY_PIPELINE")]
      UpdateDeployPipeline,
      [EnumMember(Value = "DELETE_DEPLOY_PIPELINE")]
      DeleteDeployPipeline,
      [EnumMember(Value = "CREATE_DEPLOY_STAGE")]
      CreateDeployStage,
      [EnumMember(Value = "UPDATE_DEPLOY_STAGE")]
      UpdateDeployStage,
      [EnumMember(Value = "DELETE_DEPLOY_STAGE")]
      DeleteDeployStage,
      [EnumMember(Value = "CREATE_DEPLOY_ARTIFACT")]
      CreateDeployArtifact,
      [EnumMember(Value = "UPDATE_DEPLOY_ARTIFACT")]
      UpdateDeployArtifact,
      [EnumMember(Value = "DELETE_DEPLOY_ARTIFACT")]
      DeleteDeployArtifact,
      [EnumMember(Value = "CREATE_DEPLOY_ENVIRONMENT")]
      CreateDeployEnvironment,
      [EnumMember(Value = "UPDATE_DEPLOY_ENVIRONMENT")]
      UpdateDeployEnvironment,
      [EnumMember(Value = "DELETE_DEPLOY_ENVIRONMENT")]
      DeleteDeployEnvironment,
      [EnumMember(Value = "CREATE_DEPLOYMENT")]
      CreateDeployment,
      [EnumMember(Value = "UPDATE_DEPLOYMENT")]
      UpdateDeployment,
      [EnumMember(Value = "DELETE_DEPLOYMENT")]
      DeleteDeployment,
      [EnumMember(Value = "CREATE_BUILD_PIPELINE")]
      CreateBuildPipeline,
      [EnumMember(Value = "UPDATE_BUILD_PIPELINE")]
      UpdateBuildPipeline,
      [EnumMember(Value = "DELETE_BUILD_PIPELINE")]
      DeleteBuildPipeline,
      [EnumMember(Value = "CREATE_BUILD_PIPELINE_STAGE")]
      CreateBuildPipelineStage,
      [EnumMember(Value = "UPDATE_BUILD_PIPELINE_STAGE")]
      UpdateBuildPipelineStage,
      [EnumMember(Value = "DELETE_BUILD_PIPELINE_STAGE")]
      DeleteBuildPipelineStage,
      [EnumMember(Value = "CREATE_CONNECTION")]
      CreateConnection,
      [EnumMember(Value = "UPDATE_CONNECTION")]
      UpdateConnection,
      [EnumMember(Value = "DELETE_CONNECTION")]
      DeleteConnection,
      [EnumMember(Value = "CREATE_TRIGGER")]
      CreateTrigger,
      [EnumMember(Value = "UPDATE_TRIGGER")]
      UpdateTrigger,
      [EnumMember(Value = "DELETE_TRIGGER")]
      DeleteTrigger,
      [EnumMember(Value = "EXECUTE_TRIGGER")]
      ExecuteTrigger,
      [EnumMember(Value = "CREATE_REPOSITORY")]
      CreateRepository,
      [EnumMember(Value = "UPDATE_REPOSITORY")]
      UpdateRepository,
      [EnumMember(Value = "DELETE_REPOSITORY")]
      DeleteRepository,
      [EnumMember(Value = "MIRROR_REPOSITORY")]
      MirrorRepository,
      [EnumMember(Value = "FORK_REPOSITORY")]
      ForkRepository,
      [EnumMember(Value = "SYNC_FORK_REPOSITORY")]
      SyncForkRepository,
      [EnumMember(Value = "SCHEDULE_CASCADING_PROJECT_DELETION")]
      ScheduleCascadingProjectDeletion,
      [EnumMember(Value = "CANCEL_SCHEDULED_CASCADING_PROJECT_DELETION")]
      CancelScheduledCascadingProjectDeletion,
      [EnumMember(Value = "CREATE_PULL_REQUEST")]
      CreatePullRequest,
      [EnumMember(Value = "UPDATE_PULL_REQUEST")]
      UpdatePullRequest,
      [EnumMember(Value = "DELETE_PULL_REQUEST")]
      DeletePullRequest,
      [EnumMember(Value = "MOVE_PULL_REQUEST")]
      MovePullRequest,
      [EnumMember(Value = "MERGE_PULL_REQUEST")]
      MergePullRequest
  }
}
