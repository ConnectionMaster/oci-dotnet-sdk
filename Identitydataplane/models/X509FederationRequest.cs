/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IdentitydataplaneService.Models
{
    
    public class X509FederationRequest 
    {
        
        /// <value>
        /// The x509 certificate of the service instance, issued by his CA.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Certificate is required.")]
        [JsonProperty(PropertyName = "certificate")]
        public string Certificate { get; set; }
        
        /// <value>
        /// A temporary public key, owned by the service. The service also owns the corresponding private key. This public
        /// key will be put inside the security token by the auth service after successful validation of the certificate.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PublicKey is required.")]
        [JsonProperty(PropertyName = "publicKey")]
        public string PublicKey { get; set; }
        
        /// <value>
        /// An array of intermediate certificates to form the chain from the leaf certificate to the root CA. If auth
        /// service already has the intermediate certificate(s), then this is not required.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "intermediateCertificates")]
        public System.Collections.Generic.List<string> IntermediateCertificates { get; set; }
        
    }
}
