/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.VulnerabilityscanningService.Models
{
    /// <summary>
    /// Details for a HostAgentScan list export to CSV action
    /// </summary>
    public class ExportHostAgentScanResultCsvDetails 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment to list scans in.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Date and time after which scans were started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeStartedAfter is required.")]
        [JsonProperty(PropertyName = "timeStartedAfter")]
        public System.Nullable<System.DateTime> TimeStartedAfter { get; set; }
        
        /// <value>
        /// Date and time before which scans were started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeStartedBefore is required.")]
        [JsonProperty(PropertyName = "timeStartedBefore")]
        public System.Nullable<System.DateTime> TimeStartedBefore { get; set; }
        
        /// <value>
        /// Parameter to filter by highestProblemSeverity for scan results
        /// </value>
        [JsonProperty(PropertyName = "highestProblemSeverity")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ScanResultProblemSeverity> HighestProblemSeverity { get; set; }
        
        /// <value>
        /// Parameter to filter by a single compute instance ID for scan results
        /// </value>
        [JsonProperty(PropertyName = "instanceId")]
        public string InstanceId { get; set; }
        
        /// <value>
        /// Parameter to filter by operating system for scan results
        /// </value>
        [JsonProperty(PropertyName = "operatingSystem")]
        public string OperatingSystem { get; set; }
        
    }
}
