/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ArtifactsService.Models
{
    /// <summary>
    /// List of container repository results.
    /// </summary>
    public class ContainerRepositoryCollection 
    {
        
        /// <value>
        /// Total number of layers.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LayerCount is required.")]
        [JsonProperty(PropertyName = "layerCount")]
        public System.Nullable<int> LayerCount { get; set; }
        
        /// <value>
        /// Total storage in bytes consumed by layers.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LayersSizeInBytes is required.")]
        [JsonProperty(PropertyName = "layersSizeInBytes")]
        public System.Nullable<long> LayersSizeInBytes { get; set; }
        
        /// <value>
        /// Total number of images.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ImageCount is required.")]
        [JsonProperty(PropertyName = "imageCount")]
        public System.Nullable<int> ImageCount { get; set; }
        
        /// <value>
        /// Collection of container repositories.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Items is required.")]
        [JsonProperty(PropertyName = "items")]
        public System.Collections.Generic.List<ContainerRepositorySummary> Items { get; set; }
        
        /// <value>
        /// Estimated number of remaining results.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RemainingItemsCount is required.")]
        [JsonProperty(PropertyName = "remainingItemsCount")]
        public System.Nullable<int> RemainingItemsCount { get; set; }
        
        /// <value>
        /// Total number of repositories.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RepositoryCount is required.")]
        [JsonProperty(PropertyName = "repositoryCount")]
        public System.Nullable<int> RepositoryCount { get; set; }
        
    }
}
