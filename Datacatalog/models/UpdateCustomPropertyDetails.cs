/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatacatalogService.Models
{
    /// <summary>
    /// Properties used in custom atrribute update operations.
    /// </summary>
    public class UpdateCustomPropertyDetails 
    {
        
        /// <value>
        /// A user-friendly display name. Does not have to be unique, and it's changeable.
        /// Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Detailed description of the data asset.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// If this field allows to sort from UI
        /// </value>
        [JsonProperty(PropertyName = "isSortable")]
        public System.Nullable<bool> IsSortable { get; set; }
        
        /// <value>
        /// If this field allows to filter or create facets from UI
        /// </value>
        [JsonProperty(PropertyName = "isFilterable")]
        public System.Nullable<bool> IsFilterable { get; set; }
        
        /// <value>
        /// If this field allows multiple values to be set
        /// </value>
        [JsonProperty(PropertyName = "isMultiValued")]
        public System.Nullable<bool> IsMultiValued { get; set; }
        
        /// <value>
        /// If this field is a hidden field
        /// </value>
        [JsonProperty(PropertyName = "isHidden")]
        public System.Nullable<bool> IsHidden { get; set; }
        
        /// <value>
        /// If this field is a editable field
        /// </value>
        [JsonProperty(PropertyName = "isEditable")]
        public System.Nullable<bool> IsEditable { get; set; }
        
        /// <value>
        /// If this field is allowed to pop in search results
        /// </value>
        [JsonProperty(PropertyName = "isHiddenInSearch")]
        public System.Nullable<bool> IsHiddenInSearch { get; set; }
        
        /// <value>
        /// Allowed values for the custom property if any
        /// </value>
        [JsonProperty(PropertyName = "allowedValues")]
        public System.Collections.Generic.List<string> AllowedValues { get; set; }
        
        /// <value>
        /// A map of maps that contains the properties which are specific to the asset type. Each data asset type
        /// definition defines it's set of required and optional properties. The map keys are category names and the
        /// values are maps of property name to property value. Every property is contained inside of a category. Most
        /// data assets have required properties within the \"default\" category.
        /// Example: {&quot;properties&quot;: { &quot;default&quot;: { &quot;host&quot;: &quot;host1&quot;, &quot;port&quot;: &quot;1521&quot;, &quot;database&quot;: &quot;orcl&quot;}}}
        /// </value>
        [JsonProperty(PropertyName = "properties")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>> Properties { get; set; }
        
    }
}
