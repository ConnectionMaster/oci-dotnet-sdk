/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatacatalogService.Models
{
    /// <summary>
    /// Details of recommendation to be processed.
    /// 
    /// </summary>
    public class ProcessRecommendationDetails 
    {
        
        /// <value>
        /// Unique identifier of the recommendation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RecommendationKey is required.")]
        [JsonProperty(PropertyName = "recommendationKey")]
        public string RecommendationKey { get; set; }
        
        /// <value>
        /// The status of a recommendation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RecommendationStatus is required.")]
        [JsonProperty(PropertyName = "recommendationStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RecommendationStatus> RecommendationStatus { get; set; }
        
        /// <value>
        /// A map of maps that contains additional properties which are specific to the associated objects.
        /// Each associated object defines it's set of required and optional properties.
        /// Example: {            &quot;DataEntity&quot;: {              &quot;parentId&quot;: &quot;entityId&quot;            },            &quot;Term&quot;: {              &quot;parentId&quot;: &quot;glossaryId&quot;            }          }
        /// </value>
        [JsonProperty(PropertyName = "properties")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string>> Properties { get; set; }
        
    }
}
