/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementhubService.Models
{
    /// <summary>
    /// Provides information about the system architecture and operating system.
    /// </summary>
    public class SystemDetails 
    {
        
        /// <value>
        /// Architecture type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Architecture is required.")]
        [JsonProperty(PropertyName = "architecture")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ArchType> Architecture { get; set; }
        
        /// <value>
        /// Version of the Ksplice effective kernel.
        /// </value>
        [JsonProperty(PropertyName = "kspliceEffectiveKernelVersion")]
        public string KspliceEffectiveKernelVersion { get; set; }
        
        /// <value>
        /// Operating system type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OsFamily is required.")]
        [JsonProperty(PropertyName = "osFamily")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<OsFamily> OsFamily { get; set; }
        
        /// <value>
        /// Name of the operating system.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OsName is required.")]
        [JsonProperty(PropertyName = "osName")]
        public string OsName { get; set; }
        
        /// <value>
        /// Release of the kernel.
        /// </value>
        [JsonProperty(PropertyName = "osKernelRelease")]
        public string OsKernelRelease { get; set; }
        
        /// <value>
        /// Version of the kernel.
        /// </value>
        [JsonProperty(PropertyName = "osKernelVersion")]
        public string OsKernelVersion { get; set; }
        
        /// <value>
        /// Version of the operating system.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OsSystemVersion is required.")]
        [JsonProperty(PropertyName = "osSystemVersion")]
        public string OsSystemVersion { get; set; }
        
    }
}
