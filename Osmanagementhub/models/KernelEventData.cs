/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementhubService.Models
{
    /// <summary>
    /// Information about the kernel event.
    /// </summary>
    public class KernelEventData 
    {
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Content is required.")]
        [JsonProperty(PropertyName = "content")]
        public KernelEventContent Content { get; set; }
        
        /// <value>
        /// Number of times the event has occurred.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Count is required.")]
        [JsonProperty(PropertyName = "count")]
        public System.Nullable<int> Count { get; set; }
        
        /// <value>
        /// Fingerprint of the event.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EventFingerprint is required.")]
        [JsonProperty(PropertyName = "eventFingerprint")]
        public string EventFingerprint { get; set; }
        
        /// <value>
        /// Reason for the event.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Reason is required.")]
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }
        
        /// <value>
        /// The date and time that the event first occurred.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeFirstOccurred is required.")]
        [JsonProperty(PropertyName = "timeFirstOccurred")]
        public System.Nullable<System.DateTime> TimeFirstOccurred { get; set; }
        
        [JsonProperty(PropertyName = "additionalDetails")]
        public KernelEventAdditionalDetails AdditionalDetails { get; set; }
        
    }
}
