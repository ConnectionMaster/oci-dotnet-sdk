/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementhubService.Models
{
    /// <summary>
    /// Data related to the sysadmin event.
    /// </summary>
    public class SysadminEventData 
    {
        
        /// <value>
        /// The commands executed by the agent that caused the error.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ErrorCause is required.")]
        [JsonProperty(PropertyName = "errorCause")]
        public string ErrorCause { get; set; }
        
        /// <value>
        /// The output log of the error.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ErrorLog is required.")]
        [JsonProperty(PropertyName = "errorLog")]
        public string ErrorLog { get; set; }
        
        /// <value>
        /// The actions used to attempt fixing the error.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AttemptedResolutions is required.")]
        [JsonProperty(PropertyName = "attemptedResolutions")]
        public System.Collections.Generic.List<string> AttemptedResolutions { get; set; }
        
        /// <value>
        /// Indicates if the event succeeded.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResolutionStatus is required.")]
        [JsonProperty(PropertyName = "resolutionStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<EventStatus> ResolutionStatus { get; set; }
        
        /// <value>
        /// The log output after the resolutions.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResolutionLog is required.")]
        [JsonProperty(PropertyName = "resolutionLog")]
        public string ResolutionLog { get; set; }
        
        [JsonProperty(PropertyName = "additionalDetails")]
        public WorkRequestEventDataAdditionalDetails AdditionalDetails { get; set; }
        
    }
}
