/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementhubService.Models
{
    /// <summary>
    /// Information for creating a scheduled job.
    /// </summary>
    public class CreateScheduledJobDetails 
    {
        
        /// <value>
        /// The OCID of the compartment containing the scheduled job.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Scheduled job name.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Details describing the scheduled job.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The type of scheduling this scheduled job follows.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ScheduleType is required.")]
        [JsonProperty(PropertyName = "scheduleType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ScheduleTypes> ScheduleType { get; set; }
        
        /// <value>
        /// The desired time for the next execution of this scheduled job.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeNextExecution is required.")]
        [JsonProperty(PropertyName = "timeNextExecution")]
        public System.Nullable<System.DateTime> TimeNextExecution { get; set; }
        
        /// <value>
        /// The recurring rule for a recurring scheduled job.
        /// </value>
        [JsonProperty(PropertyName = "recurringRule")]
        public string RecurringRule { get; set; }
        
        /// <value>
        /// The list of managed instance OCIDs this scheduled job operates on. Either this or
        /// managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds must be supplied.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedInstanceIds")]
        public System.Collections.Generic.List<string> ManagedInstanceIds { get; set; }
        
        /// <value>
        /// The list of managed instance group OCIDs this scheduled job operates on. Either this or
        /// managedInstanceIds, or managedCompartmentIds, or lifecycleStageIds must be supplied.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedInstanceGroupIds")]
        public System.Collections.Generic.List<string> ManagedInstanceGroupIds { get; set; }
        
        /// <value>
        /// The list of target compartment OCIDs if this scheduled job operates on a compartment level.
        /// Either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds must be supplied.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedCompartmentIds")]
        public System.Collections.Generic.List<string> ManagedCompartmentIds { get; set; }
        
        /// <value>
        /// The list of lifecycle stage OCIDs this scheduled job operates on. Either this or
        /// managedInstanceIds, or managedInstanceGroupIds, or managedCompartmentIds must be supplied.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "lifecycleStageIds")]
        public System.Collections.Generic.List<string> LifecycleStageIds { get; set; }
        
        /// <value>
        /// Whether to create jobs for all compartments in the tenancy when managedCompartmentIds specifies the tenancy OCID.
        /// </value>
        [JsonProperty(PropertyName = "isSubcompartmentIncluded")]
        public System.Nullable<bool> IsSubcompartmentIncluded { get; set; }
        
        /// <value>
        /// The list of operations this scheduled job needs to perform (can only support one operation if the operationType is not UPDATE_PACKAGES/UPDATE_ALL/UPDATE_SECURITY/UPDATE_BUGFIX/UPDATE_ENHANCEMENT/UPDATE_OTHER/UPDATE_KSPLICE_USERSPACE/UPDATE_KSPLICE_KERNEL).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Operations is required.")]
        [JsonProperty(PropertyName = "operations")]
        public System.Collections.Generic.List<ScheduledJobOperation> Operations { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
