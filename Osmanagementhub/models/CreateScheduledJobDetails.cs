/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OsmanagementhubService.Models
{
    /// <summary>
    /// Provides the information used to create a scheduled job.
    /// </summary>
    public class CreateScheduledJobDetails 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the scheduled job.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// User-friendly name for the scheduled job. Does not have to be unique and you can change the name later. Avoid entering confidential information.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// User-specified description of the scheduled job. Avoid entering confidential information.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The type of scheduling frequency for the scheduled job.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ScheduleType is required.")]
        [JsonProperty(PropertyName = "scheduleType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ScheduleTypes> ScheduleType { get; set; }
        
        /// <value>
        /// The list of locations this scheduled job should operate on for a job targeting on compartments. (Empty list means apply to all locations). This can only be set when managedCompartmentIds is not empty.
        /// </value>
        [JsonProperty(PropertyName = "locations")]
        public System.Collections.Generic.List<ManagedInstanceLocation> Locations { get; set; }
        
        /// <value>
        /// The desired time of the next execution of this scheduled job (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeNextExecution is required.")]
        [JsonProperty(PropertyName = "timeNextExecution")]
        public System.Nullable<System.DateTime> TimeNextExecution { get; set; }
        
        /// <value>
        /// The frequency schedule for a recurring scheduled job.
        /// </value>
        [JsonProperty(PropertyName = "recurringRule")]
        public string RecurringRule { get; set; }
        
        /// <value>
        /// The managed instance [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. 
        /// A scheduled job can only operate on one type of target, therefore you must supply either this or 
        /// managedInstanceGroupIds, or managedCompartmentIds, or lifecycleStageIds.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedInstanceIds")]
        public System.Collections.Generic.List<string> ManagedInstanceIds { get; set; }
        
        /// <value>
        /// The managed instance group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. 
        /// A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds,
        /// or managedCompartmentIds, or lifecycleStageIds.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedInstanceGroupIds")]
        public System.Collections.Generic.List<string> ManagedInstanceGroupIds { get; set; }
        
        /// <value>
        /// The compartment [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. 
        /// To apply the job to all compartments in the tenancy, set this to the tenancy OCID (root compartment) and set 
        /// isSubcompartmentIncluded to true. A scheduled job can only operate on one type of target, therefore you must 
        /// supply either this or managedInstanceIds, or managedInstanceGroupIds, or lifecycleStageIds.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedCompartmentIds")]
        public System.Collections.Generic.List<string> ManagedCompartmentIds { get; set; }
        
        /// <value>
        /// The lifecycle stage [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that this scheduled job operates on. 
        /// A scheduled job can only operate on one type of target, therefore you must supply either this or managedInstanceIds, 
        /// or managedInstanceGroupIds, or managedCompartmentIds.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "lifecycleStageIds")]
        public System.Collections.Generic.List<string> LifecycleStageIds { get; set; }
        
        /// <value>
        /// Indicates whether to apply the scheduled job to all compartments in the tenancy when managedCompartmentIds specifies 
        /// the tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (root compartment).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isSubcompartmentIncluded")]
        public System.Nullable<bool> IsSubcompartmentIncluded { get; set; }
        
        /// <value>
        /// The list of operations this scheduled job needs to perform.
        /// A scheduled job supports only one operation type, unless it is one of the following:
        /// * UPDATE_PACKAGES
        /// * UPDATE_ALL
        /// * UPDATE_SECURITY
        /// * UPDATE_BUGFIX
        /// * UPDATE_ENHANCEMENT
        /// * UPDATE_OTHER
        /// * UPDATE_KSPLICE_USERSPACE
        /// * UPDATE_KSPLICE_KERNEL
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Operations is required.")]
        [JsonProperty(PropertyName = "operations")]
        public System.Collections.Generic.List<ScheduledJobOperation> Operations { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// The amount of time in minutes to wait until retrying the scheduled job. If set, the service will automatically 
        /// retry a failed scheduled job after the interval. For example, you could set the interval to [2,5,10]. If the
        /// initial execution of the job fails, the service waits 2 minutes and then retries. If that fails, the service 
        /// waits 5 minutes and then retries. If that fails, the service waits 10 minutes and then retries.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "retryIntervals")]
        public System.Collections.Generic.List<int> RetryIntervals { get; set; }
        
        /// <value>
        /// Indicates whether this scheduled job is managed by the Autonomous Linux service.
        /// </value>
        [JsonProperty(PropertyName = "isManagedByAutonomousLinux")]
        public System.Nullable<bool> IsManagedByAutonomousLinux { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the work request that will be rerun.
        /// </value>
        [JsonProperty(PropertyName = "workRequestId")]
        public string WorkRequestId { get; set; }
        
    }
}
