/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsjavadownloadsService.Models
{
    /// <summary>
    /// Attributes to summarize the Java download counts in a tenancy.
    /// </summary>
    public class RequestSummarizedJavaDownloadCountsDetails 
    {
        
        /// <value>
        /// The compartment [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) here should be the tenancy OCID.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Group as property specifying the aggregation type for download counts.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "GroupAs is required.")]
        [JsonProperty(PropertyName = "groupAs")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<JavaDownloadCountAggregationType> GroupAs { get; set; }
        
        /// <value>
        /// Unique Java family version identifier.
        /// </value>
        [JsonProperty(PropertyName = "familyVersion")]
        public string FamilyVersion { get; set; }
        
        /// <value>
        /// Unique Java release version identifier.
        /// </value>
        [JsonProperty(PropertyName = "releaseVersion")]
        public string ReleaseVersion { get; set; }
        
        /// <value>
        /// The start time from when download data has to be included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeStart")]
        public System.Nullable<System.DateTime> TimeStart { get; set; }
        
        /// <value>
        /// The end time until when the download data has to be included (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeEnd")]
        public System.Nullable<System.DateTime> TimeEnd { get; set; }
        
        /// <value>
        /// The property to be used for sorting the aggregated report.
        /// </value>
        [JsonProperty(PropertyName = "sortBy")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<AggregationSortBy> SortBy { get; set; }
        
        /// <value>
        /// The sort order for the aggregated report.
        /// </value>
        [JsonProperty(PropertyName = "sortOrder")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<SortOrder> SortOrder { get; set; }
        
        /// <value>
        /// The maximum number of items to return.
        /// </value>
        [JsonProperty(PropertyName = "limit")]
        public System.Nullable<int> Limit { get; set; }
        
        /// <value>
        /// The page token representing the page at which to start retrieving results. The token is usually retrieved from a previous call.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "page")]
        public string Page { get; set; }
        
    }
}
