/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OnesubscriptionService.Models
{
    /// <summary>
    /// Subscribed Service summary
    /// 
    /// </summary>
    public class SubscriptionSubscribedService 
    {
        
        /// <value>
        /// SPM internal Subscribed Service ID
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        [JsonProperty(PropertyName = "product")]
        public SubscriptionProduct Product { get; set; }
        
        /// <value>
        /// Subscribed service quantity
        /// 
        /// </value>
        [JsonProperty(PropertyName = "quantity")]
        public string Quantity { get; set; }
        
        /// <value>
        /// Subscribed service status
        /// 
        /// </value>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }
        
        /// <value>
        /// Subscribed service operation type
        /// 
        /// </value>
        [JsonProperty(PropertyName = "operationType")]
        public string OperationType { get; set; }
        
        /// <value>
        /// Subscribed service net unit price
        /// 
        /// </value>
        [JsonProperty(PropertyName = "netUnitPrice")]
        public string NetUnitPrice { get; set; }
        
        /// <value>
        /// Subscribed service used amount
        /// 
        /// </value>
        [JsonProperty(PropertyName = "usedAmount")]
        public string UsedAmount { get; set; }
        
        /// <value>
        /// Subscribed sercice available or remaining amount
        /// 
        /// </value>
        [JsonProperty(PropertyName = "availableAmount")]
        public string AvailableAmount { get; set; }
        
        /// <value>
        /// Funded Allocation line value
        /// Example: 12000.00
        /// </value>
        [JsonProperty(PropertyName = "fundedAllocationValue")]
        public string FundedAllocationValue { get; set; }
        
        /// <value>
        /// This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
        /// 
        /// </value>
        [JsonProperty(PropertyName = "partnerTransactionType")]
        public string PartnerTransactionType { get; set; }
        
        /// <value>
        /// Term value in Months
        /// 
        /// </value>
        [JsonProperty(PropertyName = "termValue")]
        public System.Nullable<long> TermValue { get; set; }
        
        /// <value>
        /// Term value UOM
        /// 
        /// </value>
        [JsonProperty(PropertyName = "termValueUom")]
        public string TermValueUom { get; set; }
        
        /// <value>
        /// Booking Opportunity Number of Subscribed Service
        /// 
        /// </value>
        [JsonProperty(PropertyName = "bookingOptyNumber")]
        public string BookingOptyNumber { get; set; }
        
        /// <value>
        /// Subscribed service total value
        /// 
        /// </value>
        [JsonProperty(PropertyName = "totalValue")]
        public string TotalValue { get; set; }
        
        /// <value>
        /// Subscribed service Promotion Amount
        /// 
        /// </value>
        [JsonProperty(PropertyName = "originalPromoAmount")]
        public string OriginalPromoAmount { get; set; }
        
        /// <value>
        /// Sales Order Number associated to the subscribed service
        /// 
        /// </value>
        [JsonProperty(PropertyName = "orderNumber")]
        public System.Nullable<long> OrderNumber { get; set; }
        
        /// <value>
        /// Subscribed service data center region
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dataCenterRegion")]
        public string DataCenterRegion { get; set; }
        
        /// <value>
        /// Subscribed service pricing model
        /// 
        /// </value>
        [JsonProperty(PropertyName = "pricingModel")]
        public string PricingModel { get; set; }
        
        /// <value>
        /// Subscribed service program type
        /// 
        /// </value>
        [JsonProperty(PropertyName = "programType")]
        public string ProgramType { get; set; }
        
        /// <value>
        /// Subscribed service promotion type
        /// 
        /// </value>
        [JsonProperty(PropertyName = "promoType")]
        public string PromoType { get; set; }
        
        /// <value>
        /// Subscribed service CSI number
        /// 
        /// </value>
        [JsonProperty(PropertyName = "csi")]
        public System.Nullable<long> Csi { get; set; }
        
        /// <value>
        /// Subscribed service intent to pay flag
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isIntentToPay")]
        public System.Nullable<bool> IsIntentToPay { get; set; }
        
        /// <value>
        /// Subscribed service start date
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeStart")]
        public System.Nullable<System.DateTime> TimeStart { get; set; }
        
        /// <value>
        /// Subscribed service end date
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeEnd")]
        public System.Nullable<System.DateTime> TimeEnd { get; set; }
        
        /// <value>
        /// List of Commitment services of a line 
        /// 
        /// </value>
        [JsonProperty(PropertyName = "commitmentServices")]
        public System.Collections.Generic.List<CommitmentService> CommitmentServices { get; set; }
        
    }
}
