/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// The field condition(s) to evaluate for an ingest time rule.
    /// </summary>
    public class IngestTimeRuleFieldCondition : IngestTimeRuleCondition
    {
        
        /// <value>
        /// The field name to be evaluated.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FieldName is required.")]
        [JsonProperty(PropertyName = "fieldName")]
        public string FieldName { get; set; }
                ///
        /// <value>
        /// The operator to be used for evaluating the field.
        /// </value>
        ///
        public enum FieldOperatorEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "EQUAL")]
            Equal
        };

        /// <value>
        /// The operator to be used for evaluating the field.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FieldOperator is required.")]
        [JsonProperty(PropertyName = "fieldOperator")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<FieldOperatorEnum> FieldOperator { get; set; }
        
        /// <value>
        /// The field value to be evaluated.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FieldValue is required.")]
        [JsonProperty(PropertyName = "fieldValue")]
        public string FieldValue { get; set; }
        
        /// <value>
        /// Optional additional condition(s) to be evaluated.
        /// </value>
        [JsonProperty(PropertyName = "additionalConditions")]
        public System.Collections.Generic.List<IngestTimeRuleAdditionalFieldCondition> AdditionalConditions { get; set; }
        
        [JsonProperty(PropertyName = "kind")]
        private readonly string kind = "FIELD";
    }
}
