/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// The LOG_LIST type endpoint configuration. The list of logs is first fetched using the listEndpoint configuration,
    /// and then the logs are subsequently fetched using the logEndpoints, which reference the list endpoint response.
    /// For time based incremental collection, specify the START_TIME macro with the desired time format,
    /// Example: {START_TIME:yyMMddHHmmssZ}.For offset based incremental collection, specify the START_OFFSET macro with offset identifier in the API response,
    /// </summary>
    public class LogListTypeEndpoint : LogAnalyticsEndpoint
    {
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ListEndpoint is required.")]
        [JsonProperty(PropertyName = "listEndpoint")]
        public LogListEndpoint ListEndpoint { get; set; }
        
        /// <value>
        /// Log endpoints, which reference the listEndpoint response, to fetch log data.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LogEndpoints is required.")]
        [JsonProperty(PropertyName = "logEndpoints")]
        public System.Collections.Generic.List<LogEndpoint> LogEndpoints { get; set; }
        
        [JsonProperty(PropertyName = "endpointType")]
        private readonly string endpointType = "LOG_LIST";
    }
}
