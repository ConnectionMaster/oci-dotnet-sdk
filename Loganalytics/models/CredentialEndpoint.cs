/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// The endpoint from where to fetch a credential, for example, the OAuth 2.0 token.
    /// </summary>
    public class CredentialEndpoint 
    {
        
        /// <value>
        /// The credential endpoint name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// The credential endpoint description.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The credential endpoint model.
        /// </value>
        [JsonProperty(PropertyName = "model")]
        public string Model { get; set; }
        
        /// <value>
        /// The endpoint unique identifier.
        /// </value>
        [JsonProperty(PropertyName = "endpointId")]
        public System.Nullable<long> EndpointId { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Request is required.")]
        [JsonProperty(PropertyName = "request")]
        public EndpointRequest Request { get; set; }
        
        [JsonProperty(PropertyName = "response")]
        public EndpointResponse Response { get; set; }
        
        [JsonProperty(PropertyName = "proxy")]
        public EndpointProxy Proxy { get; set; }
        
    }
}
