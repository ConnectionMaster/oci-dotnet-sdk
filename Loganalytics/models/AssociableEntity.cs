/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// Entity details including whether or not it is eligible for association with the source.
    /// </summary>
    public class AssociableEntity 
    {
        
        /// <value>
        /// The entity OCID.
        /// </value>
        [JsonProperty(PropertyName = "entityId")]
        public string EntityId { get; set; }
        
        /// <value>
        /// The name of the entity.
        /// </value>
        [JsonProperty(PropertyName = "entityName")]
        public string EntityName { get; set; }
        
        /// <value>
        /// The type name of the entity.
        /// </value>
        [JsonProperty(PropertyName = "entityTypeName")]
        public string EntityTypeName { get; set; }
        
        /// <value>
        /// The display name of the entity type.
        /// </value>
        [JsonProperty(PropertyName = "entityTypeDisplayName")]
        public string EntityTypeDisplayName { get; set; }
        
        /// <value>
        /// The entity host.
        /// </value>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }
        
        /// <value>
        /// The OCID of the Management Agent.
        /// </value>
        [JsonProperty(PropertyName = "agentId")]
        public string AgentId { get; set; }
                ///
        /// <value>
        /// This field indicates whether the entity is (in)eligible to be associated with this source.
        /// 
        /// </value>
        ///
        public enum EligibilityStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ELIGIBLE")]
            Eligible,
            [EnumMember(Value = "INELIGIBLE")]
            Ineligible
        };

        /// <value>
        /// This field indicates whether the entity is (in)eligible to be associated with this source.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "eligibilityStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<EligibilityStatusEnum> EligibilityStatus { get; set; }
        
        /// <value>
        /// The reason the entity is not eligible for association.
        /// </value>
        [JsonProperty(PropertyName = "ineligibilityDetails")]
        public string IneligibilityDetails { get; set; }
        
    }
}
