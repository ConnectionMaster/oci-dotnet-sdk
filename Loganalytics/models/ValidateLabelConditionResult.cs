/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// The result of the label condition validation
    /// </summary>
    public class ValidateLabelConditionResult 
    {
        
        /// <value>
        /// String representation of the validated label condition.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConditionString is required.")]
        [JsonProperty(PropertyName = "conditionString")]
        public string ConditionString { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConditionBlock is required.")]
        [JsonProperty(PropertyName = "conditionBlock")]
        public ConditionBlock ConditionBlock { get; set; }
        
        /// <value>
        /// Field values against which the label condition was evaluated.
        /// </value>
        [JsonProperty(PropertyName = "fieldValues")]
        public System.Collections.Generic.List<LogAnalyticsProperty> FieldValues { get; set; }
        
        /// <value>
        /// The validation status.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }
        
        /// <value>
        /// The validation status description.
        /// </value>
        [JsonProperty(PropertyName = "statusDescription")]
        public string StatusDescription { get; set; }
        
        /// <value>
        /// The result of evaluating the condition blocks against the specified field values. Either true or false.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "evaluationResult")]
        public System.Nullable<bool> EvaluationResult { get; set; }
        
    }
}
