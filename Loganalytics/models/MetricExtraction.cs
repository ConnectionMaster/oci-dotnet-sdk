/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoganalyticsService.Models
{
    /// <summary>
    /// Specify metric extraction for SAVED_SEARCH scheduled task execution
    /// to post to OCI Monitoring.
    /// 
    /// </summary>
    public class MetricExtraction 
    {
        
        /// <value>
        /// The compartment OCID (/iaas/Content/General/Concepts/identifiers.htm) of the extracted metric.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The namespace of the extracted metric.
        /// A valid value starts with an alphabetical character and includes only
        /// alphanumeric characters and underscores (_).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "namespace")]
        public string Namespace { get; set; }
        
        /// <value>
        /// The metric name of the extracted metric.
        /// A valid value starts with an alphabetical character and includes only
        /// alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "metricName")]
        public string MetricName { get; set; }
        
        /// <value>
        /// The resourceGroup of the extracted metric.
        /// A valid value starts with an alphabetical character and includes only
        /// alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup { get; set; }
        
    }
}
