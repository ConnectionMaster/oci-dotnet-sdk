/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;

namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// Describes the required parameters for the creation of an Autonomous Container Database.
    /// 
    /// </summary>
    [JsonConverter(typeof(CreateAutonomousContainerDatabaseBaseModelConverter))]
    public class CreateAutonomousContainerDatabaseBase 
    {
        
        /// <value>
        /// Customer Contacts. Setting this to an empty list removes all customer contacts.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "customerContacts")]
        public System.Collections.Generic.List<CustomerContact> CustomerContacts { get; set; }
                ///
        /// <value>
        /// The source of the database: Use `NONE` for creating a new Autonomous Container Database. Use `BACKUP_FROM_ID` for creating a new Autonomous Container Database from a specified backup.
        /// 
        /// </value>
        ///
        public enum SourceEnum {
            [EnumMember(Value = "NONE")]
            None,
            [EnumMember(Value = "BACKUP_FROM_ID")]
            BackupFromId
        };

        
        /// <value>
        /// The display name for the Autonomous Container Database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// **Deprecated.** The `DB_UNIQUE_NAME` value is set by Oracle Cloud Infrastructure.  Do not specify a value for this parameter. Specifying a value for this field will cause Terraform operations to fail.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dbUniqueName")]
        public string DbUniqueName { get; set; }
        
        /// <value>
        /// The Database name for the Autonomous Container Database. The name must be unique within the Cloud Autonomous VM Cluster, starting with an alphabetic character, followed by 1 to 7 alphanumeric characters.
        /// </value>
        [JsonProperty(PropertyName = "dbName")]
        public string DbName { get; set; }
                ///
        /// <value>
        /// The service level agreement type of the Autonomous Container Database. The default is STANDARD. For an autonomous dataguard Autonomous Container Database, the specified Autonomous Exadata Infrastructure must be associated with a remote Autonomous Exadata Infrastructure.
        /// </value>
        ///
        public enum ServiceLevelAgreementTypeEnum {
            [EnumMember(Value = "STANDARD")]
            Standard,
            [EnumMember(Value = "AUTONOMOUS_DATAGUARD")]
            AutonomousDataguard
        };

        /// <value>
        /// The service level agreement type of the Autonomous Container Database. The default is STANDARD. For an autonomous dataguard Autonomous Container Database, the specified Autonomous Exadata Infrastructure must be associated with a remote Autonomous Exadata Infrastructure.
        /// </value>
        [JsonProperty(PropertyName = "serviceLevelAgreementType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ServiceLevelAgreementTypeEnum> ServiceLevelAgreementType { get; set; }
        
        /// <value>
        /// **No longer used.** This parameter is no longer used for Autonomous Database on dedicated Exadata infrasture. Specify a `cloudAutonomousVmClusterId` instead. Using this parameter will cause the operation to fail.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "autonomousExadataInfrastructureId")]
        public string AutonomousExadataInfrastructureId { get; set; }
        
        /// <value>
        /// The base version for the Autonomous Container Database.
        /// </value>
        [JsonProperty(PropertyName = "dbVersion")]
        public string DbVersion { get; set; }
        
        /// <value>
        /// The Autonomous Database Software Image [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
        /// </value>
        [JsonProperty(PropertyName = "databaseSoftwareImageId")]
        public string DatabaseSoftwareImageId { get; set; }
        
        /// <value>
        /// *No longer used.* This parameter is no longer used for Autonomous Database on dedicated Exadata infrasture. Specify a `peerCloudAutonomousVmClusterId` instead. Using this parameter will cause the operation to fail.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "peerAutonomousExadataInfrastructureId")]
        public string PeerAutonomousExadataInfrastructureId { get; set; }
        
        /// <value>
        /// The display name for the peer Autonomous Container Database.
        /// </value>
        [JsonProperty(PropertyName = "peerAutonomousContainerDatabaseDisplayName")]
        public string PeerAutonomousContainerDatabaseDisplayName { get; set; }
                ///
        /// <value>
        /// The protection mode of this Autonomous Data Guard association. For more information, see
        /// [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000)
        /// in the Oracle Data Guard documentation.
        /// 
        /// </value>
        ///
        public enum ProtectionModeEnum {
            [EnumMember(Value = "MAXIMUM_AVAILABILITY")]
            MaximumAvailability,
            [EnumMember(Value = "MAXIMUM_PERFORMANCE")]
            MaximumPerformance
        };

        /// <value>
        /// The protection mode of this Autonomous Data Guard association. For more information, see
        /// [Oracle Data Guard Protection Modes](http://docs.oracle.com/database/122/SBYDB/oracle-data-guard-protection-modes.htm#SBYDB02000)
        /// in the Oracle Data Guard documentation.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "protectionMode")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ProtectionModeEnum> ProtectionMode { get; set; }
        
        /// <value>
        /// The lag time for my preference based on data loss tolerance in seconds.
        /// </value>
        [JsonProperty(PropertyName = "fastStartFailOverLagLimitInSeconds")]
        public System.Nullable<int> FastStartFailOverLagLimitInSeconds { get; set; }
        
        /// <value>
        /// Indicates whether Automatic Failover is enabled for Autonomous Container Database Dataguard Association
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAutomaticFailoverEnabled")]
        public System.Nullable<bool> IsAutomaticFailoverEnabled { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the peer cloud Autonomous Exadata VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "peerCloudAutonomousVmClusterId")]
        public string PeerCloudAutonomousVmClusterId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the peer Autonomous VM cluster for Autonomous Data Guard. Required to enable Data Guard.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "peerAutonomousVmClusterId")]
        public string PeerAutonomousVmClusterId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment where the standby Autonomous Container Database
        /// will be created.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "peerAutonomousContainerDatabaseCompartmentId")]
        public string PeerAutonomousContainerDatabaseCompartmentId { get; set; }
        
        [JsonProperty(PropertyName = "peerAutonomousContainerDatabaseBackupConfig")]
        public PeerAutonomousContainerDatabaseBackupConfig PeerAutonomousContainerDatabaseBackupConfig { get; set; }
        
        /// <value>
        /// **Deprecated.** The `DB_UNIQUE_NAME` of the peer Autonomous Container Database in a Data Guard association is set by Oracle Cloud Infrastructure.  Do not specify a value for this parameter. Specifying a value for this field will cause Terraform operations to fail.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "peerDbUniqueName")]
        public string PeerDbUniqueName { get; set; }
        
        /// <value>
        /// The OCID of the Autonomous VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "autonomousVmClusterId")]
        public string AutonomousVmClusterId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the cloud Autonomous Exadata VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "cloudAutonomousVmClusterId")]
        public string CloudAutonomousVmClusterId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment containing the Autonomous Container Database.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
                ///
        /// <value>
        /// Database Patch model preference.
        /// </value>
        ///
        public enum PatchModelEnum {
            [EnumMember(Value = "RELEASE_UPDATES")]
            ReleaseUpdates,
            [EnumMember(Value = "RELEASE_UPDATE_REVISIONS")]
            ReleaseUpdateRevisions
        };

        /// <value>
        /// Database Patch model preference.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PatchModel is required.")]
        [JsonProperty(PropertyName = "patchModel")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<PatchModelEnum> PatchModel { get; set; }
        
        [JsonProperty(PropertyName = "maintenanceWindowDetails")]
        public MaintenanceWindow MaintenanceWindowDetails { get; set; }
        
        /// <value>
        /// The scheduling detail for the quarterly maintenance window of the standby Autonomous Container Database.
        /// This value represents the number of days before scheduled maintenance of the primary database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "standbyMaintenanceBufferInDays")]
        public System.Nullable<int> StandbyMaintenanceBufferInDays { get; set; }
                ///
        /// <value>
        /// The next maintenance version preference.
        /// 
        /// </value>
        ///
        public enum VersionPreferenceEnum {
            [EnumMember(Value = "NEXT_RELEASE_UPDATE")]
            NextReleaseUpdate,
            [EnumMember(Value = "LATEST_RELEASE_UPDATE")]
            LatestReleaseUpdate
        };

        /// <value>
        /// The next maintenance version preference.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "versionPreference")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<VersionPreferenceEnum> VersionPreference { get; set; }
        
        /// <value>
        /// Indicates if an automatic DST Time Zone file update is enabled for the Autonomous Container Database. If enabled along with Release Update, patching will be done in a Non-Rolling manner.
        /// </value>
        [JsonProperty(PropertyName = "isDstFileUpdateEnabled")]
        public System.Nullable<bool> IsDstFileUpdateEnabled { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        [JsonProperty(PropertyName = "backupConfig")]
        public AutonomousContainerDatabaseBackupConfig BackupConfig { get; set; }
        
        /// <value>
        /// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyId")]
        public string KmsKeyId { get; set; }
        
        /// <value>
        /// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyVersionId")]
        public string KmsKeyVersionId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/Content/KeyManagement/Concepts/keyoverview.htm#concepts). This parameter and `secretId` are required for Customer Managed Keys.
        /// </value>
        [JsonProperty(PropertyName = "vaultId")]
        public string VaultId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the key store of Oracle Vault.
        /// </value>
        [JsonProperty(PropertyName = "keyStoreId")]
        public string KeyStoreId { get; set; }
        
        /// <value>
        /// The CPU value beyond which an Autonomous Database will be opened across multiple nodes. The default value of this attribute is 16 for OCPUs and 64 for ECPUs.
        /// </value>
        [JsonProperty(PropertyName = "dbSplitThreshold")]
        public System.Nullable<int> DbSplitThreshold { get; set; }
        
        /// <value>
        /// The percentage of CPUs reserved across nodes to support node failover. Allowed values are 0%, 25%, and 50%, with 50% being the default option.
        /// </value>
        [JsonProperty(PropertyName = "vmFailoverReservation")]
        public System.Nullable<int> VmFailoverReservation { get; set; }
                ///
        /// <value>
        /// Determines whether an Autonomous Database must be opened across a minimum or maximum of nodes. By default, Minimum nodes is selected.
        /// </value>
        ///
        public enum DistributionAffinityEnum {
            [EnumMember(Value = "MINIMUM_DISTRIBUTION")]
            MinimumDistribution,
            [EnumMember(Value = "MAXIMUM_DISTRIBUTION")]
            MaximumDistribution
        };

        /// <value>
        /// Determines whether an Autonomous Database must be opened across a minimum or maximum of nodes. By default, Minimum nodes is selected.
        /// </value>
        [JsonProperty(PropertyName = "distributionAffinity")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DistributionAffinityEnum> DistributionAffinity { get; set; }
                ///
        /// <value>
        /// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
        /// </value>
        ///
        public enum NetServicesArchitectureEnum {
            [EnumMember(Value = "DEDICATED")]
            Dedicated,
            [EnumMember(Value = "SHARED")]
            Shared
        };

        /// <value>
        /// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
        /// </value>
        [JsonProperty(PropertyName = "netServicesArchitecture")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<NetServicesArchitectureEnum> NetServicesArchitecture { get; set; }
        
    }

    public class CreateAutonomousContainerDatabaseBaseModelConverter : JsonConverter
    {
        public override bool CanWrite => false;
        public override bool CanRead => true;
        public override bool CanConvert(System.Type type)
        {
            return type == typeof(CreateAutonomousContainerDatabaseBase);
        }
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            throw new System.InvalidOperationException("Use default serialization.");
        }

        public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer)
        {
            var jsonObject = JObject.Load(reader);
            var obj = default(CreateAutonomousContainerDatabaseBase);
            var discriminator = jsonObject["source"].Value<string>();
            switch (discriminator)
            {
                case "NONE":
                    obj = new CreateAutonomousContainerDatabaseDetails();
                    break;
                case "BACKUP_FROM_ID":
                    obj = new CreateAutonomousContainerDatabaseFromBackupDetails();
                    break;
            }
            serializer.Populate(jsonObject.CreateReader(), obj);
            return obj;
        }
    }
}
