/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// Autonomous VM Cluster usage details, including the Autonomous Container Databases usage.
    /// 
    /// </summary>
    public class AutonomousVmClusterResourceUsage 
    {
        
        /// <value>
        /// The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
        /// </value>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The data disk group size allocated for Autonomous Databases, in TBs.
        /// </value>
        [JsonProperty(PropertyName = "autonomousDataStorageSizeInTBs")]
        public System.Nullable<float> AutonomousDataStorageSizeInTBs { get; set; }
        
        /// <value>
        /// The local node storage allocated in GBs.
        /// </value>
        [JsonProperty(PropertyName = "dbNodeStorageSizeInGBs")]
        public System.Nullable<int> DbNodeStorageSizeInGBs { get; set; }
        
        /// <value>
        /// The memory allocated in GBs.
        /// </value>
        [JsonProperty(PropertyName = "memorySizeInGBs")]
        public System.Nullable<int> MemorySizeInGBs { get; set; }
        
        /// <value>
        /// The total number of Autonomous Container Databases that can be created.
        /// </value>
        [JsonProperty(PropertyName = "totalContainerDatabases")]
        public System.Nullable<int> TotalContainerDatabases { get; set; }
        
        /// <value>
        /// The data disk group size available for Autonomous Databases, in TBs.
        /// </value>
        [JsonProperty(PropertyName = "availableAutonomousDataStorageSizeInTBs")]
        public System.Nullable<float> AvailableAutonomousDataStorageSizeInTBs { get; set; }
        
        /// <value>
        /// The data disk group size used for Autonomous Databases, in TBs.
        /// </value>
        [JsonProperty(PropertyName = "usedAutonomousDataStorageSizeInTBs")]
        public System.Nullable<float> UsedAutonomousDataStorageSizeInTBs { get; set; }
        
        /// <value>
        /// If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
        /// </value>
        [JsonProperty(PropertyName = "isLocalBackupEnabled")]
        public System.Nullable<bool> IsLocalBackupEnabled { get; set; }
        
        /// <value>
        /// Total exadata storage allocated for the Autonomous VM Cluster. DATA + RECOVERY + SPARSE + any overhead in TBs.
        /// </value>
        [JsonProperty(PropertyName = "exadataStorageInTBs")]
        public System.Double ExadataStorageInTBs { get; set; }
        
        /// <value>
        /// The amount of memory (in GBs) to be enabled per each CPU core.
        /// </value>
        [JsonProperty(PropertyName = "memoryPerOracleComputeUnitInGBs")]
        public System.Nullable<int> MemoryPerOracleComputeUnitInGBs { get; set; }
        
        /// <value>
        /// The number of CPU cores enabled on the Autonomous VM cluster.
        /// </value>
        [JsonProperty(PropertyName = "totalCpus")]
        public System.Nullable<float> TotalCpus { get; set; }
        
        /// <value>
        /// The number of CPU cores alloted to the Autonomous Container Databases in an Autonomous VM cluster.
        /// </value>
        [JsonProperty(PropertyName = "usedCpus")]
        public System.Nullable<float> UsedCpus { get; set; }
        
        /// <value>
        /// The number of CPU cores available.
        /// </value>
        [JsonProperty(PropertyName = "availableCpus")]
        public System.Nullable<float> AvailableCpus { get; set; }
        
        /// <value>
        /// CPU cores that continue to be included in the count of OCPUs available to the
        /// Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down.
        /// You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "reclaimableCpus")]
        public System.Nullable<float> ReclaimableCpus { get; set; }
        
        /// <value>
        /// The number of CPUs provisioned in an Autonomous VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "provisionedCpus")]
        public System.Nullable<float> ProvisionedCpus { get; set; }
        
        /// <value>
        /// The number of CPUs reserved in an Autonomous VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "reservedCpus")]
        public System.Nullable<float> ReservedCpus { get; set; }
        
        /// <value>
        /// The number of provisionable Autonomous Container Databases in an Autonomous VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "provisionableAutonomousContainerDatabases")]
        public System.Nullable<int> ProvisionableAutonomousContainerDatabases { get; set; }
        
        /// <value>
        /// The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "provisionedAutonomousContainerDatabases")]
        public System.Nullable<int> ProvisionedAutonomousContainerDatabases { get; set; }
        
        /// <value>
        /// The number of non-provisionable Autonomous Container Databases in an Autonomous VM Cluster.
        /// </value>
        [JsonProperty(PropertyName = "nonProvisionableAutonomousContainerDatabases")]
        public System.Nullable<int> NonProvisionableAutonomousContainerDatabases { get; set; }
        
        /// <value>
        /// List of autonomous vm cluster resource usages.
        /// </value>
        [JsonProperty(PropertyName = "autonomousVmResourceUsage")]
        public System.Collections.Generic.List<AutonomousVmResourceUsage> AutonomousVmResourceUsage { get; set; }
        
    }
}
