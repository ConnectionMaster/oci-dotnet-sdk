/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// The Single Scheduling Window details.
    /// 
    /// </summary>
    public class WindowPreferenceDetail 
    {
        
        /// <value>
        /// Months during the year when scheduled window should be performed.
        /// </value>
        [JsonProperty(PropertyName = "months")]
        public System.Collections.Generic.List<Month> Months { get; set; }
        
        /// <value>
        /// Weeks during the month when scheduled window should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week.
        /// For example, to allow scheduling window during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Scheduling window cannot be scheduled for the fifth week of months that contain more than 28 days.
        /// Note that this parameter works in conjunction with the  daysOfWeek and startTime parameters to allow you to specify specific days of the week and hours that scheduled window will be performed.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "WeeksOfMonth is required.")]
        [JsonProperty(PropertyName = "weeksOfMonth")]
        public System.Collections.Generic.List<int> WeeksOfMonth { get; set; }
        
        /// <value>
        /// Days during the week when scheduling window should be performed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DaysOfWeek is required.")]
        [JsonProperty(PropertyName = "daysOfWeek")]
        public System.Collections.Generic.List<DayOfWeek> DaysOfWeek { get; set; }
        
        /// <value>
        /// The scheduling window start time. The value must use the ISO-8601 format \"hh:mm\".
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "StartTime is required.")]
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }
        
        /// <value>
        /// Duration window allows user to set a duration they plan to allocate for Scheduling window. The duration is in minutes.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Duration is required.")]
        [JsonProperty(PropertyName = "duration")]
        public System.Nullable<int> Duration { get; set; }
        
        /// <value>
        /// Indicates if duration the user plans to allocate for scheduling window is strictly enforced. The default value is `FALSE`.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsEnforcedDuration is required.")]
        [JsonProperty(PropertyName = "isEnforcedDuration")]
        public System.Nullable<bool> IsEnforcedDuration { get; set; }
        
    }
}
