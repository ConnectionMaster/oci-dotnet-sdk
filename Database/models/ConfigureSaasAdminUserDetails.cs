/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabaseService.Models
{
    /// <summary>
    /// Details to update SaaS administrative user configuration.
    /// </summary>
    public class ConfigureSaasAdminUserDetails 
    {
        
        /// <value>
        /// A strong password for SaaS administrative user. The password must be a minimum of nine (9) characters and contain a minimum of two (2) uppercase, two (2) lowercase, two (2) numbers, and two (2) special characters from _ (underscore), \\# (hashtag), or - (dash).
        /// </value>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
        /// </value>
        [JsonProperty(PropertyName = "secretId")]
        public string SecretId { get; set; }
        
        /// <value>
        /// The version of the vault secret. If no version is specified, the latest version will be used.
        /// </value>
        [JsonProperty(PropertyName = "secretVersionNumber")]
        public System.Nullable<int> SecretVersionNumber { get; set; }
        
        /// <value>
        /// How long, in hours, the SaaS administrative user will stay enabled. If no duration is specified, the default value 1 will be used.
        /// </value>
        [JsonProperty(PropertyName = "duration")]
        public System.Nullable<int> Duration { get; set; }
        
        /// <value>
        /// Indicates if the SaaS administrative user is enabled for the Autonomous AI Database.
        /// </value>
        [JsonProperty(PropertyName = "isEnabled")]
        public System.Nullable<bool> IsEnabled { get; set; }
                ///
        /// <value>
        /// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
        /// </value>
        ///
        public enum AccessTypeEnum {
            [EnumMember(Value = "READ_ONLY")]
            ReadOnly,
            [EnumMember(Value = "READ_WRITE")]
            ReadWrite,
            [EnumMember(Value = "ADMIN")]
            Admin
        };

        /// <value>
        /// The access type for the SaaS administrative user. If no access type is specified, the READ_ONLY access type is used.
        /// </value>
        [JsonProperty(PropertyName = "accessType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<AccessTypeEnum> AccessType { get; set; }
        
        /// <value>
        /// The date and time the SaaS administrative user was enabled at, for the Autonomous AI Database.
        /// </value>
        [JsonProperty(PropertyName = "timeSaasAdminUserEnabled")]
        public System.Nullable<System.DateTime> TimeSaasAdminUserEnabled { get; set; }
        
    }
}
