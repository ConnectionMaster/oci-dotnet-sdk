/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Oci.DatabaseService.Models;

namespace Oci.DatabaseService.Requests
{
    /// <example>
    /// Click <a href="https://docs.cloud.oracle.com/en-us/iaas/tools/dot-net-examples/latest/database/ListBackups.cs.html">here</a> to see an example of how to use ListBackups request.
    /// </example>
    public class ListBackupsRequest : Oci.Common.IOciRequest
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the database.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "databaseId")]
        public string DatabaseId { get; set; }
        
        /// <value>
        /// The compartment [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The maximum number of items to return per page.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "limit")]
        public System.Nullable<int> Limit { get; set; }
        
        /// <value>
        /// The pagination token to continue listing from.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "page")]
        public string Page { get; set; }
        
        ///
        /// <value>
        /// If provided, filters the results to the set of database versions which are supported for the given shape family.
        /// </value>
        ///
        public enum ShapeFamilyEnum {
            [EnumMember(Value = "SINGLENODE")]
            Singlenode,
            [EnumMember(Value = "YODA")]
            Yoda,
            [EnumMember(Value = "VIRTUALMACHINE")]
            Virtualmachine,
            [EnumMember(Value = "EXADATA")]
            Exadata,
            [EnumMember(Value = "EXACC")]
            Exacc,
            [EnumMember(Value = "EXADB_XS")]
            ExadbXs
        };

        /// <value>
        /// If provided, filters the results to the set of database versions which are supported for the given shape family.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "shapeFamily")]
        public System.Nullable<ShapeFamilyEnum> ShapeFamily { get; set; }
        
        /// <value>
        /// A filter to return only resources that match the given database version.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "version")]
        public string Version { get; set; }
        
        /// <value>
        /// A filter to return only backups that matches with the given type of Backup.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "type")]
        public string Type { get; set; }
        
        /// <value>
        /// A filter to return only resources that match the given lifecycle state exactly.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "lifecycleState")]
        public System.Nullable<BackupSummary.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// The start of date-time range of expiration for the long term backups to be fetched.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "timeExpiryScheduledGreaterThanOrEqualTo")]
        public System.Nullable<System.DateTime> TimeExpiryScheduledGreaterThanOrEqualTo { get; set; }
        
        /// <value>
        /// The end of date-time range of expiration for the long term backups to be fetched.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "timeExpiryScheduledLessThan")]
        public System.Nullable<System.DateTime> TimeExpiryScheduledLessThan { get; set; }
        
        /// <value>
        /// A filter to return only resources that match the given backup destination type.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "backupDestinationType")]
        public string BackupDestinationType { get; set; }
    }
}
