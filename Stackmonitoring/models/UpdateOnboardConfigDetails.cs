/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.StackmonitoringService.Models
{
    /// <summary>
    /// Update configuration object, contains fields describing Onboarding customization: policies, 
    /// dynamic groups, user groups.
    /// 
    /// </summary>
    public class UpdateOnboardConfigDetails : UpdateConfigDetails
    {
        
        /// <value>
        /// Assigned version to given onboard configuration.
        /// </value>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }
        
        /// <value>
        /// True if customer decides marks configuration as manually configured.
        /// </value>
        [JsonProperty(PropertyName = "isManuallyOnboarded")]
        public System.Nullable<bool> IsManuallyOnboarded { get; set; }
        
        /// <value>
        /// List of policy names assigned for onboarding
        /// </value>
        [JsonProperty(PropertyName = "policyNames")]
        public System.Collections.Generic.List<string> PolicyNames { get; set; }
        
        /// <value>
        /// List of dynamic groups dedicated for Stack Monitoring.
        /// </value>
        [JsonProperty(PropertyName = "dynamicGroups")]
        public System.Collections.Generic.List<DynamicGroupDetails> DynamicGroups { get; set; }
        
        /// <value>
        /// List of user groups dedicated for Stack Monitoring.
        /// </value>
        [JsonProperty(PropertyName = "userGroups")]
        public System.Collections.Generic.List<GroupDetails> UserGroups { get; set; }
        
        [JsonProperty(PropertyName = "additionalConfigurations")]
        public AdditionalConfigurationDetails AdditionalConfigurations { get; set; }
        
        [JsonProperty(PropertyName = "configType")]
        private readonly string configType = "ONBOARD";
    }
}
