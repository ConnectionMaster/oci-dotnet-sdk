/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.StackmonitoringService.Models
{
    /// <summary>
    /// Request details for enabling/disabling the metric receiver on the management agent.
    /// 
    /// </summary>
    public class UpdateAgentReceiverTaskDetails : MonitoredResourceTaskDetails
    {
        
        /// <value>
        /// Management Agent Identifier [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AgentId is required.")]
        [JsonProperty(PropertyName = "agentId")]
        public string AgentId { get; set; }
        
        /// <value>
        /// Type of the handler.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "HandlerType is required.")]
        [JsonProperty(PropertyName = "handlerType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<HandlerType> HandlerType { get; set; }
        
        /// <value>
        /// True to enable the receiver and false to disable the receiver on the agent.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsEnable is required.")]
        [JsonProperty(PropertyName = "isEnable")]
        public System.Nullable<bool> IsEnable { get; set; }
        
        [JsonProperty(PropertyName = "receiverProperties")]
        public AgentReceiverProperties ReceiverProperties { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "UPDATE_AGENT_RECEIVER";
    }
}
