/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.StackmonitoringService.Models
{
    /// <summary>
    /// The Summary of DiscoveryJob details.
    /// </summary>
    public class DiscoveryJobSummary 
    {
        
        /// <value>
        /// The OCID of Discovery job
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
                ///
        /// <value>
        /// Resource Type
        /// </value>
        ///
        public enum ResourceTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "WEBLOGIC_DOMAIN")]
            WeblogicDomain,
            [EnumMember(Value = "EBS_INSTANCE")]
            EbsInstance,
            [EnumMember(Value = "SQL_SERVER")]
            SqlServer,
            [EnumMember(Value = "APACHE_TOMCAT")]
            ApacheTomcat,
            [EnumMember(Value = "ORACLE_DATABASE")]
            OracleDatabase,
            [EnumMember(Value = "OCI_ORACLE_DB")]
            OciOracleDb,
            [EnumMember(Value = "OCI_ORACLE_CDB")]
            OciOracleCdb,
            [EnumMember(Value = "OCI_ORACLE_PDB")]
            OciOraclePdb,
            [EnumMember(Value = "HOST")]
            Host,
            [EnumMember(Value = "ORACLE_PSFT")]
            OraclePsft,
            [EnumMember(Value = "ORACLE_MFT")]
            OracleMft,
            [EnumMember(Value = "APACHE_HTTP_SERVER")]
            ApacheHttpServer,
            [EnumMember(Value = "ORACLE_GOLDENGATE")]
            OracleGoldengate,
            [EnumMember(Value = "CUSTOM_RESOURCE")]
            CustomResource,
            [EnumMember(Value = "ORACLE_HTTP_SERVER")]
            OracleHttpServer
        };

        /// <value>
        /// Resource Type
        /// </value>
        [JsonProperty(PropertyName = "resourceType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ResourceTypeEnum> ResourceType { get; set; }
        
        /// <value>
        /// The name of resource type
        /// </value>
        [JsonProperty(PropertyName = "resourceName")]
        public string ResourceName { get; set; }
        
        /// <value>
        /// License edition of the monitored resource.
        /// </value>
        [JsonProperty(PropertyName = "license")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LicenseType> License { get; set; }
        
        /// <value>
        /// The OCID of the Compartment
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
                ///
        /// <value>
        /// Add option submits new discovery Job. Add with retry option to re-submit failed discovery job. Refresh option refreshes the existing discovered resources.
        /// 
        /// </value>
        ///
        public enum DiscoveryTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ADD")]
            Add,
            [EnumMember(Value = "ADD_WITH_RETRY")]
            AddWithRetry,
            [EnumMember(Value = "REFRESH")]
            Refresh
        };

        /// <value>
        /// Add option submits new discovery Job. Add with retry option to re-submit failed discovery job. Refresh option refreshes the existing discovered resources.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "discoveryType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DiscoveryTypeEnum> DiscoveryType { get; set; }
                ///
        /// <value>
        /// Specifies the status of the discovery job
        /// </value>
        ///
        public enum StatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SUCCESS")]
            Success,
            [EnumMember(Value = "FAILURE")]
            Failure,
            [EnumMember(Value = "INPROGRESS")]
            Inprogress,
            [EnumMember(Value = "INACTIVE")]
            Inactive,
            [EnumMember(Value = "CREATED")]
            Created,
            [EnumMember(Value = "DELETED")]
            Deleted
        };

        /// <value>
        /// Specifies the status of the discovery job
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<StatusEnum> Status { get; set; }
        
        /// <value>
        /// The short summary of the status of the discovery job
        /// </value>
        [JsonProperty(PropertyName = "statusMessage")]
        public string StatusMessage { get; set; }
        
        /// <value>
        /// The OCID of Tenant
        /// </value>
        [JsonProperty(PropertyName = "tenantId")]
        public string TenantId { get; set; }
        
        /// <value>
        /// The OCID of user in which the job is submitted
        /// </value>
        [JsonProperty(PropertyName = "userId")]
        public string UserId { get; set; }
        
        /// <value>
        /// The time the discovery Job was updated.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The current state of the DiscoveryJob Resource.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleState> LifecycleState { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// Usage of system tag keys. These predefined keys are scoped to namespaces.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
