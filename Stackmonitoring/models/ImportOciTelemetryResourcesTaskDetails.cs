/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.StackmonitoringService.Models
{
    /// <summary>
    /// Request details for importing resources from Telemetry like resources from OCI Native Services and prometheus.
    /// 
    /// </summary>
    public class ImportOciTelemetryResourcesTaskDetails : MonitoredResourceTaskDetails
    {
                ///
        /// <value>
        /// Source from where the metrics pushed to telemetry.
        /// Possible values:
        ///   * OCI_TELEMETRY_NATIVE      - The metrics are pushed to telemetry from OCI Native Services.
        ///   * OCI_TELEMETRY_PROMETHEUS  - The metrics are pushed to telemetry from Prometheus.
        /// 
        /// </value>
        ///
        public enum SourceEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "OCI_TELEMETRY_NATIVE")]
            OciTelemetryNative,
            [EnumMember(Value = "OCI_TELEMETRY_PROMETHEUS")]
            OciTelemetryPrometheus
        };

        /// <value>
        /// Source from where the metrics pushed to telemetry.
        /// Possible values:
        ///   * OCI_TELEMETRY_NATIVE      - The metrics are pushed to telemetry from OCI Native Services.
        ///   * OCI_TELEMETRY_PROMETHEUS  - The metrics are pushed to telemetry from Prometheus.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Source is required.")]
        [JsonProperty(PropertyName = "source")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SourceEnum> Source { get; set; }
        
        /// <value>
        /// Name space to be used for OCI Native service resources discovery.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Namespace is required.")]
        [JsonProperty(PropertyName = "namespace")]
        public string Namespace { get; set; }
        
        /// <value>
        /// The resource group to use while fetching metrics from telemetry.
        /// If not specified, resource group will be skipped in the list metrics request.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "resourceGroup")]
        public string ResourceGroup { get; set; }
        
        /// <value>
        /// List of metrics to be used to calculate the availability of the resource.
        /// Resource is considered to be up if at least one of the specified metrics is available for 
        /// the resource during the specified interval using the property 
        /// 'availabilityProxyMetricCollectionIntervalInSeconds'.
        /// If no metrics are specified, availability will not be calculated for the resource.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "availabilityProxyMetrics")]
        public System.Collections.Generic.List<string> AvailabilityProxyMetrics { get; set; }
        
        /// <value>
        /// Metrics collection interval in seconds used when calculating the availability of the 
        /// resource based on metrics specified using the property 'availabilityProxyMetrics'.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "availabilityProxyMetricCollectionInterval")]
        public System.Nullable<int> AvailabilityProxyMetricCollectionInterval { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "IMPORT_OCI_TELEMETRY_RESOURCES";
    }
}
