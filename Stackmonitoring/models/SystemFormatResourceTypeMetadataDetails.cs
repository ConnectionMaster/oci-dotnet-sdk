/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.StackmonitoringService.Models
{
    /// <summary>
    /// The resource type metadata is defined in machine friendly format.
    /// </summary>
    public class SystemFormatResourceTypeMetadataDetails : ResourceTypeMetadataDetails
    {
        
        /// <value>
        /// List of required properties for resource type.
        /// </value>
        [JsonProperty(PropertyName = "requiredProperties")]
        public System.Collections.Generic.List<string> RequiredProperties { get; set; }
        
        /// <value>
        /// List of properties needed by the agent for monitoring the resource. 
        /// Valid only if resource type is OCI management agent based. When specified, 
        /// these properties are passed to the management agent during resource create or update.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "agentProperties")]
        public System.Collections.Generic.List<string> AgentProperties { get; set; }
        
        /// <value>
        /// List of valid properties for resource type while creating the monitored resource. 
        /// If resources of this type specifies any other properties during create operation, 
        /// the operation will fail.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "validPropertiesForCreate")]
        public System.Collections.Generic.List<string> ValidPropertiesForCreate { get; set; }
        
        /// <value>
        /// List of valid properties for resource type while updating the monitored resource. 
        /// If resources of this type specifies any other properties during update operation, 
        /// the operation will fail.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "validPropertiesForUpdate")]
        public System.Collections.Generic.List<string> ValidPropertiesForUpdate { get; set; }
        
        /// <value>
        /// List of property sets used to uniquely identify the resources. 
        /// This check is made during create or update of stack monitoring resource. 
        /// The resource has to pass unique check for each set in the list. 
        /// For example, database can have user, password and SID as one unique set. 
        /// Another unique set would be user, password and service name.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "uniquePropertySets")]
        public System.Collections.Generic.List<UniquePropertySet> UniquePropertySets { get; set; }
        
        /// <value>
        /// List of valid values for the properties. This is useful when resource type wants to
        /// restrict only certain values for some properties. For instance for 'osType' property, 
        /// supported values can be restricted to be either Linux or Windows.
        /// Example: { &quot;osType&quot;: [&quot;Linux&quot;,&quot;Windows&quot;,&quot;Solaris&quot;]}
        /// </value>
        [JsonProperty(PropertyName = "validPropertyValues")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>> ValidPropertyValues { get; set; }
        
        [JsonProperty(PropertyName = "format")]
        private readonly string format = "SYSTEM_FORMAT";
    }
}
