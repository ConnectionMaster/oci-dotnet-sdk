/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GenerativeaiinferenceService.Models
{
    /// <summary>
    /// The JSON schema definition to be used in JSON_SCHEMA response format.
    /// </summary>
    public class ResponseJsonSchema 
    {
        
        /// <value>
        /// The name of the response format. Must be a-z, A-Z, 0-9, or contain underscores and dashes.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// A description of what the response format is for, used by the model to determine how to respond in the format.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The schema used by the structured output, described as a JSON Schema object.
        /// </value>
        [JsonProperty(PropertyName = "schema")]
        public System.Object Schema { get; set; }
        
        /// <value>
        /// Whether to enable strict schema adherence when generating the output. If set to true, the model will always follow the exact schema defined in the schema field. Only a subset of JSON Schema is supported when strict is true. 
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isStrict")]
        public System.Nullable<bool> IsStrict { get; set; }
        
    }
}
