/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GenerativeaiinferenceService.Models
{
    /// <summary>
    /// Options for performing a web search to augment the response.
    /// </summary>
    public class WebSearchOptions 
    {
                ///
        /// <value>
        /// Specifies the size of the web search context.
        ///   - HIGH: Most comprehensive context, highest cost, slower response.
        ///   - MEDIUM: Balanced context, cost, and latency.
        ///   - LOW: Least context, lowest cost, fastest response, but potentially lower answer quality.
        /// 
        /// </value>
        ///
        public enum SearchContextSizeEnum {
            [EnumMember(Value = "HIGH")]
            High,
            [EnumMember(Value = "MEDIUM")]
            Medium,
            [EnumMember(Value = "LOW")]
            Low
        };

        /// <value>
        /// Specifies the size of the web search context.
        ///   - HIGH: Most comprehensive context, highest cost, slower response.
        ///   - MEDIUM: Balanced context, cost, and latency.
        ///   - LOW: Least context, lowest cost, fastest response, but potentially lower answer quality.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "searchContextSize")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<SearchContextSizeEnum> SearchContextSize { get; set; }
        
        [JsonProperty(PropertyName = "userLocation")]
        public ApproximateLocation UserLocation { get; set; }
        
    }
}
