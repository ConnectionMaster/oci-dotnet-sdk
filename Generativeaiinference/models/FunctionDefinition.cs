/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.GenerativeaiinferenceService.Models
{
    /// <summary>
    /// A function the model may call.
    /// </summary>
    public class FunctionDefinition : ToolDefinition
    {
        
        /// <value>
        /// The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
        /// </value>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// A description of what the function does, used by the model to choose when and how to call the function.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The parameters the functions accepts, described as a JSON Schema object. Omitting parameters defines a function with an empty parameter list.
        /// </value>
        [JsonProperty(PropertyName = "parameters")]
        public System.Object Parameters { get; set; }
        
        [JsonProperty(PropertyName = "type")]
        private readonly string type = "FUNCTION";
    }
}
