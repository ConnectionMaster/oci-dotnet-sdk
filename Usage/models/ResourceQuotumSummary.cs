/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.UsageService.Models
{
    /// <summary>
    /// The resource quota balance details.
    /// 
    /// </summary>
    public class ResourceQuotumSummary 
    {
        
        /// <value>
        /// The resource name.
        /// </value>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// Used to indicate if further quota consumption isAllowed.
        /// </value>
        [JsonProperty(PropertyName = "isAllowed")]
        public System.Nullable<bool> IsAllowed { get; set; }
        
        /// <value>
        /// The quota limit.
        /// </value>
        [JsonProperty(PropertyName = "limit")]
        public System.Double Limit { get; set; }
        
        /// <value>
        /// The quota balance.
        /// </value>
        [JsonProperty(PropertyName = "balance")]
        public System.Double Balance { get; set; }
        
        /// <value>
        /// Used to indicate if overages are incurred.
        /// </value>
        [JsonProperty(PropertyName = "isOverage")]
        public System.Nullable<bool> IsOverage { get; set; }
        
        /// <value>
        /// The purchased quota limit.
        /// </value>
        [JsonProperty(PropertyName = "purchasedLimit")]
        public System.Double PurchasedLimit { get; set; }
        
        /// <value>
        /// The service name.
        /// </value>
        [JsonProperty(PropertyName = "service")]
        public string Service { get; set; }
        
        /// <value>
        /// Used to indicate any resource dependencies.
        /// </value>
        [JsonProperty(PropertyName = "isDependency")]
        public System.Nullable<bool> IsDependency { get; set; }
        
        /// <value>
        /// The affected resource name.
        /// </value>
        [JsonProperty(PropertyName = "affectedResource")]
        public string AffectedResource { get; set; }
        
    }
}
