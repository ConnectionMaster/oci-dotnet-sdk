/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemigrationService.Models
{
    /// <summary>
    /// Optional dump settings
    /// </summary>
    public class MySqlInitialLoadSettings 
    {
        
        /// <value>
        /// Enable (true) or disable (false) consistent data dumps by locking the instance for backup during the dump.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isConsistent")]
        public System.Nullable<bool> IsConsistent { get; set; }
        
        /// <value>
        /// Include a statement at the start of the dump to set the time zone to UTC.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isTzUtc")]
        public System.Nullable<bool> IsTzUtc { get; set; }
        
        /// <value>
        /// Apply the specified requirements for compatibility with MySQL Database Service for all tables in the dump 
        /// output, altering the dump files as necessary.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "compatibility")]
        public System.Collections.Generic.List<CompatibilityOption> Compatibility { get; set; }
        
        /// <value>
        /// Primary key compatibility option
        /// </value>
        [JsonProperty(PropertyName = "primaryKeyCompatibility")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PrimaryKeyCompatibility> PrimaryKeyCompatibility { get; set; }
        
        /// <value>
        /// Import the dump even if it contains objects that already exist in the target schema in the MySQL instance.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isIgnoreExistingObjects")]
        public System.Nullable<bool> IsIgnoreExistingObjects { get; set; }
        
        /// <value>
        /// The action taken in the event of errors related to GRANT or REVOKE errors.
        /// </value>
        [JsonProperty(PropertyName = "handleGrantErrors")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<HandleGrantErrors> HandleGrantErrors { get; set; }
        
        /// <value>
        /// MySql Job Mode
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "JobMode is required.")]
        [JsonProperty(PropertyName = "jobMode")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<JobModeMySql> JobMode { get; set; }
        
    }
}
