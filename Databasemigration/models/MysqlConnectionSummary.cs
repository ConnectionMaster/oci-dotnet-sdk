/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemigrationService.Models
{
    /// <summary>
    /// Summary of the MySQL Connection.
    /// </summary>
    public class MysqlConnectionSummary : ConnectionSummary
    {
        
        /// <value>
        /// The type of MySQL source or target connection.
        /// Example: OCI_MYSQL represents OCI MySQL HeatWave Database Service
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TechnologyType is required.")]
        [JsonProperty(PropertyName = "technologyType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MysqlConnection.TechnologyTypeEnum> TechnologyType { get; set; }
        
        /// <value>
        /// The IP Address of the host.
        /// </value>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }
        
        /// <value>
        /// The port to be used for the connection.
        /// </value>
        [JsonProperty(PropertyName = "port")]
        public System.Nullable<int> Port { get; set; }
        
        /// <value>
        /// The name of the database being referenced.
        /// </value>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }
        
        /// <value>
        /// Security Type for MySQL.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SecurityProtocol is required.")]
        [JsonProperty(PropertyName = "securityProtocol")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MysqlConnection.SecurityProtocolEnum> SecurityProtocol { get; set; }
        
        /// <value>
        /// SSL modes for MySQL.
        /// </value>
        [JsonProperty(PropertyName = "sslMode")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<MysqlConnection.SslModeEnum> SslMode { get; set; }
        
        /// <value>
        /// An array of name-value pair attribute entries.
        /// </value>
        [JsonProperty(PropertyName = "additionalAttributes")]
        public System.Collections.Generic.List<NameValuePair> AdditionalAttributes { get; set; }
        
        /// <value>
        /// The OCID of the database system being referenced.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dbSystemId")]
        public string DbSystemId { get; set; }
        
        [JsonProperty(PropertyName = "connectionType")]
        private readonly string connectionType = "MYSQL";
    }
}
