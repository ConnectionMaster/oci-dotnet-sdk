/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemigrationService.Models
{
    /// <summary>
    /// Migration parameter response object.
    /// </summary>
    public class MigrationParameterSummary 
    {
        
        /// <value>
        /// The combination of source and target databases participating in a migration.
        /// Example: ORACLE means the migration is meant for migrating Oracle source and target databases.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseCombination is required.")]
        [JsonProperty(PropertyName = "databaseCombination")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DatabaseCombination> DatabaseCombination { get; set; }
        
        /// <value>
        /// Parameter display name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Parameter documentation URL link.
        /// </value>
        [JsonProperty(PropertyName = "docUrlLink")]
        public string DocUrlLink { get; set; }
        
        /// <value>
        /// Parameter name description.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Description is required.")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// Parameter category name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CategoryName is required.")]
        [JsonProperty(PropertyName = "categoryName")]
        public string CategoryName { get; set; }
        
        /// <value>
        /// Parameter category display name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CategoryDisplayName is required.")]
        [JsonProperty(PropertyName = "categoryDisplayName")]
        public string CategoryDisplayName { get; set; }
        
        /// <value>
        /// Migration Stage.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MigrationType is required.")]
        [JsonProperty(PropertyName = "migrationType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<MigrationTypes> MigrationType { get; set; }
        
        /// <value>
        /// Default value for a parameter.
        /// </value>
        [JsonProperty(PropertyName = "defaultValue")]
        public string DefaultValue { get; set; }
        
        /// <value>
        /// Parameter minimum value.
        /// </value>
        [JsonProperty(PropertyName = "minValue")]
        public System.Nullable<float> MinValue { get; set; }
        
        /// <value>
        /// Parameter maximum value.
        /// </value>
        [JsonProperty(PropertyName = "maxValue")]
        public System.Nullable<float> MaxValue { get; set; }
        
        /// <value>
        /// Hint text for parameter value.
        /// </value>
        [JsonProperty(PropertyName = "hintText")]
        public string HintText { get; set; }
        
        /// <value>
        /// Parameter name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// Parameter data type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataType is required.")]
        [JsonProperty(PropertyName = "dataType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<AdvancedParameterDataTypes> DataType { get; set; }
        
    }
}
