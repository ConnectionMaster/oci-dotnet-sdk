/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemigrationService.Models
{
    /// <summary>
    /// Job phase status details.
    /// 
    /// </summary>
    public class PhaseStatus 
    {
        
        /// <value>
        /// Phase name
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<OdmsJobPhases> Name { get; set; }
        
        /// <value>
        /// Phase status
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Status is required.")]
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<JobPhaseStatus> Status { get; set; }
        
        /// <value>
        /// Duration of the phase in milliseconds
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DurationInMs is required.")]
        [JsonProperty(PropertyName = "durationInMs")]
        public System.Nullable<int> DurationInMs { get; set; }
        
        /// <value>
        /// True if a Pre-Migration Advisor report is available for this phase. False or null if no report is available.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAdvisorReportAvailable")]
        public System.Nullable<bool> IsAdvisorReportAvailable { get; set; }
        
        /// <value>
        /// The text describing the root cause of the reported issue
        /// 
        /// </value>
        [JsonProperty(PropertyName = "issue")]
        public string Issue { get; set; }
        
        /// <value>
        /// The text describing the action required to fix the issue
        /// 
        /// </value>
        [JsonProperty(PropertyName = "action")]
        public string Action { get; set; }
        
        /// <value>
        /// Summary of phase status results.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "extract")]
        public System.Collections.Generic.List<PhaseExtractEntry> Extract { get; set; }
        
        [JsonProperty(PropertyName = "logLocation")]
        public LogLocationBucketDetails LogLocation { get; set; }
        
        /// <value>
        /// Percent progress of job phase.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "progress")]
        public System.Nullable<int> Progress { get; set; }
        
    }
}
