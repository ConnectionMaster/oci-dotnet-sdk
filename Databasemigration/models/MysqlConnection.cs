/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DatabasemigrationService.Models
{
    /// <summary>
    /// Represents the metadata of a MySQL Connection.
    /// </summary>
    public class MysqlConnection : Connection
    {
                ///
        /// <value>
        /// The type of MySQL source or target connection.
        /// Example: OCI_MYSQL represents OCI MySQL HeatWave Database Service
        /// </value>
        ///
        public enum TechnologyTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "AMAZON_AURORA_MYSQL")]
            AmazonAuroraMysql,
            [EnumMember(Value = "AMAZON_RDS_MYSQL")]
            AmazonRdsMysql,
            [EnumMember(Value = "AZURE_MYSQL")]
            AzureMysql,
            [EnumMember(Value = "GOOGLE_CLOUD_SQL_MYSQL")]
            GoogleCloudSqlMysql,
            [EnumMember(Value = "MYSQL_SERVER")]
            MysqlServer,
            [EnumMember(Value = "OCI_MYSQL")]
            OciMysql
        };

        /// <value>
        /// The type of MySQL source or target connection.
        /// Example: OCI_MYSQL represents OCI MySQL HeatWave Database Service
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TechnologyType is required.")]
        [JsonProperty(PropertyName = "technologyType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TechnologyTypeEnum> TechnologyType { get; set; }
        
        /// <value>
        /// The IP Address of the host.
        /// </value>
        [JsonProperty(PropertyName = "host")]
        public string Host { get; set; }
        
        /// <value>
        /// The port to be used for the connection.
        /// </value>
        [JsonProperty(PropertyName = "port")]
        public System.Nullable<int> Port { get; set; }
        
        /// <value>
        /// The name of the database being referenced.
        /// </value>
        [JsonProperty(PropertyName = "databaseName")]
        public string DatabaseName { get; set; }
                ///
        /// <value>
        /// Security Protocol to be used for the connection.
        /// </value>
        ///
        public enum SecurityProtocolEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "PLAIN")]
            Plain,
            [EnumMember(Value = "TLS")]
            Tls,
            [EnumMember(Value = "MTLS")]
            Mtls
        };

        /// <value>
        /// Security Protocol to be used for the connection.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SecurityProtocol is required.")]
        [JsonProperty(PropertyName = "securityProtocol")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SecurityProtocolEnum> SecurityProtocol { get; set; }
                ///
        /// <value>
        /// SSL mode to be used for the connection.
        /// </value>
        ///
        public enum SslModeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "DISABLED")]
            Disabled,
            [EnumMember(Value = "PREFERRED")]
            Preferred,
            [EnumMember(Value = "REQUIRED")]
            Required,
            [EnumMember(Value = "VERIFY_CA")]
            VerifyCa,
            [EnumMember(Value = "VERIFY_IDENTITY")]
            VerifyIdentity
        };

        /// <value>
        /// SSL mode to be used for the connection.
        /// </value>
        [JsonProperty(PropertyName = "sslMode")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<SslModeEnum> SslMode { get; set; }
        
        /// <value>
        /// An array of name-value pair attribute entries.
        /// </value>
        [JsonProperty(PropertyName = "additionalAttributes")]
        public System.Collections.Generic.List<NameValuePair> AdditionalAttributes { get; set; }
        
        /// <value>
        /// The OCID of the database system being referenced.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dbSystemId")]
        public string DbSystemId { get; set; }
        
        [JsonProperty(PropertyName = "connectionType")]
        private readonly string connectionType = "MYSQL";
    }
}
