/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudmigrationsService.Models
{
    /// <summary>
    /// Summary of the migration asset.
    /// </summary>
    public class MigrationAssetSummary 
    {
        
        /// <value>
        /// The asset ID generated by the mirgration service. It is used in the migration service pipeline.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The type of asset referenced for an inventory.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }
        
        /// <value>
        /// A user-friendly name. Does not have to be unique, and it's changeable. Avoid entering confidential information.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Compartment identifier
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The current state of the migration asset.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<MigrationAsset.LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// A message describing the current state in more detail. For example, it can be used to provide actionable information for a resource in Failed state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// The time when the migration asset was created. An RFC3339 formatted datetime string.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The time when the migration asset was updated. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// OCID of the associated migration.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MigrationId is required.")]
        [JsonProperty(PropertyName = "migrationId")]
        public string MigrationId { get; set; }
        
        /// <value>
        /// Key-value pair representing disk's ID that is mapped to the OCIDs of replicated/hydration server volume snapshots.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "snapshots")]
        public System.Collections.Generic.Dictionary<string, HydratedVolume> Snapshots { get; set; }
        
        /// <value>
        /// The parent snapshot of the mgration asset to be used by the replication task.
        /// </value>
        [JsonProperty(PropertyName = "parentSnapshot")]
        public string ParentSnapshot { get; set; }
        
        /// <value>
        /// The snapshot information.
        /// </value>
        [JsonProperty(PropertyName = "snapshotInfo")]
        public string SnapshotInfo { get; set; }
        
        /// <value>
        /// Key-value pair representing asset metadata keys and values scoped to a namespace.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "sourceAssetData")]
        public System.Collections.Generic.Dictionary<string, System.Object> SourceAssetData { get; set; }
                ///
        ///
        public enum NotificationsEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "OUT_OF_DATE")]
            OutOfDate,
            [EnumMember(Value = "SOURCE_REMOVED")]
            SourceRemoved
        };

        /// <value>
        /// List of notifications.
        /// </value>
        [JsonProperty(PropertyName = "notifications", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<NotificationsEnum> Notifications { get; set; }
        
        /// <value>
        /// OCID that is referenced to an asset, for an inventory.
        /// </value>
        [JsonProperty(PropertyName = "sourceAssetId")]
        public string SourceAssetId { get; set; }
        
        /// <value>
        /// List of migration assets that depend on this asset.
        /// </value>
        [JsonProperty(PropertyName = "dependedOnBy")]
        public System.Collections.Generic.List<string> DependedOnBy { get; set; }
        
        /// <value>
        /// List of migration assets that depend on this asset.
        /// </value>
        [JsonProperty(PropertyName = "dependsOn")]
        public System.Collections.Generic.List<string> DependsOn { get; set; }
        
        /// <value>
        /// Replication schedule identifier
        /// </value>
        [JsonProperty(PropertyName = "replicationScheduleId")]
        public string ReplicationScheduleId { get; set; }
        
        /// <value>
        /// Tenancy Identifier
        /// </value>
        [JsonProperty(PropertyName = "tenancyId")]
        public string TenancyId { get; set; }
        
    }
}
