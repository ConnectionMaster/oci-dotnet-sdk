/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.TenantmanagercontrolplaneService.Models
{
    /// <summary>
    /// The parameters for creating a child tenancy.
    /// </summary>
    public class CreateChildTenancyDetails 
    {
        
        /// <value>
        /// The tenancy ID of the parent tenancy.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The tenancy name to use for the child tenancy.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TenancyName is required.")]
        [JsonProperty(PropertyName = "tenancyName")]
        public string TenancyName { get; set; }
        
        /// <value>
        /// The home region to use for the child tenancy. This must be a region where the parent tenancy is subscribed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "HomeRegion is required.")]
        [JsonProperty(PropertyName = "homeRegion")]
        public string HomeRegion { get; set; }
        
        /// <value>
        /// Email address of the child tenancy administrator.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AdminEmail is required.")]
        [JsonProperty(PropertyName = "adminEmail")]
        public string AdminEmail { get; set; }
        
        /// <value>
        /// The name to use for the administrator policy in the child tenancy. Must contain only letters and underscores.
        /// </value>
        [JsonProperty(PropertyName = "policyName")]
        public string PolicyName { get; set; }
        
        /// <value>
        /// The governance status of the child tenancy.
        /// </value>
        [JsonProperty(PropertyName = "governanceStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<GovernanceStatus> GovernanceStatus { get; set; }
        
    }
}
