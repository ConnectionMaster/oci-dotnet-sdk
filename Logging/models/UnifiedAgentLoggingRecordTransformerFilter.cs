/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.LoggingService.Models
{
    /// <summary>
    /// Logging record transformer filter object mutates/transforms logs.
    /// Ref: https://docs.fluentd.org/filter/record_transformer
    /// 
    /// </summary>
    public class UnifiedAgentLoggingRecordTransformerFilter : UnifiedAgentLoggingFilter
    {
        
        /// <value>
        /// Add new key-value pairs in logs
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RecordList is required.")]
        [JsonProperty(PropertyName = "recordList")]
        public System.Collections.Generic.List<RecordTransformerPair> RecordList { get; set; }
        
        /// <value>
        /// When set to true, the full Ruby syntax is enabled in the ${} expression.
        /// </value>
        [JsonProperty(PropertyName = "isRubyEnabled")]
        public System.Nullable<bool> IsRubyEnabled { get; set; }
        
        /// <value>
        /// If true, automatically casts the field types.
        /// </value>
        [JsonProperty(PropertyName = "isAutoTypecastEnabled")]
        public System.Nullable<bool> IsAutoTypecastEnabled { get; set; }
        
        /// <value>
        /// If true, it modifies a new empty hash
        /// </value>
        [JsonProperty(PropertyName = "isRenewRecordEnabled")]
        public System.Nullable<bool> IsRenewRecordEnabled { get; set; }
        
        /// <value>
        /// Overwrites the time of logs with this value, this value must be a Unix timestamp.
        /// </value>
        [JsonProperty(PropertyName = "renewTimeKey")]
        public string RenewTimeKey { get; set; }
        
        /// <value>
        /// A list of keys to keep. Only relevant if isRenewRecordEnabled is set to true
        /// </value>
        [JsonProperty(PropertyName = "keepKeys")]
        public System.Collections.Generic.List<string> KeepKeys { get; set; }
        
        /// <value>
        /// A list of keys to delete
        /// </value>
        [JsonProperty(PropertyName = "removeKeys")]
        public System.Collections.Generic.List<string> RemoveKeys { get; set; }
        
        [JsonProperty(PropertyName = "filterType")]
        private readonly string filterType = "RECORD_TRANSFORMER_FILTER";
    }
}
