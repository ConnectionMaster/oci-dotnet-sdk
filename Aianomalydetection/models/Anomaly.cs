/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.AianomalydetectionService.Models
{
    /// <summary>
    /// An object to hold value information for each anomaly point
    /// </summary>
    public class Anomaly 
    {
        
        /// <value>
        /// Name of a signal where current anomaly point belongs to
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SignalName is required.")]
        [JsonProperty(PropertyName = "signalName")]
        public string SignalName { get; set; }
        
        /// <value>
        /// The actual value for the anomaly point at given signal and timestamp/row
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ActualValue is required.")]
        [JsonProperty(PropertyName = "actualValue")]
        public System.Double ActualValue { get; set; }
        
        /// <value>
        /// The estimated value for the anomaly point at given signal and timestamp/row
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EstimatedValue is required.")]
        [JsonProperty(PropertyName = "estimatedValue")]
        public System.Double EstimatedValue { get; set; }
        
        /// <value>
        /// The value imputed by an IDP step for missing values in origin data.
        /// </value>
        [JsonProperty(PropertyName = "imputedValue")]
        public System.Double ImputedValue { get; set; }
        
        /// <value>
        /// A significant score ranged from 0 to 1 to each anomaly point.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "AnomalyScore is required.")]
        [JsonProperty(PropertyName = "anomalyScore")]
        public System.Double AnomalyScore { get; set; }
        
    }
}
