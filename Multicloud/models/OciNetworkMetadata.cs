/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MulticloudService.Models
{
    /// <summary>
    /// Oracle Cloud Infrastructure network anchor related meta data items
    /// </summary>
    public class OciNetworkMetadata 
    {
                ///
        /// <value>
        /// This can be merge to lifecycleState
        /// CONNECTED - Partner and CSI information is assigned and MulticloudLink provisioned.
        /// DISCONNECTED - Only partner cloud information is assigned.
        /// CONNECTING - Oracle Cloud Infrastructure information is assigned and the control plane is provisioning resources.
        /// ACTIVE - Network anchor is connected and resources (VNICs) exist within a subnet.
        /// ERROR - DRG attach fails during connection.
        /// FAILED - Network anchor creation failed
        /// NEEDS_ATTENTION - Network anchor is in temporary bad state
        /// UPDATING - Network anchor is getting updated.
        /// DELETING - Network anchor is getting deleted
        /// DELETED - A connected network anchor is deleted.
        /// 
        /// </value>
        ///
        public enum NetworkAnchorConnectionStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "CONNECTED")]
            Connected,
            [EnumMember(Value = "DISCONNECTED")]
            Disconnected,
            [EnumMember(Value = "CONNECTING")]
            Connecting,
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "ERROR")]
            Error,
            [EnumMember(Value = "UPDATING")]
            Updating,
            [EnumMember(Value = "NEEDS_ATTENTION")]
            NeedsAttention,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "DELETING")]
            Deleting,
            [EnumMember(Value = "DELETED")]
            Deleted
        };

        /// <value>
        /// This can be merge to lifecycleState
        /// CONNECTED - Partner and CSI information is assigned and MulticloudLink provisioned.
        /// DISCONNECTED - Only partner cloud information is assigned.
        /// CONNECTING - Oracle Cloud Infrastructure information is assigned and the control plane is provisioning resources.
        /// ACTIVE - Network anchor is connected and resources (VNICs) exist within a subnet.
        /// ERROR - DRG attach fails during connection.
        /// FAILED - Network anchor creation failed
        /// NEEDS_ATTENTION - Network anchor is in temporary bad state
        /// UPDATING - Network anchor is getting updated.
        /// DELETING - Network anchor is getting deleted
        /// DELETED - A connected network anchor is deleted.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NetworkAnchorConnectionStatus is required.")]
        [JsonProperty(PropertyName = "networkAnchorConnectionStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<NetworkAnchorConnectionStatusEnum> NetworkAnchorConnectionStatus { get; set; }
        
        [JsonProperty(PropertyName = "vcn")]
        public OciVcn Vcn { get; set; }
        
        [JsonProperty(PropertyName = "dns")]
        public OciDns Dns { get; set; }
        
        /// <value>
        /// Network subnets
        /// </value>
        [JsonProperty(PropertyName = "subnets")]
        public System.Collections.Generic.List<OciNetworkSubnet> Subnets { get; set; }
        
        /// <value>
        /// The DNS Listener Endpoint Address.
        /// </value>
        [JsonProperty(PropertyName = "dnsListeningEndpointIpAddress")]
        public string DnsListeningEndpointIpAddress { get; set; }
        
        /// <value>
        /// The DNS Listener Forwarding Address.
        /// </value>
        [JsonProperty(PropertyName = "dnsForwardingEndpointIpAddress")]
        public string DnsForwardingEndpointIpAddress { get; set; }
        
        /// <value>
        /// DNS forward configuration
        /// </value>
        [JsonProperty(PropertyName = "dnsForwardingConfig")]
        public System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> DnsForwardingConfig { get; set; }
        
    }
}
