/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MulticloudService.Models
{
    /// <summary>
    /// Cloud Service Provider metadata item.
    /// Warning - In future this object can change to generic object with future Cloud Service Provider based on 
    /// CloudServiceProvider field. This can be one of CSP provider type Azure, GCP and AWS
    /// 
    /// </summary>
    public class CloudServiceProviderNetworkMetadataItem 
    {
        
        /// <value>
        /// Azure/GCP/AWS region
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Region is required.")]
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }
        
        /// <value>
        /// CSP oracle database network anchor unique ID/name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OdbNetworkId is required.")]
        [JsonProperty(PropertyName = "odbNetworkId")]
        public string OdbNetworkId { get; set; }
        
        /// <value>
        /// An Azure/GCP/AWS cidrBlocks
        /// </value>
        [JsonProperty(PropertyName = "cidrBlocks")]
        public System.Collections.Generic.List<string> CidrBlocks { get; set; }
        
        /// <value>
        /// CSP network anchor Uri
        /// </value>
        [JsonProperty(PropertyName = "networkAnchorUri")]
        public string NetworkAnchorUri { get; set; }
        
        /// <value>
        /// DNS domain ip mapping forwarding configuration
        /// </value>
        [JsonProperty(PropertyName = "dnsForwardingConfig")]
        public System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, string>> DnsForwardingConfig { get; set; }
        
    }
}
