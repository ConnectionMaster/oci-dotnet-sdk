/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IotService.Models
{
    /// <summary>
    /// Maps the metadata fields from the inbound payload using JQ.
    /// These mappings allow you to extract specific metadata such as timestamps using JQ expressions.
    /// 
    /// </summary>
    public class DigitalTwinAdapterEnvelopeMapping 
    {
        
        /// <value>
        /// JQ expression to extract the observation timestamp from the payload. If not specified,
        /// the system will default to using `timeReceived` as the timestamp.
        /// <br/>
        /// Example: For payload {&quot;time&quot;: &quot;<timestamp>&quot;,&quot;temp&quot;: 65,&quot;hum&quot;: 55}'timeObserved' can be mapped as [JQ Expression](https://jqplay.org/) $.time.
        /// </value>
        [JsonProperty(PropertyName = "timeObserved")]
        public string TimeObserved { get; set; }
        
    }
}
