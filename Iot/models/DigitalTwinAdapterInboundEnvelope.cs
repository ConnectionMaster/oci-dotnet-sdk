/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IotService.Models
{
    /// <summary>
    /// Payload containing device-specific metadata and optional value mappings used to interpret
    /// or transform that metadata. This structure includes the device endpoint, the actual payload,
    /// and an optional envelope mapping that applies [JQ](https://stedolan.github.io/jq/) expressions
    /// to extract or reshape the data as needed.
    /// 
    /// </summary>
    public class DigitalTwinAdapterInboundEnvelope 
    {
        
        /// <value>
        /// The device endpoint.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ReferenceEndpoint is required.")]
        [JsonProperty(PropertyName = "referenceEndpoint")]
        public string ReferenceEndpoint { get; set; }
        
        [JsonProperty(PropertyName = "referencePayload")]
        public DigitalTwinAdapterPayload ReferencePayload { get; set; }
        
        [JsonProperty(PropertyName = "envelopeMapping")]
        public DigitalTwinAdapterEnvelopeMapping EnvelopeMapping { get; set; }
        
    }
}
