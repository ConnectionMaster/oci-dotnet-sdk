/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IotService.Models
{
    /// <summary>
    /// A payload structure containing JSON-formatted data from the digital twin device.
    /// This schema should be used when the parent payload 'dataFormat' is set to `JSON`.
    /// The `data` property contains the reference JSON content being passed from the device.
    /// <br/>
    /// Example: {&quot;temperature&quot;: 0,&quot;location&quot;: {&quot;type&quot;: &quot;point&quot;},&quot;serialNumber&quot;: &quot;<serialNumber>&quot;}
    /// </summary>
    public class DigitalTwinAdapterJsonPayload : DigitalTwinAdapterPayload
    {
        
        /// <value>
        /// JSON raw data.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Data is required.")]
        [JsonProperty(PropertyName = "data")]
        public System.Collections.Generic.Dictionary<string, System.Object> Data { get; set; }
        
        [JsonProperty(PropertyName = "dataFormat")]
        private readonly string dataFormat = "JSON";
    }
}
