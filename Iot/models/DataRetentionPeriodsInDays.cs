/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.IotService.Models
{
    /// <summary>
    /// Data Retention periods
    /// </summary>
    public class DataRetentionPeriodsInDays 
    {
        
        /// <value>
        /// Number of days for which any raw data sent to IoT devices would be retained for.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RawData is required.")]
        [JsonProperty(PropertyName = "rawData")]
        public System.Nullable<int> RawData { get; set; }
        
        /// <value>
        /// Number of days for which any data sent to IoT devices would be retained for.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RejectedData is required.")]
        [JsonProperty(PropertyName = "rejectedData")]
        public System.Nullable<int> RejectedData { get; set; }
        
        /// <value>
        /// Number of days for which any normalized data sent to IoT devices would be retained for.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "HistorizedData is required.")]
        [JsonProperty(PropertyName = "historizedData")]
        public System.Nullable<int> HistorizedData { get; set; }
        
        /// <value>
        /// Number of days for which any raw command data sent to IoT devices would be retained for.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RawCommandData is required.")]
        [JsonProperty(PropertyName = "rawCommandData")]
        public System.Nullable<int> RawCommandData { get; set; }
        
    }
}
