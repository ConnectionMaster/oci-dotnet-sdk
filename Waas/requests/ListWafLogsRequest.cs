/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Oci.WaasService.Models;

namespace Oci.WaasService.Requests
{
    /// <example>
    /// Click <a href="https://docs.cloud.oracle.com/en-us/iaas/tools/dot-net-examples/8.1.0/waas/ListWafLogs.cs.html">here</a> to see an example of how to use ListWafLogs request.
    /// </example>
    public class ListWafLogsRequest : Oci.Common.IOciRequest
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the WAAS policy.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "WaasPolicyId is required.")]
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Path, "waasPolicyId")]
        public string WaasPolicyId { get; set; }
        
        /// <value>
        /// The unique Oracle-assigned identifier for the request. If you need to contact Oracle about a particular request, please provide the request ID.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Header, "opc-request-id")]
        public string OpcRequestId { get; set; }
        
        /// <value>
        /// The maximum number of items to return in a paginated call. If unspecified, defaults to `20`.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "limit")]
        public System.Nullable<int> Limit { get; set; }
        
        /// <value>
        /// The value of the `opc-next-page` response header from the previous paginated call.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "page")]
        public string Page { get; set; }
        
        /// <value>
        /// A filter that matches log entries where the observed event occurred on or after a date and time specified in RFC 3339 format. If unspecified, defaults to two hours before receipt of the request.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "timeObservedGreaterThanOrEqualTo")]
        public System.Nullable<System.DateTime> TimeObservedGreaterThanOrEqualTo { get; set; }
        
        /// <value>
        /// A filter that matches log entries where the observed event occurred before a date and time, specified in RFC 3339 format.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "timeObservedLessThan")]
        public System.Nullable<System.DateTime> TimeObservedLessThan { get; set; }
        
        /// <value>
        /// A full text search for logs.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "textContains")]
        public string TextContains { get; set; }
        
        /// <value>
        /// Filters logs by access rule key.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "accessRuleKey")]
        public System.Collections.Generic.List<string> AccessRuleKey { get; set; }
        
        ///
        /// <value>
        /// Filters logs by Web Application Firewall action.
        /// </value>
        ///
        public enum ActionEnum {
            [EnumMember(Value = "BLOCK")]
            Block,
            [EnumMember(Value = "DETECT")]
            Detect,
            [EnumMember(Value = "BYPASS")]
            Bypass,
            [EnumMember(Value = "LOG")]
            Log,
            [EnumMember(Value = "REDIRECTED")]
            Redirected
        };

        /// <value>
        /// Filters logs by Web Application Firewall action.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "action")]
        public System.Collections.Generic.List<ActionEnum> Action { get; set; }
        
        /// <value>
        /// Filters logs by client IP address.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "clientAddress")]
        public System.Collections.Generic.List<string> ClientAddress { get; set; }
        
        /// <value>
        /// Filters logs by country code. Country codes are in ISO 3166-1 alpha-2 format. For a list of codes, see [ISO's website](https://www.iso.org/obp/ui/#search/code/).
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "countryCode")]
        public System.Collections.Generic.List<string> CountryCode { get; set; }
        
        /// <value>
        /// Filter logs by country name.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "countryName")]
        public System.Collections.Generic.List<string> CountryName { get; set; }
        
        /// <value>
        /// Filter logs by device fingerprint.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "fingerprint")]
        public System.Collections.Generic.List<string> Fingerprint { get; set; }
        
        ///
        /// <value>
        /// Filter logs by HTTP method.
        /// </value>
        ///
        public enum HttpMethodEnum {
            [EnumMember(Value = "OPTIONS")]
            Options,
            [EnumMember(Value = "GET")]
            Get,
            [EnumMember(Value = "HEAD")]
            Head,
            [EnumMember(Value = "POST")]
            Post,
            [EnumMember(Value = "PUT")]
            Put,
            [EnumMember(Value = "DELETE")]
            Delete,
            [EnumMember(Value = "TRACE")]
            Trace,
            [EnumMember(Value = "CONNECT")]
            Connect
        };

        /// <value>
        /// Filter logs by HTTP method.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "httpMethod")]
        public System.Collections.Generic.List<HttpMethodEnum> HttpMethod { get; set; }
        
        /// <value>
        /// Filter logs by incident key.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "incidentKey")]
        public System.Collections.Generic.List<string> IncidentKey { get; set; }
        
        ///
        /// <value>
        /// Filter by log type. For more information about WAF logs, see [Logs](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/logs.htm).
        /// </value>
        ///
        public enum LogTypeEnum {
            [EnumMember(Value = "ACCESS")]
            Access,
            [EnumMember(Value = "PROTECTION_RULES")]
            ProtectionRules,
            [EnumMember(Value = "JS_CHALLENGE")]
            JsChallenge,
            [EnumMember(Value = "CAPTCHA")]
            Captcha,
            [EnumMember(Value = "ACCESS_RULES")]
            AccessRules,
            [EnumMember(Value = "THREAT_FEEDS")]
            ThreatFeeds,
            [EnumMember(Value = "HUMAN_INTERACTION_CHALLENGE")]
            HumanInteractionChallenge,
            [EnumMember(Value = "DEVICE_FINGERPRINT_CHALLENGE")]
            DeviceFingerprintChallenge,
            [EnumMember(Value = "ADDRESS_RATE_LIMITING")]
            AddressRateLimiting
        };

        /// <value>
        /// Filter by log type. For more information about WAF logs, see [Logs](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/logs.htm).
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "logType")]
        public System.Collections.Generic.List<LogTypeEnum> LogType { get; set; }
        
        /// <value>
        /// Filter by origin IP address.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "originAddress")]
        public System.Collections.Generic.List<string> OriginAddress { get; set; }
        
        /// <value>
        /// Filter by referrer.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "referrer")]
        public System.Collections.Generic.List<string> Referrer { get; set; }
        
        /// <value>
        /// Filter by request URL.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "requestUrl")]
        public System.Collections.Generic.List<string> RequestUrl { get; set; }
        
        /// <value>
        /// Filter by response code.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "responseCode")]
        public System.Collections.Generic.List<int> ResponseCode { get; set; }
        
        /// <value>
        /// Filter by threat feed key.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "threatFeedKey")]
        public System.Collections.Generic.List<string> ThreatFeedKey { get; set; }
        
        /// <value>
        /// Filter by user agent.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "userAgent")]
        public System.Collections.Generic.List<string> UserAgent { get; set; }
        
        /// <value>
        /// Filter by protection rule key.
        /// </value>
        [Oci.Common.Http.HttpConverter(Oci.Common.Http.TargetEnum.Query, "protectionRuleKey")]
        public System.Collections.Generic.List<string> ProtectionRuleKey { get; set; }
    }
}
