/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.RoverService.Models
{
    /// <summary>
    /// Summary of the RoverBundleRequest
    /// </summary>
    public class RoverBundleRequestSummary 
    {
        
        /// <value>
        /// The unique identifier of roverBundleRequest.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The OCID of destination compartment that the bundle will be copied to.
        /// </value>
        [JsonProperty(PropertyName = "destinationCompartmentId")]
        public string DestinationCompartmentId { get; set; }
        
        /// <value>
        /// The destination bucket name the bundle will be copied to.
        /// </value>
        [JsonProperty(PropertyName = "destinationBucketName")]
        public string DestinationBucketName { get; set; }
        
        /// <value>
        /// The bundle version that customer wants to upgrade to.
        /// </value>
        [JsonProperty(PropertyName = "bundleVersion")]
        public string BundleVersion { get; set; }
        
        /// <value>
        /// The work request id for an async copyObject operation.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "WorkRequestId is required.")]
        [JsonProperty(PropertyName = "workRequestId")]
        public string WorkRequestId { get; set; }
        
        /// <value>
        /// The time of the task was created. An RFC3339 formatted datetime string.
        /// </value>
        [JsonProperty(PropertyName = "timeTaskCreated")]
        public System.Nullable<System.DateTime> TimeTaskCreated { get; set; }
        
    }
}
