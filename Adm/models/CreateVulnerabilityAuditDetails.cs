/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.AdmService.Models
{
    /// <summary>
    /// Details to create a vulnerability audit.
    /// </summary>
    public class CreateVulnerabilityAuditDetails 
    {
        
        /// <value>
        /// The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the knowledge base.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KnowledgeBaseId is required.")]
        [JsonProperty(PropertyName = "knowledgeBaseId")]
        public string KnowledgeBaseId { get; set; }
        
        /// <value>
        /// The compartment Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the vulnerability audit. 
        /// If compartment identifier is not provided the compartment of the associated knowledge base will be used instead.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// List of application dependencies (without vulnerabilities).
        /// </value>
        [JsonProperty(PropertyName = "applicationDependencies")]
        public System.Collections.Generic.List<ApplicationDependency> ApplicationDependencies { get; set; }
        
        /// <value>
        /// The type of the build tool.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BuildType is required.")]
        [JsonProperty(PropertyName = "buildType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<VulnerabilityAudit.BuildTypeEnum> BuildType { get; set; }
        
        [JsonProperty(PropertyName = "configuration")]
        public VulnerabilityAuditConfiguration Configuration { get; set; }
        
        [JsonProperty(PropertyName = "usageData")]
        public UsageDataDetails UsageData { get; set; }
        
        /// <value>
        /// The name of the vulnerability audit.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        [JsonProperty(PropertyName = "source")]
        public VulnerabilityAuditSource Source { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
