/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.AdmService.Models
{
    /// <summary>
    /// An application dependency Vulnerability represents a single dependency in the application.
    /// An application dependency Vulnerability can be associated with eventual Vulnerabilities.
    /// Each application dependency is uniquely defined by a nodeId and lists eventual dependencies on which it depends.
    /// 
    /// </summary>
    public class ApplicationDependencyVulnerabilitySummary 
    {
        
        /// <value>
        /// Group Artifact Version (GAV) identifier (Group:Artifact:Version). Example: org.graalvm.nativeimage:svm:21.1.0.&quot;N/A&quot; for non-maven artifacts.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Gav is required.")]
        [JsonProperty(PropertyName = "gav")]
        public string Gav { get; set; }
        
        /// <value>
        /// Package URL identifier, e.g. pkg:maven/org.graalvm.nativeimage/svm@21.1.0
        /// </value>
        [JsonProperty(PropertyName = "purl")]
        public string Purl { get; set; }
        
        /// <value>
        /// Unique identifier of an application dependency, for example nodeId1.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NodeId is required.")]
        [JsonProperty(PropertyName = "nodeId")]
        public string NodeId { get; set; }
        
        /// <value>
        /// List of application dependencies on which this application dependency depends, each identified by its nodeId.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApplicationDependencyNodeIds is required.")]
        [JsonProperty(PropertyName = "applicationDependencyNodeIds")]
        public System.Collections.Generic.List<string> ApplicationDependencyNodeIds { get; set; }
        
        /// <value>
        /// List of vulnerabilities for the application dependency.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Vulnerabilities is required.")]
        [JsonProperty(PropertyName = "vulnerabilities")]
        public System.Collections.Generic.List<Vulnerability> Vulnerabilities { get; set; }
        
        /// <value>
        /// Indicates if the artifact is found in the knowledge base, this field is deprecated and will be removed in the future.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsFoundInKnowledgeBase is required.")]
        [JsonProperty(PropertyName = "isFoundInKnowledgeBase")]
        public System.Nullable<bool> IsFoundInKnowledgeBase { get; set; }
        
        /// <value>
        /// Potential issues in the artifact identifiers (purls) provided by the user, that the user is alerted about. ADM supports the following warnings:
        /// - MISSING_VERSION: Missing version
        /// - INCORRECT_FORMAT_VERSION: Version can not be parsed according to the ecosystem
        /// - UNKNOWN_ECOSYSTEM: The purl's ecosystem is unknown to ADM
        /// - INCORRECT_FORMAT_EPOCH: Epoch qualifier can not be parsed according to the ecosystem
        /// - MISSING_DISTRO: The distro qualifier is required for the ecosystem, but was not provided in the purl
        /// - UNKNOWN_DISTRO: ADM does not have data for the provided distro value for the given ecosystem
        /// - MISSING_ARCH: The arch qualifier is required for the ecosystem and distro, but was not provided in the purl
        /// - UNKNOWN_ARCH: ADM does not have data for the provided arch value for the given ecosystem and distro
        /// - EPOCH_VALUE_MISMATCH: Epoch value in qualifier is not the same as the epoch value in version
        /// - INVALID_PURL: The provided PURL could not be parsed
        /// 
        /// </value>
        [JsonProperty(PropertyName = "warnings")]
        public System.Collections.Generic.List<string> Warnings { get; set; }
        
    }
}
