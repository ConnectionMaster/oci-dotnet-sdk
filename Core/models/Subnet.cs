/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CoreService.Models
{
    /// <summary>
    /// A logical subdivision of a VCN. Each subnet
    /// consists of a contiguous range of IP addresses that do not overlap with
    /// other subnets in the VCN. Example: 172.16.1.0/24. For more information, see[Overview of the Networking Service](https://docs.cloud.oracle.com/Content/Network/Concepts/overview.htm) and[VCNs and Subnets](https://docs.cloud.oracle.com/Content/Network/Tasks/managingVCNs.htm).To use any of the API operations, you must be authorized in an IAM policy. If you're not authorized,talk to an administrator. If you're an administrator who needs to write policies to give users access, see[Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).**Warning:** Oracle recommends that you avoid using any confidential information when yousupply string values using the API.
    /// </summary>
    public class Subnet 
    {
        
        /// <value>
        /// The subnet's availability domain. This attribute will be null if this is a regional subnet
        /// instead of an AD-specific subnet. Oracle recommends creating regional subnets.
        /// <br/>
        /// Example: Uocm:PHX-AD-1
        /// </value>
        [JsonProperty(PropertyName = "availabilityDomain")]
        public string AvailabilityDomain { get; set; }
        
        /// <value>
        /// The subnet's CIDR block.
        /// <br/>
        /// Example: 10.0.1.0/24
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CidrBlock is required.")]
        [JsonProperty(PropertyName = "cidrBlock")]
        public string CidrBlock { get; set; }
        
        /// <value>
        /// The OCID of the compartment containing the subnet.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a
        /// namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// The OCID of the set of DHCP options that the subnet uses.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "dhcpOptionsId")]
        public string DhcpOptionsId { get; set; }
        
        /// <value>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// A DNS label for the subnet, used in conjunction with the VNIC's hostname and
        /// VCN's DNS label to form a fully qualified domain name (FQDN) for each VNIC
        /// within this subnet (for example, `bminstance-1.subnet123.vcn1.oraclevcn.com`).
        /// Must be an alphanumeric string that begins with a letter and is unique within the VCN.
        /// The value cannot be changed.
        /// <br/>
        /// The absence of this parameter means the Internet and VCN Resolver
        /// will not resolve hostnames of instances in this subnet.
        /// <br/>
        /// For more information, see
        /// [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).
        /// <br/>
        /// Example: subnet123
        /// </value>
        [JsonProperty(PropertyName = "dnsLabel")]
        public string DnsLabel { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no
        /// predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// The subnet's Oracle ID (OCID).
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// For an IPv6-enabled subnet, this is the IPv6 CIDR block for the subnet's private IP address
        /// space. The subnet size is always /64. Note that IPv6 addressing is currently supported only
        /// in certain regions. See [IPv6 Addresses](https://docs.cloud.oracle.com/Content/Network/Concepts/ipv6.htm).
        /// <br/>
        /// Example: 2001:0db8:0123:1111::/64
        /// </value>
        [JsonProperty(PropertyName = "ipv6CidrBlock")]
        public string Ipv6CidrBlock { get; set; }
        
        /// <value>
        /// For an IPv6-enabled subnet, this is the IPv6 CIDR block for the subnet's public IP address
        /// space. The subnet size is always /64. The left 48 bits are inherited from the
        /// `ipv6PublicCidrBlock` of the {@link Vcn},
        /// and the remaining 16 bits are from the subnet's `ipv6CidrBlock`.
        /// <br/>
        /// Example: 2001:0db8:0123:1111::/64
        /// </value>
        [JsonProperty(PropertyName = "ipv6PublicCidrBlock")]
        public string Ipv6PublicCidrBlock { get; set; }
        
        /// <value>
        /// For an IPv6-enabled subnet, this is the IPv6 address of the virtual router.
        /// <br/>
        /// Example: 2001:0db8:0123:1111:89ab:cdef:1234:5678
        /// </value>
        [JsonProperty(PropertyName = "ipv6VirtualRouterIp")]
        public string Ipv6VirtualRouterIp { get; set; }
                ///
        /// <value>
        /// The subnet's current state.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "PROVISIONING")]
            Provisioning,
            [EnumMember(Value = "AVAILABLE")]
            Available,
            [EnumMember(Value = "TERMINATING")]
            Terminating,
            [EnumMember(Value = "TERMINATED")]
            Terminated
        };

        /// <value>
        /// The subnet's current state.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// Whether VNICs within this subnet can have public IP addresses.
        /// Defaults to false, which means VNICs created in this subnet will
        /// automatically be assigned public IP addresses unless specified
        /// otherwise during instance launch or VNIC creation (with the
        /// `assignPublicIp` flag in
        /// {@link CreateVnicDetails}).
        /// If `prohibitPublicIpOnVnic` is set to true, VNICs created in this
        /// subnet cannot have public IP addresses (that is, it's a private
        /// subnet).
        /// <br/>
        /// Example: true
        /// </value>
        [JsonProperty(PropertyName = "prohibitPublicIpOnVnic")]
        public System.Nullable<bool> ProhibitPublicIpOnVnic { get; set; }
        
        /// <value>
        /// The OCID of the route table that the subnet uses.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RouteTableId is required.")]
        [JsonProperty(PropertyName = "routeTableId")]
        public string RouteTableId { get; set; }
        
        /// <value>
        /// The OCIDs of the security list or lists that the subnet uses. Remember
        /// that security lists are associated *with the subnet*, but the
        /// rules are applied to the individual VNICs in the subnet.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "securityListIds")]
        public System.Collections.Generic.List<string> SecurityListIds { get; set; }
        
        /// <value>
        /// The subnet's domain name, which consists of the subnet's DNS label,
        /// the VCN's DNS label, and the `oraclevcn.com` domain.
        /// <br/>
        /// For more information, see
        /// [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/Content/Network/Concepts/dns.htm).
        /// <br/>
        /// Example: subnet123.vcn1.oraclevcn.com
        /// </value>
        [JsonProperty(PropertyName = "subnetDomainName")]
        public string SubnetDomainName { get; set; }
        
        /// <value>
        /// The date and time the subnet was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
        /// <br/>
        /// Example: 2016-08-25T21:10:29.600Z
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The OCID of the VCN the subnet is in.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VcnId is required.")]
        [JsonProperty(PropertyName = "vcnId")]
        public string VcnId { get; set; }
        
        /// <value>
        /// The IP address of the virtual router.
        /// <br/>
        /// Example: 10.0.14.1
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VirtualRouterIp is required.")]
        [JsonProperty(PropertyName = "virtualRouterIp")]
        public string VirtualRouterIp { get; set; }
        
        /// <value>
        /// The MAC address of the virtual router.
        /// <br/>
        /// Example: 00:00:00:00:00:01
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VirtualRouterMac is required.")]
        [JsonProperty(PropertyName = "virtualRouterMac")]
        public string VirtualRouterMac { get; set; }
        
    }
}
