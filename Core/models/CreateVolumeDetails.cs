/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CoreService.Models
{
    /// <summary>
    /// The details of the volume to create. For CreateVolume operation, this field is required in the request,
    /// see {@link #createVolume(CreateVolumeRequest) createVolume}.
    /// 
    /// </summary>
    public class CreateVolumeDetails 
    {
        
        /// <value>
        /// The availability domain of the volume. Omissible for cloning a volume. The new volume will be created in the availability domain of the source volume.
        /// <br/>
        /// Example: Uocm:PHX-AD-1
        /// </value>
        [JsonProperty(PropertyName = "availabilityDomain")]
        public string AvailabilityDomain { get; set; }
        
        /// <value>
        /// If provided, specifies the ID of the volume backup policy to assign to the newly
        /// created volume. If omitted, no policy will be assigned.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "backupPolicyId")]
        public string BackupPolicyId { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the volume.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a
        /// namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// A user-friendly name. Does not have to be unique, and it's changeable.
        /// Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no
        /// predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// The OCID of the Vault service key to assign as the master encryption key
        /// for the volume.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "kmsKeyId")]
        public string KmsKeyId { get; set; }
        
        /// <value>
        /// The number of volume performance units (VPUs) that will be applied to this volume per GB,
        /// representing the Block Volume service's elastic performance options.
        /// See [Block Volume Performance Levels](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm#perf_levels) for more information.
        /// <br/>
        /// Allowed values:
        /// <br/>
        ///   * `0`: Represents Lower Cost option.
        /// <br/>
        ///   * `10`: Represents Balanced option.
        /// <br/>
        ///   * `20`: Represents Higher Performance option.
        /// <br/>
        ///   * `30`-`120`: Represents the Ultra High Performance option.
        /// <br/>
        /// For performance autotune enabled volumes, it would be the Default(Minimum) VPUs/GB.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "vpusPerGB")]
        public System.Nullable<long> VpusPerGB { get; set; }
        
        /// <value>
        /// The clusterPlacementGroup Id of the volume for volume placement.
        /// </value>
        [JsonProperty(PropertyName = "clusterPlacementGroupId")]
        public string ClusterPlacementGroupId { get; set; }
        
        /// <value>
        /// The size of the volume in GBs.
        /// </value>
        [JsonProperty(PropertyName = "sizeInGBs")]
        public System.Nullable<long> SizeInGBs { get; set; }
        
        /// <value>
        /// The size of the volume in MBs. The value must be a multiple of 1024.
        /// This field is deprecated. Use sizeInGBs instead.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "sizeInMBs")]
        public System.Nullable<long> SizeInMBs { get; set; }
        
        [JsonProperty(PropertyName = "sourceDetails")]
        public VolumeSourceDetails SourceDetails { get; set; }
        
        /// <value>
        /// The OCID of the volume backup from which the data should be restored on the newly created volume.
        /// This field is deprecated. Use the sourceDetails field instead to specify the
        /// backup for the volume.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "volumeBackupId")]
        public string VolumeBackupId { get; set; }
        
        /// <value>
        /// Specifies whether the auto-tune performance is enabled for this volume. This field is deprecated.
        /// Use the `DetachedVolumeAutotunePolicy` instead to enable the volume for detached autotune.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAutoTuneEnabled")]
        public System.Nullable<bool> IsAutoTuneEnabled { get; set; }
        
        /// <value>
        /// The list of block volume replicas to be enabled for this volume
        /// in the specified destination availability domains.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "blockVolumeReplicas")]
        public System.Collections.Generic.List<BlockVolumeReplicaDetails> BlockVolumeReplicas { get; set; }
        
        /// <value>
        /// The list of autotune policies to be enabled for this volume.
        /// </value>
        [JsonProperty(PropertyName = "autotunePolicies")]
        public System.Collections.Generic.List<AutotunePolicy> AutotunePolicies { get; set; }
        
        /// <value>
        /// The OCID of the Vault service key which is the master encryption key for the block volume cross region backups, which will be used in the destination region to encrypt the backup's encryption keys.
        /// For more information about the Vault service and encryption keys, see
        /// [Overview of Vault service](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and
        /// [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "xrcKmsKeyId")]
        public string XrcKmsKeyId { get; set; }
        
    }
}
