/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CoreService.Models
{
    /// <summary>
    /// These are the criteria for selecting an image. This is required if imageId is not specified.
    /// 
    /// </summary>
    public class InstanceSourceImageFilterDetails 
    {
        
        /// <value>
        /// The OCID of the compartment containing images to search
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Filter based on these defined tags. Each key is predefined and scoped to a
        /// namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// 
        /// </value>
        [JsonProperty(PropertyName = "definedTagsFilter")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTagsFilter { get; set; }
        
        /// <value>
        /// The image's operating system.
        /// <br/>
        /// Example: Oracle Linux
        /// </value>
        [JsonProperty(PropertyName = "operatingSystem")]
        public string OperatingSystem { get; set; }
        
        /// <value>
        /// The image's operating system version.
        /// <br/>
        /// Example: 7.2
        /// </value>
        [JsonProperty(PropertyName = "operatingSystemVersion")]
        public string OperatingSystemVersion { get; set; }
        
    }
}
