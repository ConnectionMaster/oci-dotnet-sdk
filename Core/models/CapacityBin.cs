/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CoreService.Models
{
    /// <summary>
    /// Total and remaining CPU & memory capacity for each capacity bucket.
    /// 
    /// </summary>
    public class CapacityBin 
    {
        
        /// <value>
        /// Zero-based index for the corresponding capacity bucket.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CapacityIndex is required.")]
        [JsonProperty(PropertyName = "capacityIndex")]
        public System.Nullable<int> CapacityIndex { get; set; }
        
        /// <value>
        /// The total OCPUs of the capacity bucket.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalOcpus is required.")]
        [JsonProperty(PropertyName = "totalOcpus")]
        public System.Nullable<float> TotalOcpus { get; set; }
        
        /// <value>
        /// The available OCPUs of the capacity bucket.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RemainingOcpus is required.")]
        [JsonProperty(PropertyName = "remainingOcpus")]
        public System.Nullable<float> RemainingOcpus { get; set; }
        
        /// <value>
        /// The total memory of the capacity bucket, in GBs.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalMemoryInGBs is required.")]
        [JsonProperty(PropertyName = "totalMemoryInGBs")]
        public System.Nullable<float> TotalMemoryInGBs { get; set; }
        
        /// <value>
        /// The remaining memory of the capacity bucket, in GBs.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RemainingMemoryInGBs is required.")]
        [JsonProperty(PropertyName = "remainingMemoryInGBs")]
        public System.Nullable<float> RemainingMemoryInGBs { get; set; }
        
        /// <value>
        /// List of VMI shapes supported on each capacity bucket.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SupportedShapes is required.")]
        [JsonProperty(PropertyName = "supportedShapes")]
        public System.Collections.Generic.List<string> SupportedShapes { get; set; }
        
    }
}
