/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApmtracesService.Models
{
    /// <summary>
    /// Definition of a span object.
    /// 
    /// </summary>
    public class Span 
    {
        
        /// <value>
        /// Unique identifier (spanId) for the span.  Note that this field is
        /// defined as spanKey in the API and it maps to the spanId in the trace data
        /// in Application Performance Monitoring.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Key is required.")]
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }
        
        /// <value>
        /// Unique parent identifier for the span if one exists. For root spans this will be null.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "parentSpanKey")]
        public string ParentSpanKey { get; set; }
        
        /// <value>
        /// Unique identifier for the trace.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TraceKey is required.")]
        [JsonProperty(PropertyName = "traceKey")]
        public string TraceKey { get; set; }
        
        /// <value>
        /// Span start time.  Timestamp when the span was started.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeStarted is required.")]
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }
        
        /// <value>
        /// Span end time.  Timestamp when the span was completed.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeEnded is required.")]
        [JsonProperty(PropertyName = "timeEnded")]
        public System.Nullable<System.DateTime> TimeEnded { get; set; }
        
        /// <value>
        /// Total span duration in milliseconds.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DurationInMs is required.")]
        [JsonProperty(PropertyName = "durationInMs")]
        public System.Nullable<long> DurationInMs { get; set; }
        
        /// <value>
        /// Span name associated with the trace.  This is usually the method or URI of the request.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OperationName is required.")]
        [JsonProperty(PropertyName = "operationName")]
        public string OperationName { get; set; }
        
        /// <value>
        /// Service name associated with the span.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; set; }
        
        /// <value>
        /// Kind associated with the span.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }
        
        /// <value>
        /// List of tags associated with the span.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.List<Tag> Tags { get; set; }
        
        /// <value>
        /// List of logs associated with the span.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "logs")]
        public System.Collections.Generic.List<SpanLogCollection> Logs { get; set; }
        
        /// <value>
        /// Indicates if the span has an error.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsError is required.")]
        [JsonProperty(PropertyName = "isError")]
        public System.Nullable<bool> IsError { get; set; }
        
    }
}
