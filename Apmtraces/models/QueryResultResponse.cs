/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApmtracesService.Models
{
    /// <summary>
    /// A response containing a collection of query rows (selected attributes and aggregations) filtered, grouped and
    /// sorted by the specified criteria from the query that is run, and the associated summary describing the corresponding
    /// query result metadata.
    /// 
    /// </summary>
    public class QueryResultResponse 
    {
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "QueryResultMetadataSummary is required.")]
        [JsonProperty(PropertyName = "queryResultMetadataSummary")]
        public QueryResultMetadataSummary QueryResultMetadataSummary { get; set; }
        
        /// <value>
        /// A collection of objects with each object representing an individual row of the query result set.  The total number of objects
        /// returned in this collection correspond to the total number of rows returned by the actual query that is run against
        /// the queried entity.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "QueryResultRows is required.")]
        [JsonProperty(PropertyName = "queryResultRows")]
        public System.Collections.Generic.List<QueryResultRow> QueryResultRows { get; set; }
        
        /// <value>
        /// A map containing metadata or additional information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "queryResultMetadata")]
        public System.Collections.Generic.Dictionary<string, System.Object> QueryResultMetadata { get; set; }
        
        /// <value>
        /// A structure that provides warnings, if any, along with the query results.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "queryResultWarnings")]
        public System.Collections.Generic.List<QueryResultWarning> QueryResultWarnings { get; set; }
        
    }
}
