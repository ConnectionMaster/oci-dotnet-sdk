/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApmsyntheticsService.Models
{
    /// <summary>
    /// The monitor result for a specific execution.
    /// </summary>
    public class MonitorResult 
    {
        
        /// <value>
        /// Type of result.
        /// Example: HAR, Screenshot, Log or Network.
        /// </value>
        [JsonProperty(PropertyName = "resultType")]
        public string ResultType { get; set; }
        
        /// <value>
        /// Type of result content.
        /// Example: Zip or Raw file.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResultContentType is required.")]
        [JsonProperty(PropertyName = "resultContentType")]
        public string ResultContentType { get; set; }
        
        /// <value>
        /// Monitor result data set.
        /// </value>
        [JsonProperty(PropertyName = "resultDataSet")]
        public System.Collections.Generic.List<MonitorResultData> ResultDataSet { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the monitor.
        /// </value>
        [JsonProperty(PropertyName = "monitorId")]
        public string MonitorId { get; set; }
        
        /// <value>
        /// The name of the public or dedicated vantage point.
        /// </value>
        [JsonProperty(PropertyName = "vantagePoint")]
        public string VantagePoint { get; set; }
        
        /// <value>
        /// The specific point of time when the result of an execution is collected.
        /// </value>
        [JsonProperty(PropertyName = "executionTime")]
        public string ExecutionTime { get; set; }
        
    }
}
