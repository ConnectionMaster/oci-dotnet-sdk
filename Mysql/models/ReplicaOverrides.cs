/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MysqlService.Models
{
    /// <summary>
    /// By default a read replica inherits the MySQL version, shape, and configuration of the source DB system. 
    /// If you want to override any of these, provide values in the properties, mysqlVersion, shapeName, 
    /// and configurationId. If you set a property value to \"\", then the value is inherited from its 
    /// source DB system.
    /// 
    /// </summary>
    public class ReplicaOverrides 
    {
        
        /// <value>
        /// The MySQL version to be used by the read replica.
        /// </value>
        [JsonProperty(PropertyName = "mysqlVersion")]
        public string MysqlVersion { get; set; }
        
        /// <value>
        /// The shape to be used by the read replica. The shape determines the resources allocated: 
        /// CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes. 
        /// To get a list of shapes, use the {@link #listShapes(ListShapesRequest) listShapes} operation.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "shapeName")]
        public string ShapeName { get; set; }
        
        /// <value>
        /// The OCID of the Configuration to be used by the read replica.
        /// </value>
        [JsonProperty(PropertyName = "configurationId")]
        public string ConfigurationId { get; set; }
        
        /// <value>
        /// Network Security Group OCIDs used for the VNIC attachment.
        /// </value>
        [JsonProperty(PropertyName = "nsgIds")]
        public System.Collections.Generic.List<string> NsgIds { get; set; }
        
    }
}
