/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MysqlService.Models
{
    /// <summary>
    /// Enables assignment of IDs on the target to anonymous transactions coming from the source. A manually defined UUID
    /// is added as a prefix to the ID.
    /// 
    /// </summary>
    public class AssignManualUuidHandling : AnonymousTransactionsHandling
    {
        
        /// <value>
        /// Specifies one of the coordinates (file) at which the replica should begin
        /// reading the source's log. As this value specifies the point where replication
        /// starts from, it is only used once, when it starts. It is never used again,
        /// unless a new UpdateChannel operation modifies it.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "lastConfiguredLogFilename")]
        public string LastConfiguredLogFilename { get; set; }
        
        /// <value>
        /// Specifies one of the coordinates (offset) at which the replica should begin
        /// reading the source's log. As this value specifies the point where replication
        /// starts from, it is only used once, when it starts. It is never used again,
        /// unless a new UpdateChannel operation modifies it.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "lastConfiguredLogOffset")]
        public System.Nullable<long> LastConfiguredLogOffset { get; set; }
        
        /// <value>
        /// The UUID that is used as a prefix when generating transaction identifiers for anonymous transactions
        /// coming from the source. You can change the UUID later.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "uuid")]
        public System.Guid Uuid { get; set; }
        
        [JsonProperty(PropertyName = "policy")]
        private readonly string policy = "ASSIGN_MANUAL_UUID";
    }
}
