/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MysqlService.Models
{
    /// <summary>
    /// Details required to update a read replica.
    /// </summary>
    public class UpdateReplicaDetails 
    {
        
        /// <value>
        /// The user-friendly name for the read replica. It does not have to be unique.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// User provided description of the read replica.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// Specifies whether the read replica can be deleted. Set to true to prevent deletion, false (default) to allow.
        /// Note that if a read replica is delete protected it also prevents the entire DB System from being deleted. If
        /// the DB System is delete protected, read replicas can still be deleted individually if they are not delete 
        /// protected themselves.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isDeleteProtected")]
        public System.Nullable<bool> IsDeleteProtected { get; set; }
        
        [JsonProperty(PropertyName = "replicaOverrides")]
        public ReplicaOverrides ReplicaOverrides { get; set; }
        
    }
}
