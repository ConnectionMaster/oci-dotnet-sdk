/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApmconfigService.Models
{
    /// <summary>
    /// Array of configuration items with dependencies to import.
    /// </summary>
    public class ImportConfigurationDetails 
    {
        
        /// <value>
        /// A list of Configurations Details .
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConfigurationItems is required.")]
        [JsonProperty(PropertyName = "configurationItems")]
        public System.Collections.Generic.List<ExportImportConfigSummary> ConfigurationItems { get; set; }
        
        /// <value>
        /// Simple key-value pair that has parameters related to the import process (EnableOcidSubstitution, Skip, \u2026) and more.
        /// Example: {&quot;parameter-key&quot;: &quot;parameter-value&quot;}Supported parameters: \u2014 Enable the OCIDs in instructions to be replaced, if set to &quot;true&quot; The Config Service replace any OCIDs it finds in the instructions, if set to true the Config Service will replace.\u2014 Compartment Id we want to import the configuration Items,if the compartment Id is not provided it will be the default destination domain compartmentId.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConfigurationMap is required.")]
        [JsonProperty(PropertyName = "configurationMap")]
        public System.Collections.Generic.Dictionary<string, string> ConfigurationMap { get; set; }
        
    }
}
