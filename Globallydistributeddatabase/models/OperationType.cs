/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;

namespace Oci.GloballydistributeddatabaseService.Models
{
  /// <summary>
  /// Possible operation types.
  /// </summary>
  public enum OperationType {
      /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
      [EnumMember(Value = null)]
      UnknownEnumValue,
      [EnumMember(Value = "CREATE_SHARDED_DATABASE")]
      CreateShardedDatabase,
      [EnumMember(Value = "DELETE_SHARDED_DATABASE")]
      DeleteShardedDatabase,
      [EnumMember(Value = "UPDATE_SHARDED_DATABASE")]
      UpdateShardedDatabase,
      [EnumMember(Value = "CONFIGURE_SHARDED_DATABASE_GSMS")]
      ConfigureShardedDatabaseGsms,
      [EnumMember(Value = "START_SHARDED_DATABASE")]
      StartShardedDatabase,
      [EnumMember(Value = "STOP_SHARDED_DATABASE")]
      StopShardedDatabase,
      [EnumMember(Value = "VALIDATE_NETWORK")]
      ValidateNetwork,
      [EnumMember(Value = "CHANGE_SHARDED_DB_COMPARTMENT")]
      ChangeShardedDbCompartment,
      [EnumMember(Value = "CREATE_PRIVATE_ENDPOINT")]
      CreatePrivateEndpoint,
      [EnumMember(Value = "UPDATE_PRIVATE_ENDPOINT")]
      UpdatePrivateEndpoint,
      [EnumMember(Value = "DELETE_PRIVATE_ENDPOINT")]
      DeletePrivateEndpoint,
      [EnumMember(Value = "CHANGE_PRIVATE_ENDPOINT_COMPARTMENT")]
      ChangePrivateEndpointCompartment,
      [EnumMember(Value = "INSERT_SHARDS")]
      InsertShards,
      [EnumMember(Value = "REMOVE_SHARDS")]
      RemoveShards,
      [EnumMember(Value = "MERGE_CATALOG_SHARDS")]
      MergeCatalogShards,
      [EnumMember(Value = "UPLOAD_SIGNED_CERT_AND_GENERATE_WALLET")]
      UploadSignedCertAndGenerateWallet,
      [EnumMember(Value = "GENERATE_GSM_CERT_SIGNING_REQ")]
      GenerateGsmCertSigningReq,
      [EnumMember(Value = "CONFIGURE_SHARDING")]
      ConfigureSharding,
      [EnumMember(Value = "EXECUTE_VALIDATE_NETWORK_TESTS")]
      ExecuteValidateNetworkTests,
      [EnumMember(Value = "UPDATE_SHARD")]
      UpdateShard,
      [EnumMember(Value = "PRIVATE_DELETE_SDB")]
      PrivateDeleteSdb,
      [EnumMember(Value = "PROCESS_SHARDED_DATABASE")]
      ProcessShardedDatabase,
      [EnumMember(Value = "CREATE_CATALOGS")]
      CreateCatalogs,
      [EnumMember(Value = "CREATE_SHARDS")]
      CreateShards,
      [EnumMember(Value = "CREATE_GSM_NODES")]
      CreateGsmNodes,
      [EnumMember(Value = "ADD_GSM_NODES")]
      AddGsmNodes,
      [EnumMember(Value = "PRIVATE_DELETE_ATPD_CATALOG")]
      PrivateDeleteAtpdCatalog,
      [EnumMember(Value = "PRIVATE_DELETE_ATPD_SHARD")]
      PrivateDeleteAtpdShard,
      [EnumMember(Value = "PRIVATE_DELETE_GSM")]
      PrivateDeleteGsm,
      [EnumMember(Value = "REINSTATE_PROXY_INSTANCE")]
      ReinstateProxyInstance
  }
}
