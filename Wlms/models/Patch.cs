/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.WlmsService.Models
{
    /// <summary>
    /// A WebLogic patch.
    /// 
    /// </summary>
    public class Patch 
    {
        
        /// <value>
        /// The ID of the WebLogic patch.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The name of the WebLogic patch.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The description of the WebLogic patch.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Description is required.")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The WebLogic version for this patch. The patch can be installed to domains with this version.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "WeblogicVersion is required.")]
        [JsonProperty(PropertyName = "weblogicVersion")]
        public string WeblogicVersion { get; set; }
                ///
        ///
        public enum MiddlewareTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "FMW")]
            Fmw,
            [EnumMember(Value = "WLS")]
            Wls,
            [EnumMember(Value = "OPATCH")]
            Opatch
        };

        /// <value>
        /// The type of middleware for which this patch is applicable. A patch can be applicable to more than one type of middleware.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MiddlewareType is required.")]
        [JsonProperty(PropertyName = "middlewareType", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<MiddlewareTypeEnum> MiddlewareType { get; set; }
        
        /// <value>
        /// The operating system architecture for which the patch can be applied.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "OsArch is required.")]
        [JsonProperty(PropertyName = "osArch")]
        public string OsArch { get; set; }
        
    }
}
