/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.WlmsService.Models
{
    /// <summary>
    /// The result of a server check in a managed instance.
    /// 
    /// </summary>
    public class ScanResultSummary 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the WebLogic domain.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "WlsDomainId is required.")]
        [JsonProperty(PropertyName = "wlsDomainId")]
        public string WlsDomainId { get; set; }
        
        /// <value>
        /// The name of the WebLogic server to which the server check belongs.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServerName is required.")]
        [JsonProperty(PropertyName = "serverName")]
        public string ServerName { get; set; }
        
        /// <value>
        /// The date when the WebLogic server health check is performed (in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) format).
        /// <br/>
        /// Example: 2016-08-25T21:10:29.600Z
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeOfServerCheck is required.")]
        [JsonProperty(PropertyName = "timeOfServerCheck")]
        public System.Nullable<System.DateTime> TimeOfServerCheck { get; set; }
                ///
        /// <value>
        /// The status of the server check which is OK, FAILURE, or WARNING.
        /// </value>
        ///
        public enum ServerCheckStatusEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "OK")]
            Ok,
            [EnumMember(Value = "WARNING")]
            Warning,
            [EnumMember(Value = "FAILURE")]
            Failure
        };

        /// <value>
        /// The status of the server check which is OK, FAILURE, or WARNING.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServerCheckStatus is required.")]
        [JsonProperty(PropertyName = "serverCheckStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ServerCheckStatusEnum> ServerCheckStatus { get; set; }
        
        /// <value>
        /// The name of the check performed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServerCheckName is required.")]
        [JsonProperty(PropertyName = "serverCheckName")]
        public string ServerCheckName { get; set; }
        
        /// <value>
        /// The identifier of the the server check result.
        /// </value>
        [JsonProperty(PropertyName = "serverCheckResultId")]
        public string ServerCheckResultId { get; set; }
        
        /// <value>
        /// The result of the server check.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServerCheckResult is required.")]
        [JsonProperty(PropertyName = "serverCheckResult")]
        public string ServerCheckResult { get; set; }
        
    }
}
