/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DelegateaccesscontrolService.Models
{
    /// <summary>
    /// A support operator raises Delegated Resource Access Request when they need access to any infrastructure resource governed by Delegation Control.
    /// The Delegated Resource Access Request identifies the target resource and the set of Service Provider Actions. Delegated Resource Access Request handling depends upon the Delegation Control 
    /// that governs the target resource, and the set of Service Provider Actions listed for approval in the Delegated Resource Access Request. If all of the Service Provider Actions 
    /// listed in the Delegated Resource Access Request are in the pre-approved list in the Delegation Control that governs the target resource, then the Delegated Resource Access Request is 
    /// automatically approved. If not, then the Delegated Resource Access Request requires explicit approval from the approver group specified by the Delegation Control governing the target resource.
    /// <br/>
    /// You can approve or reject a Delegated Resource Access Request. You can also revoke the approval of an already approved Delegated Resource Access Request. While creating a Delegated Resource Access Request, 
    /// the support operator specifies the duration of access. You have the option to approve the entire duration or reduce or even increase the time duration. 
    /// A support operator can also request for an extension. The approval for such an extension is processed the same way the original Delegated Resource Access Request was processed.
    /// 
    /// </summary>
    public class DelegatedResourceAccessRequest 
    {
        
        /// <value>
        /// The OCID of the Delegated Resource Access Request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the Delegated Resource Access Request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Display name. This is generated by the system automatically.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// A list of ticket numbers related to this Delegated Resource Access Request, e.g. Service Request (SR) number and JIRA ticket number.
        /// </value>
        [JsonProperty(PropertyName = "ticketNumbers")]
        public System.Collections.Generic.List<string> TicketNumbers { get; set; }
        
        /// <value>
        /// A short description explaining why this Delegated Resource Access Request is needed by the support operator.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ReasonForRequest is required.")]
        [JsonProperty(PropertyName = "reasonForRequest")]
        public string ReasonForRequest { get; set; }
        
        /// <value>
        /// Detailed description of this Delegated Resource Access Request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Description is required.")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// Requested access start time in UTC.
        /// </value>
        [JsonProperty(PropertyName = "timeAccessRequested")]
        public System.Nullable<System.DateTime> TimeAccessRequested { get; set; }
        
        /// <value>
        /// The OCID of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to 
        /// access the target resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceId is required.")]
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// The name of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to 
        /// access the target resource.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "resourceName")]
        public string ResourceName { get; set; }
        
        /// <value>
        /// Resource type for which the associated Delegation Control is applicable to.
        /// </value>
        [JsonProperty(PropertyName = "resourceType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DelegationControlResourceType> ResourceType { get; set; }
        
        /// <value>
        /// Requester type
        /// </value>
        [JsonProperty(PropertyName = "requesterType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DelegatedResourceAccessRequesterType> RequesterType { get; set; }
        
        /// <value>
        /// List of Service Provider Action names for which approval is sought by the support operator user. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API.
        /// </value>
        [JsonProperty(PropertyName = "requestedActionNames")]
        public System.Collections.Generic.List<string> RequestedActionNames { get; set; }
        
        /// <value>
        /// List of Database unique names for which access is requested. This parameter is required for DLGT_MGMT_SYS_MAINT_ACCESS cage when database access in needed.
        /// </value>
        [JsonProperty(PropertyName = "databaseNameList")]
        public System.Collections.Generic.List<string> DatabaseNameList { get; set; }
        
        /// <value>
        /// List of Service Provider Service Types being provided by the support operator user.
        /// </value>
        [JsonProperty(PropertyName = "providedServiceTypes", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<ServiceProviderServiceType> ProvidedServiceTypes { get; set; }
        
        /// <value>
        /// List of Delegation Subscription OCID that are associated with this Delegated Resource Access Request based on the service types being requested.
        /// </value>
        [JsonProperty(PropertyName = "delegationSubscriptionIds")]
        public System.Collections.Generic.List<string> DelegationSubscriptionIds { get; set; }
        
        /// <value>
        /// Priority assigned to the Delegated Resource Access Request by the support operator
        /// </value>
        [JsonProperty(PropertyName = "severity")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DelegatedResourceAccessRequestSeverity> Severity { get; set; }
        
        /// <value>
        /// Duration in hours for which access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "durationInHours")]
        public System.Nullable<int> DurationInHours { get; set; }
        
        /// <value>
        /// Duration in hours for which extension access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "extendDurationInHours")]
        public System.Nullable<int> ExtendDurationInHours { get; set; }
        
        /// <value>
        /// Set to true if the request is approved automatically based on preApprovedServiceProviderActionNames or isAutoApproveDuringMaintenance in the associated Delegation Control.
        /// </value>
        [JsonProperty(PropertyName = "isAutoApproved")]
        public System.Nullable<bool> IsAutoApproved { get; set; }
                ///
        /// <value>
        /// The current lifecycle state of the Delegated Resource Access Request.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ACCEPTED")]
            Accepted,
            [EnumMember(Value = "IN_PROGRESS")]
            InProgress,
            [EnumMember(Value = "WAITING")]
            Waiting,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "CANCELING")]
            Canceling,
            [EnumMember(Value = "CANCELED")]
            Canceled,
            [EnumMember(Value = "NEEDS_ATTENTION")]
            NeedsAttention
        };

        /// <value>
        /// The current lifecycle state of the Delegated Resource Access Request.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// Description of the current lifecycle state in more detail.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleStateDetails")]
        public string LifecycleStateDetails { get; set; }
        
        /// <value>
        /// The current status of the Delegated Resource Access Request.
        /// </value>
        [JsonProperty(PropertyName = "requestStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DelegatedResourceAccessRequestStatus> RequestStatus { get; set; }
        
        /// <value>
        /// Time when the Delegated Resource Access Request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. '2020-05-22T21:10:29.600Z'.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// Time when the Delegated Resource Access Request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. '2020-05-22T21:10:29.600Z'.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// Number of initial approvals that have been obtained so far.
        /// </value>
        [JsonProperty(PropertyName = "numInitialApprovals")]
        public System.Nullable<int> NumInitialApprovals { get; set; }
        
        /// <value>
        /// Number of extension approvals that have been obtained so far.
        /// </value>
        [JsonProperty(PropertyName = "numExtensionApprovals")]
        public System.Nullable<int> NumExtensionApprovals { get; set; }
        
        /// <value>
        /// In case of single approval, this will have only one item. Else, a list of approvals.
        /// </value>
        [JsonProperty(PropertyName = "approvalInfo")]
        public System.Collections.Generic.List<DelegatedResourceAccessRequestApprovalDetails> ApprovalInfo { get; set; }
        
        /// <value>
        /// The comment entered by the support operator while closing the request.
        /// </value>
        [JsonProperty(PropertyName = "closureComment")]
        public string ClosureComment { get; set; }
        
        /// <value>
        /// The OCID of the Delegation Control governing the target resource.
        /// </value>
        [JsonProperty(PropertyName = "delegationControlId")]
        public string DelegationControlId { get; set; }
        
        /// <value>
        /// Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level. 
        /// By default, both command-level and keystroke-level auditing are enabled, i.e. commands and key strokes issued by the support operator are logged.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "auditTypes", ItemConverterType = typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Collections.Generic.List<DelegatedResourceAccessRequestAuditType> AuditTypes { get; set; }
        
        /// <value>
        /// Indicates if the delegated resource access request is waiting on more information from the operator
        /// </value>
        [JsonProperty(PropertyName = "isPendingMoreInfo")]
        public System.Nullable<bool> IsPendingMoreInfo { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// <br/>
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
