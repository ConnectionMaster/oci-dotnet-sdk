/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DelegateaccesscontrolService.Models
{
    /// <summary>
    /// While creating the Delegation Control, specify how Service Provider Actions are approved and the users who have the privilege of approving the Service Provider Actions associated with the Delegation Control.
    /// <br/>
    /// You must specify which Service Provider Actions must be pre-approved. The rest of the Service Provider Actions associated with the Delegation Control will require an explicit approval from the users selected either through the approver groups or individually.
    /// <br/>
    /// You must name your Delegation Control appropriately so it reflects the resources that will be governed by the Delegation Control. Neither the Delegation Controls nor their assignments to resources are visible to the support operators.
    /// 
    /// </summary>
    public class CreateDelegationControlDetails 
    {
        
        /// <value>
        /// The OCID of the compartment that contains this Delegation Control.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Name of the Delegation Control. The name does not need to be unique.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Description of the Delegation Control.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// number of approvals required.
        /// </value>
        [JsonProperty(PropertyName = "numApprovalsRequired")]
        public System.Nullable<int> NumApprovalsRequired { get; set; }
        
        /// <value>
        /// List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be
        /// automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "preApprovedServiceProviderActionNames")]
        public System.Collections.Generic.List<string> PreApprovedServiceProviderActionNames { get; set; }
        
        /// <value>
        /// List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DelegationSubscriptionIds is required.")]
        [JsonProperty(PropertyName = "delegationSubscriptionIds")]
        public System.Collections.Generic.List<string> DelegationSubscriptionIds { get; set; }
        
        /// <value>
        /// Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
        /// </value>
        [JsonProperty(PropertyName = "isAutoApproveDuringMaintenance")]
        public System.Nullable<bool> IsAutoApproveDuringMaintenance { get; set; }
        
        /// <value>
        /// The OCID of the selected resources that this Delegation Control is applicable to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceIds is required.")]
        [JsonProperty(PropertyName = "resourceIds")]
        public System.Collections.Generic.List<string> ResourceIds { get; set; }
        
        /// <value>
        /// Resource type for which the Delegation Control is applicable to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceType is required.")]
        [JsonProperty(PropertyName = "resourceType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DelegationControlResourceType> ResourceType { get; set; }
        
        /// <value>
        /// The OCID of the OCI Notification topic to publish messages related to this Delegation Control.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NotificationTopicId is required.")]
        [JsonProperty(PropertyName = "notificationTopicId")]
        public string NotificationTopicId { get; set; }
        
        /// <value>
        /// The format of the OCI Notification messages for this Delegation Control.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NotificationMessageFormat is required.")]
        [JsonProperty(PropertyName = "notificationMessageFormat")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DelegationControl.NotificationMessageFormatEnum> NotificationMessageFormat { get; set; }
        
        /// <value>
        /// The OCID of the OCI Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the OCI Vault.
        /// </value>
        [JsonProperty(PropertyName = "vaultId")]
        public string VaultId { get; set; }
        
        /// <value>
        /// The OCID of the Master Encryption Key in the OCI Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
        /// </value>
        [JsonProperty(PropertyName = "vaultKeyId")]
        public string VaultKeyId { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
