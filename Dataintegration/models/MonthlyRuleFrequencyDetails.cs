/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataintegrationService.Models
{
    /// <summary>
    /// Frequency Details model for monthly frequency based on week of month and day of week.
    /// </summary>
    public class MonthlyRuleFrequencyDetails : AbstractFrequencyDetails
    {
                ///
        /// <value>
        /// This holds the week of the month in which the schedule should be triggered.
        /// </value>
        ///
        public enum WeekOfMonthEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "FIRST")]
            First,
            [EnumMember(Value = "SECOND")]
            Second,
            [EnumMember(Value = "THIRD")]
            Third,
            [EnumMember(Value = "FOURTH")]
            Fourth,
            [EnumMember(Value = "FIFTH")]
            Fifth,
            [EnumMember(Value = "LAST")]
            Last
        };

        /// <value>
        /// This holds the week of the month in which the schedule should be triggered.
        /// </value>
        [JsonProperty(PropertyName = "weekOfMonth")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<WeekOfMonthEnum> WeekOfMonth { get; set; }
        
        /// <value>
        /// This hold the repeatability aspect of a schedule. i.e. in a monhtly frequency, a task can be scheduled for every month, once in two months, once in tree months etc.
        /// </value>
        [JsonProperty(PropertyName = "interval")]
        public System.Nullable<int> Interval { get; set; }
        
        [JsonProperty(PropertyName = "time")]
        public Time Time { get; set; }
                ///
        /// <value>
        /// This holds the day of the week on which the schedule should be triggered.
        /// </value>
        ///
        public enum DayOfWeekEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SUNDAY")]
            Sunday,
            [EnumMember(Value = "MONDAY")]
            Monday,
            [EnumMember(Value = "TUESDAY")]
            Tuesday,
            [EnumMember(Value = "WEDNESDAY")]
            Wednesday,
            [EnumMember(Value = "THURSDAY")]
            Thursday,
            [EnumMember(Value = "FRIDAY")]
            Friday,
            [EnumMember(Value = "SATURDAY")]
            Saturday
        };

        /// <value>
        /// This holds the day of the week on which the schedule should be triggered.
        /// </value>
        [JsonProperty(PropertyName = "dayOfWeek")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DayOfWeekEnum> DayOfWeek { get; set; }
        
        [JsonProperty(PropertyName = "modelType")]
        private readonly string modelType = "MONTHLY_RULE";
    }
}
