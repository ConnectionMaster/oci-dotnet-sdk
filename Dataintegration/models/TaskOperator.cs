/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataintegrationService.Models
{
    /// <summary>
    /// An operator for task
    /// </summary>
    public class TaskOperator : Operator
    {
        
        /// <value>
        /// The number of retry attempts.
        /// </value>
        [JsonProperty(PropertyName = "retryAttempts")]
        public System.Nullable<int> RetryAttempts { get; set; }
                ///
        /// <value>
        /// The unit for the retry delay.
        /// </value>
        ///
        public enum RetryDelayUnitEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SECONDS")]
            Seconds,
            [EnumMember(Value = "MINUTES")]
            Minutes,
            [EnumMember(Value = "HOURS")]
            Hours,
            [EnumMember(Value = "DAYS")]
            Days
        };

        /// <value>
        /// The unit for the retry delay.
        /// </value>
        [JsonProperty(PropertyName = "retryDelayUnit")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RetryDelayUnitEnum> RetryDelayUnit { get; set; }
        
        /// <value>
        /// The retry delay, the unit for measurement is in the property retry delay unit.
        /// </value>
        [JsonProperty(PropertyName = "retryDelay")]
        public System.Double RetryDelay { get; set; }
        
        /// <value>
        /// The expected duration for the task run.
        /// </value>
        [JsonProperty(PropertyName = "expectedDuration")]
        public System.Double ExpectedDuration { get; set; }
                ///
        /// <value>
        /// The expected duration unit of measure.
        /// </value>
        ///
        public enum ExpectedDurationUnitEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "SECONDS")]
            Seconds,
            [EnumMember(Value = "MINUTES")]
            Minutes,
            [EnumMember(Value = "HOURS")]
            Hours,
            [EnumMember(Value = "DAYS")]
            Days
        };

        /// <value>
        /// The expected duration unit of measure.
        /// </value>
        [JsonProperty(PropertyName = "expectedDurationUnit")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ExpectedDurationUnitEnum> ExpectedDurationUnit { get; set; }
                ///
        /// <value>
        /// The type of the task referenced in the task property.
        /// </value>
        ///
        public enum TaskTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "PIPELINE_TASK")]
            PipelineTask,
            [EnumMember(Value = "INTEGRATION_TASK")]
            IntegrationTask,
            [EnumMember(Value = "DATA_LOADER_TASK")]
            DataLoaderTask,
            [EnumMember(Value = "SQL_TASK")]
            SqlTask,
            [EnumMember(Value = "OCI_DATAFLOW_TASK")]
            OciDataflowTask,
            [EnumMember(Value = "REST_TASK")]
            RestTask
        };

        /// <value>
        /// The type of the task referenced in the task property.
        /// </value>
        [JsonProperty(PropertyName = "taskType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TaskTypeEnum> TaskType { get; set; }
        
        [JsonProperty(PropertyName = "task")]
        public Task Task { get; set; }
                ///
        /// <value>
        /// The merge condition. The conditions are
        /// ALL_SUCCESS - All the preceeding operators need to be successful.
        /// ALL_FAILED - All the preceeding operators should have failed.
        /// ALL_COMPLETE - All the preceeding operators should have completed. It could have executed successfully or failed.
        /// 
        /// </value>
        ///
        public enum TriggerRuleEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ALL_SUCCESS")]
            AllSuccess,
            [EnumMember(Value = "ALL_FAILED")]
            AllFailed,
            [EnumMember(Value = "ALL_COMPLETE")]
            AllComplete
        };

        /// <value>
        /// The merge condition. The conditions are
        /// ALL_SUCCESS - All the preceeding operators need to be successful.
        /// ALL_FAILED - All the preceeding operators should have failed.
        /// ALL_COMPLETE - All the preceeding operators should have completed. It could have executed successfully or failed.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "triggerRule")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<TriggerRuleEnum> TriggerRule { get; set; }
        
        [JsonProperty(PropertyName = "configProviderDelegate")]
        public ConfigProvider ConfigProviderDelegate { get; set; }
        
        [JsonProperty(PropertyName = "modelType")]
        private readonly string modelType = "TASK_OPERATOR";
    }
}
