/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataintegrationService.Models
{
    /// <summary>
    /// The task lineage object provides information on the lineage information of a task after execution.
    /// </summary>
    public class TaskRunLineageDetails 
    {
        
        /// <value>
        /// The object key.
        /// </value>
        [JsonProperty(PropertyName = "key")]
        public string Key { get; set; }
        
        /// <value>
        /// The object type.
        /// </value>
        [JsonProperty(PropertyName = "modelType")]
        public string ModelType { get; set; }
        
        /// <value>
        /// The object's model version.
        /// </value>
        [JsonProperty(PropertyName = "modelVersion")]
        public string ModelVersion { get; set; }
        
        [JsonProperty(PropertyName = "parentRef")]
        public ParentReference ParentRef { get; set; }
        
        /// <value>
        /// Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
        /// </value>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// Detailed description for the object.
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The version of the object that is used to track changes in the object instance.
        /// </value>
        [JsonProperty(PropertyName = "objectVersion")]
        public System.Nullable<int> ObjectVersion { get; set; }
        
        /// <value>
        /// Task name
        /// </value>
        [JsonProperty(PropertyName = "taskName")]
        public string TaskName { get; set; }
        
        /// <value>
        /// Task name
        /// </value>
        [JsonProperty(PropertyName = "taskType")]
        public string TaskType { get; set; }
        
        /// <value>
        /// The object key.
        /// </value>
        [JsonProperty(PropertyName = "taskKey")]
        public string TaskKey { get; set; }
        
        /// <value>
        /// This value is used to track if lineage generation for a task is completed or not.
        /// </value>
        [JsonProperty(PropertyName = "isLineageGenCompleted")]
        public System.Nullable<bool> IsLineageGenCompleted { get; set; }
                ///
        /// <value>
        /// The status of the task run.
        /// </value>
        ///
        public enum TaskExecutionStatusEnum {
            [EnumMember(Value = "SUCCESS")]
            Success,
            [EnumMember(Value = "ERROR")]
            Error,
            [EnumMember(Value = "TERMINATED")]
            Terminated
        };

        /// <value>
        /// The status of the task run.
        /// </value>
        [JsonProperty(PropertyName = "taskExecutionStatus")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<TaskExecutionStatusEnum> TaskExecutionStatus { get; set; }
        
        [JsonProperty(PropertyName = "flow")]
        public DataFlow Flow { get; set; }
        
        [JsonProperty(PropertyName = "metadata")]
        public ObjectMetadata Metadata { get; set; }
        
    }
}
