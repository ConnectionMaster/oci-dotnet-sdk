/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataintegrationService.Models
{
    /// <summary>
    /// A `MaterializedCompositeType` represents a type that is composed of a list of sub-types, for example an `Address` type.   The sub-types can be simple `DataType` or other `CompositeType` objects. Typically, a `CompositeType` may represent an arbitrarily deep hierarchy of types.
    /// </summary>
    public class MaterializedCompositeType : BaseType
    {
        
        /// <value>
        /// An array of elements.
        /// </value>
        [JsonProperty(PropertyName = "elements")]
        public System.Collections.Generic.List<string> Elements { get; set; }
        
        /// <value>
        /// An array of path names corresponding to the elements.  The path names are used when referring to the field in an expression.
        /// </value>
        [JsonProperty(PropertyName = "pathNames")]
        public System.Collections.Generic.List<string> PathNames { get; set; }
        
        [JsonProperty(PropertyName = "configDefinition")]
        public ConfigDefinition ConfigDefinition { get; set; }
        
        [JsonProperty(PropertyName = "modelType")]
        private readonly string modelType = "MATERIALIZED_COMPOSITE_TYPE";
    }
}
