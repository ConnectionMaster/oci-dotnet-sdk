/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudbridgeService.Models
{
    /// <summary>
    /// AWS EBS volume related properties.
    /// </summary>
    public class AwsEbsProperties 
    {
        
        /// <value>
        /// Information about the volume attachments.
        /// </value>
        [JsonProperty(PropertyName = "attachments")]
        public System.Collections.Generic.List<VolumeAttachment> Attachments { get; set; }
        
        /// <value>
        /// The Availability Zone for the volume.
        /// </value>
        [JsonProperty(PropertyName = "availabilityZone")]
        public string AvailabilityZone { get; set; }
        
        /// <value>
        /// Indicates whether the volume is encrypted.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsEncrypted is required.")]
        [JsonProperty(PropertyName = "isEncrypted")]
        public System.Nullable<bool> IsEncrypted { get; set; }
        
        /// <value>
        /// The number of I/O operations per second.
        /// </value>
        [JsonProperty(PropertyName = "iops")]
        public System.Nullable<int> Iops { get; set; }
        
        /// <value>
        /// Indicates whether Amazon EBS Multi-Attach is enabled.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "IsMultiAttachEnabled is required.")]
        [JsonProperty(PropertyName = "isMultiAttachEnabled")]
        public System.Nullable<bool> IsMultiAttachEnabled { get; set; }
        
        /// <value>
        /// The size of the volume, in GiBs.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SizeInGiBs is required.")]
        [JsonProperty(PropertyName = "sizeInGiBs")]
        public System.Nullable<int> SizeInGiBs { get; set; }
        
        /// <value>
        /// The volume state.
        /// </value>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }
        
        /// <value>
        /// Any tags assigned to the volume.
        /// </value>
        [JsonProperty(PropertyName = "tags")]
        public System.Collections.Generic.List<Tag> Tags { get; set; }
        
        /// <value>
        /// The throughput that the volume supports, in MiB/s.
        /// </value>
        [JsonProperty(PropertyName = "throughput")]
        public System.Nullable<int> Throughput { get; set; }
        
        /// <value>
        /// The ID of the volume.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VolumeKey is required.")]
        [JsonProperty(PropertyName = "volumeKey")]
        public string VolumeKey { get; set; }
        
        /// <value>
        /// The volume type.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VolumeType is required.")]
        [JsonProperty(PropertyName = "volumeType")]
        public string VolumeType { get; set; }
        
    }
}
