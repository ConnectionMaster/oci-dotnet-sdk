/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ManagementdashboardService.Models
{
    /// <summary>
    /// Properties of the dashboard tile representing a saved search.  
    /// Tiles are laid out in a twelve column grid system with (0,0) at upper left corner.
    /// 
    /// </summary>
    public class ManagementDashboardTileDetails 
    {
        
        /// <value>
        /// Display name of the saved search.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// ID of the saved search.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SavedSearchId is required.")]
        [JsonProperty(PropertyName = "savedSearchId")]
        public string SavedSearchId { get; set; }
        
        /// <value>
        /// Tile's row number.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Row is required.")]
        [JsonProperty(PropertyName = "row")]
        public System.Nullable<int> Row { get; set; }
        
        /// <value>
        /// Tile's column number.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Column is required.")]
        [JsonProperty(PropertyName = "column")]
        public System.Nullable<int> Column { get; set; }
        
        /// <value>
        /// The number of rows the tile occupies.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Height is required.")]
        [JsonProperty(PropertyName = "height")]
        public System.Nullable<int> Height { get; set; }
        
        /// <value>
        /// The number of columns the tile occupies.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Width is required.")]
        [JsonProperty(PropertyName = "width")]
        public System.Nullable<int> Width { get; set; }
        
        /// <value>
        /// JSON that contains internationalization options.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Nls is required.")]
        [JsonProperty(PropertyName = "nls")]
        public System.Object Nls { get; set; }
        
        /// <value>
        /// JSON that contains user interface options.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UiConfig is required.")]
        [JsonProperty(PropertyName = "uiConfig")]
        public System.Object UiConfig { get; set; }
        
        /// <value>
        /// Array of JSON that contain data source options.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataConfig is required.")]
        [JsonProperty(PropertyName = "dataConfig")]
        public System.Collections.Generic.List<System.Object> DataConfig { get; set; }
                ///
        /// <value>
        /// Current state of the saved search.
        /// </value>
        ///
        public enum StateEnum {
            [EnumMember(Value = "DELETED")]
            Deleted,
            [EnumMember(Value = "UNAUTHORIZED")]
            Unauthorized,
            [EnumMember(Value = "DEFAULT")]
            Default
        };

        /// <value>
        /// Current state of the saved search.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "State is required.")]
        [JsonProperty(PropertyName = "state")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<StateEnum> State { get; set; }
        
        /// <value>
        /// Drill-down configuration to define the destination of a drill-down action.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DrilldownConfig is required.")]
        [JsonProperty(PropertyName = "drilldownConfig")]
        public System.Object DrilldownConfig { get; set; }
        
    }
}
