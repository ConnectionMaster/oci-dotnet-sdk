/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.HealthchecksService.Models
{
    /// <summary>
    /// Information about a vantage point.
    /// </summary>
    public class HealthChecksVantagePointSummary 
    {
        
        /// <value>
        /// The display name for the vantage point. Display names are determined by
        /// the best information available and may change over time.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The organization on whose infrastructure this vantage point resides.
        /// Provider names are not unique, as Oracle Cloud Infrastructure maintains
        /// many vantage points in each major provider.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "providerName")]
        public string ProviderName { get; set; }
        
        /// <value>
        /// The unique, permanent name for the vantage point.
        /// </value>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        [JsonProperty(PropertyName = "geo")]
        public Geolocation Geo { get; set; }
        
        /// <value>
        /// An array of objects that describe how traffic to this vantage point is
        /// routed, including which prefixes and ASNs connect it to the internet.
        /// <br/>
        /// The addresses are sorted from the most-specific to least-specific
        /// prefix (the smallest network to largest network). When a prefix has
        /// multiple origin ASNs (MOAS routing), they are sorted by weight
        /// (highest to lowest). Weight is determined by the total percentage of
        /// peers observing the prefix originating from an ASN. Only present if
        /// `fields` includes `routing`. The field will be null if the address's
        /// routing information is unknown.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "routing")]
        public System.Collections.Generic.List<Routing> Routing { get; set; }
        
    }
}
