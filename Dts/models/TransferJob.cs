/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DtsService.Models
{
    
    public class TransferJob 
    {
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        [JsonProperty(PropertyName = "uploadBucketName")]
        public string UploadBucketName { get; set; }
        
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }
        
        [JsonProperty(PropertyName = "creationTime")]
        public System.Nullable<System.DateTime> CreationTime { get; set; }
                ///
        ///
        public enum DeviceTypeEnum {
            [EnumMember(Value = "DISK")]
            Disk,
            [EnumMember(Value = "APPLIANCE")]
            Appliance
        };

        [JsonProperty(PropertyName = "deviceType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DeviceTypeEnum> DeviceType { get; set; }
                ///
        ///
        public enum LifecycleStateEnum {
            [EnumMember(Value = "INITIATED")]
            Initiated,
            [EnumMember(Value = "PREPARING")]
            Preparing,
            [EnumMember(Value = "ACTIVE")]
            Active,
            [EnumMember(Value = "DELETED")]
            Deleted,
            [EnumMember(Value = "CLOSED")]
            Closed
        };

        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// Transfer Appliance labels associated with this transfer Job
        /// </value>
        [JsonProperty(PropertyName = "attachedTransferApplianceLabels")]
        public System.Collections.Generic.List<string> AttachedTransferApplianceLabels { get; set; }
        
        /// <value>
        /// Transfer Package labels associated with this transfer Job
        /// </value>
        [JsonProperty(PropertyName = "attachedTransferPackageLabels")]
        public System.Collections.Generic.List<string> AttachedTransferPackageLabels { get; set; }
        
        /// <value>
        /// Transfer Device labels associated with this transfer Job
        /// </value>
        [JsonProperty(PropertyName = "attachedTransferDeviceLabels")]
        public System.Collections.Generic.List<string> AttachedTransferDeviceLabels { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no
        /// predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a
        /// namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
