/*
 * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ObjectstorageService.Models
{
    /// <summary>
    /// To use any of the API operations, you must be authorized in an IAM policy. If you are not authorized,
    /// talk to an administrator. If you are an administrator who needs to write policies to give users access, see
    /// [Getting Started with Policies](https://docs.cloud.oracle.com/Content/Identity/Concepts/policygetstarted.htm).
    /// 
    /// </summary>
    public class CreateMultipartUploadDetails 
    {
        
        /// <value>
        /// The name of the object to which this multi-part upload is targeted. Avoid entering confidential information.
        /// Example: test/object1.log
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Object is required.")]
        [JsonProperty(PropertyName = "object")]
        public string Object { get; set; }
        
        /// <value>
        /// The optional Content-Type header that defines the standard MIME type format of the object to upload.
        /// Specifying values for this header has no effect on Object Storage behavior. Programs that read the object
        /// determine what to do based on the value provided. For example, you could use this header to identify and
        /// perform special operations on text only objects. 
        /// 
        /// </value>
        [JsonProperty(PropertyName = "contentType")]
        public string ContentType { get; set; }
        
        /// <value>
        /// The optional Content-Language header that defines the content language of the object to upload. Specifying
        /// values for this header has no effect on Object Storage behavior. Programs that read the object determine what
        /// to do based on the value provided. For example, you could use this header to identify and differentiate objects
        /// based on a particular language.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "contentLanguage")]
        public string ContentLanguage { get; set; }
        
        /// <value>
        /// The optional Content-Encoding header that defines the content encodings that were applied to the object to
        /// upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the
        /// object determine what to do based on the value provided. For example, you could use this header to determine
        /// what decoding mechanisms need to be applied to obtain the media-type specified by the Content-Type header of
        /// the object.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "contentEncoding")]
        public string ContentEncoding { get; set; }
        
        /// <value>
        /// The optional Content-Disposition header that defines presentational information for the object to be
        /// returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object
        /// Storage behavior. Programs that read the object determine what to do based on the value provided.
        /// For example, you could use this header to let users download objects with custom filenames in a browser.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "contentDisposition")]
        public string ContentDisposition { get; set; }
        
        /// <value>
        /// The optional Cache-Control header that defines the caching behavior value to be returned in GetObject and
        /// HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs
        /// that read the object determine what to do based on the value provided.
        /// For example, you could use this header to identify objects that require caching restrictions.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "cacheControl")]
        public string CacheControl { get; set; }
        
        /// <value>
        /// Arbitrary string keys and values for the user-defined metadata for the object.
        /// Keys must be in \"opc-meta-*\" format. Avoid entering confidential information.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "metadata")]
        public System.Collections.Generic.Dictionary<string, string> Metadata { get; set; }
        
    }
}
