/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ObjectstorageService.Models
{
    /// <summary>
    /// To change the storage tier of an object, we specify the object name and the desired
    /// storage tier in the body. Objects can be moved between Standard and InfrequentAccess
    /// tiers and from Standard or InfrequentAccess tier to Archive tier. If a version id is
    /// specified, only the specified version of the object is moved to a different storage
    /// tier, else the current version is used.
    /// 
    /// </summary>
    public class UpdateObjectStorageTierDetails 
    {
        
        /// <value>
        /// An object for which the storage tier needs to be changed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ObjectName is required.")]
        [JsonProperty(PropertyName = "objectName")]
        public string ObjectName { get; set; }
        
        /// <value>
        /// The storage tier that the object should be moved to.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "StorageTier is required.")]
        [JsonProperty(PropertyName = "storageTier")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<StorageTier> StorageTier { get; set; }
        
        /// <value>
        /// The versionId of the object. Current object version is used by default.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "versionId")]
        public string VersionId { get; set; }
        
    }
}
