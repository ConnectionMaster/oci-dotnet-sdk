/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudguardService.Models
{
    /// <summary>
    /// Configuration details for a detector.
    /// </summary>
    public class DetectorConfiguration 
    {
        
        /// <value>
        /// Unique identifier of the configuration
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ConfigKey is required.")]
        [JsonProperty(PropertyName = "configKey")]
        public string ConfigKey { get; set; }
        
        /// <value>
        /// Configuration name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Name is required.")]
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }
        
        /// <value>
        /// Configuration value
        /// </value>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }
        
        /// <value>
        /// Configuration data type
        /// </value>
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; set; }
        
        /// <value>
        /// List of configuration values
        /// </value>
        [JsonProperty(PropertyName = "values")]
        public System.Collections.Generic.List<ConfigValue> Values { get; set; }
        
        /// <value>
        /// Map property Value data type
        /// </value>
        [JsonProperty(PropertyName = "allowedValuesDataType")]
        public string AllowedValuesDataType { get; set; }
        
        /// <value>
        /// Map of possible values for configuration
        /// </value>
        [JsonProperty(PropertyName = "allowedValues")]
        public System.Collections.Generic.List<PropertyTuple> AllowedValues { get; set; }
        
    }
}
