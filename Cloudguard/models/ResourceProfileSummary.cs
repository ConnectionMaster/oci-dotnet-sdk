/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudguardService.Models
{
    /// <summary>
    /// Summary information for a resource profile.
    /// </summary>
    public class ResourceProfileSummary 
    {
        
        /// <value>
        /// Number of sightings associated with the resource profile
        /// </value>
        [JsonProperty(PropertyName = "sightingsCount")]
        public System.Nullable<int> SightingsCount { get; set; }
        
        /// <value>
        /// Unique identifier for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// Unique identifier for the resource associated with the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceId is required.")]
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// Display name for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Resource type for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }
        
        /// <value>
        /// Risk score for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RiskScore is required.")]
        [JsonProperty(PropertyName = "riskScore")]
        public System.Double RiskScore { get; set; }
        
        /// <value>
        /// List of tactic summaries associated with the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Tactics is required.")]
        [JsonProperty(PropertyName = "tactics")]
        public System.Collections.Generic.List<TacticSummary> Tactics { get; set; }
        
        /// <value>
        /// The date and time the resource profile was first detected. Format defined by RFC3339.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeFirstDetected is required.")]
        [JsonProperty(PropertyName = "timeFirstDetected")]
        public System.Nullable<System.DateTime> TimeFirstDetected { get; set; }
        
        /// <value>
        /// The date and time the resource profile was last detected. Format defined by RFC3339.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeLastDetected is required.")]
        [JsonProperty(PropertyName = "timeLastDetected")]
        public System.Nullable<System.DateTime> TimeLastDetected { get; set; }
        
        /// <value>
        /// Number of problems associated with this resource profile
        /// </value>
        [JsonProperty(PropertyName = "problemsCount")]
        public System.Nullable<int> ProblemsCount { get; set; }
        
    }
}
