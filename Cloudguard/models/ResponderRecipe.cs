/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudguardService.Models
{
    /// <summary>
    /// A ResponderRecipe resource contains a specific instance of one of
    /// the supported detector types (for example, activity, configuration,
    /// or threat).
    /// <br/>
    /// A ResponderRecipe resource:
    /// * Is effectively a copy of a Responder resource in which users can make
    /// very limited changes if it\u2019s Oracle-managed, and more changes if it\u2019s user-managed.
    /// * Can also be created by cloning an existing ResponderRecipe resource, either
    /// user-managed or Oracle-managed.
    /// * Is visible on Cloud Guard\u2019s Responder Recipes page.
    /// * Is located in a specific OCI compartment.
    /// * Can be modified by users, programmatically or through the UI.
    /// * Changes that can be made here apply globally, to resources in all OCI compartments
    /// mapped to a target that attaches the responder recipe, but are overridden by
    /// any changes made in the corresponding TargetResponderRecipe resource (effectively
    /// created when the responder recipe is attached to the target).
    /// 
    /// </summary>
    public class ResponderRecipe 
    {
        
        /// <value>
        /// Unique identifier for the responder recip
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// Responder recipe display name
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Responder recipe description
        /// </value>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// Owner of responder recipe
        /// </value>
        [JsonProperty(PropertyName = "owner")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<OwnerType> Owner { get; set; }
        
        /// <value>
        /// List of responder rules associated with the recipe
        /// </value>
        [JsonProperty(PropertyName = "responderRules")]
        public System.Collections.Generic.List<ResponderRecipeResponderRule> ResponderRules { get; set; }
        
        /// <value>
        /// List of currently enabled responder rules for the responder type, for recipe after applying defaults
        /// </value>
        [JsonProperty(PropertyName = "effectiveResponderRules")]
        public System.Collections.Generic.List<ResponderRecipeResponderRule> EffectiveResponderRules { get; set; }
        
        /// <value>
        /// The unique identifier of the source responder recipe
        /// </value>
        [JsonProperty(PropertyName = "sourceResponderRecipeId")]
        public string SourceResponderRecipeId { get; set; }
        
        /// <value>
        /// Compartment OCID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The date and time the responder recipe was created. Format defined by RFC3339.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The date and time the responder recipe was last updated. Format defined by RFC3339.
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The current lifecycle state of the example
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleState> LifecycleState { get; set; }
        
        /// <value>
        /// A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}Avoid entering confidential information.
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// System tags can be viewed by users, but can only be created by the system.
        /// <br/>
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
