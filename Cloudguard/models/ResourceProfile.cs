/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudguardService.Models
{
    /// <summary>
    /// Resource profile details.
    /// </summary>
    public class ResourceProfile 
    {
        
        /// <value>
        /// Number of sightings associated with the resource profile
        /// </value>
        [JsonProperty(PropertyName = "sightingsCount")]
        public System.Nullable<int> SightingsCount { get; set; }
        
        /// <value>
        /// Unique identifier for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// Unique identifier for the resource associated with the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceId is required.")]
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// Display name for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// Resource type for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Type is required.")]
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }
        
        /// <value>
        /// List of problems IDs associated with the resource profile
        /// </value>
        [JsonProperty(PropertyName = "problemIds")]
        public System.Collections.Generic.List<string> ProblemIds { get; set; }
        
        /// <value>
        /// Compartment OCID for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// Unique target ID for the resource profile
        /// </value>
        [JsonProperty(PropertyName = "targetId")]
        public string TargetId { get; set; }
        
        /// <value>
        /// Risk score for the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "RiskScore is required.")]
        [JsonProperty(PropertyName = "riskScore")]
        public System.Double RiskScore { get; set; }
        
        /// <value>
        /// Risk level associated with resource profile
        /// </value>
        [JsonProperty(PropertyName = "riskLevel")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<RiskLevel> RiskLevel { get; set; }
        
        /// <value>
        /// Peak risk score for the resource profile
        /// </value>
        [JsonProperty(PropertyName = "peakRiskScore")]
        public System.Double PeakRiskScore { get; set; }
        
        /// <value>
        /// The date and time for the peak risk score. Format defined by RFC3339.
        /// </value>
        [JsonProperty(PropertyName = "timePeakScore")]
        public System.Nullable<System.DateTime> TimePeakScore { get; set; }
        
        /// <value>
        /// Time the activities were first detected. Format defined by RFC3339.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeFirstDetected is required.")]
        [JsonProperty(PropertyName = "timeFirstDetected")]
        public System.Nullable<System.DateTime> TimeFirstDetected { get; set; }
        
        /// <value>
        /// Time the activities were last detected. Format defined by RFC3339.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeLastDetected is required.")]
        [JsonProperty(PropertyName = "timeLastDetected")]
        public System.Nullable<System.DateTime> TimeLastDetected { get; set; }
        
        /// <value>
        /// Time the activities were first performed. Format defined by RFC3339.
        /// </value>
        [JsonProperty(PropertyName = "timeFirstOccurred")]
        public System.Nullable<System.DateTime> TimeFirstOccurred { get; set; }
        
        /// <value>
        /// Time the activities were last performed. Format defined by RFC3339.
        /// </value>
        [JsonProperty(PropertyName = "timeLastOccurred")]
        public System.Nullable<System.DateTime> TimeLastOccurred { get; set; }
        
        /// <value>
        /// List of tactic summaries associated with the resource profile
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Tactics is required.")]
        [JsonProperty(PropertyName = "tactics")]
        public System.Collections.Generic.List<TacticSummary> Tactics { get; set; }
        
        /// <value>
        /// Locks associated with this resource.
        /// </value>
        [JsonProperty(PropertyName = "locks")]
        public System.Collections.Generic.List<ResourceLock> Locks { get; set; }
        
    }
}
