/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.CloudguardService.Models
{
    /// <summary>
    /// The information about Event details of DataSource.
    /// </summary>
    public class DataSourceEventSummary 
    {
        
        /// <value>
        /// Data source event region
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Region is required.")]
        [JsonProperty(PropertyName = "region")]
        public string Region { get; set; }
        
        /// <value>
        /// Data source event date time
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EventDate is required.")]
        [JsonProperty(PropertyName = "eventDate")]
        public System.Nullable<System.DateTime> EventDate { get; set; }
        
        /// <value>
        /// Attached data Source
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DataSourceId is required.")]
        [JsonProperty(PropertyName = "dataSourceId")]
        public string DataSourceId { get; set; }
        
        /// <value>
        /// Data source event created time
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// Current data source event info status
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DataSourceEventInfoStatus> Status { get; set; }
        
        /// <value>
        /// Data source event comments
        /// </value>
        [JsonProperty(PropertyName = "comments")]
        public string Comments { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EventInfo is required.")]
        [JsonProperty(PropertyName = "eventInfo")]
        public DataSourceEventInfo EventInfo { get; set; }
        
    }
}
