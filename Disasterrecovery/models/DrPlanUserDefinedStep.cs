/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;

namespace Oci.DisasterrecoveryService.Models
{
    /// <summary>
    /// The details for a user-defined step in a DR plan.
    /// </summary>
    [JsonConverter(typeof(DrPlanUserDefinedStepModelConverter))]
    public class DrPlanUserDefinedStep 
    {
                ///
        /// <value>
        /// The type of the user-defined step.
        /// <br/>
        ///   **RUN_OBJECTSTORE_SCRIPT_PRECHECK** - A step which performs a precheck on a script stored
        ///     in OCI object storage.
        /// <br/>
        ///   **RUN_LOCAL_SCRIPT_PRECHECK** - A step which performs a precheck on a script which resides
        ///     locally on a compute instance.
        /// <br/>
        ///   **INVOKE_FUNCTION_PRECHECK** - A step which performs a precheck on an OCI function.
        ///     See https://docs.oracle.com/en-us/iaas/Content/Functions/home.htm.
        /// <br/>
        ///   **RUN_OBJECTSTORE_SCRIPT** - A step which runs a script stored in OCI object storage.
        /// <br/>
        ///   **RUN_LOCAL_SCRIPT** - A step which runs a script that resides locally on a compute instance.
        /// <br/>
        ///   **INVOKE_FUNCTION** - A step which invokes an OCI function.
        ///     See https://docs.oracle.com/en-us/iaas/Content/Functions/home.htm.
        /// 
        /// </value>
        ///
        public enum StepTypeEnum {
            [EnumMember(Value = "RUN_OBJECTSTORE_SCRIPT_PRECHECK")]
            RunObjectstoreScriptPrecheck,
            [EnumMember(Value = "RUN_LOCAL_SCRIPT_PRECHECK")]
            RunLocalScriptPrecheck,
            [EnumMember(Value = "INVOKE_FUNCTION_PRECHECK")]
            InvokeFunctionPrecheck,
            [EnumMember(Value = "RUN_OBJECTSTORE_SCRIPT")]
            RunObjectstoreScript,
            [EnumMember(Value = "RUN_LOCAL_SCRIPT")]
            RunLocalScript,
            [EnumMember(Value = "INVOKE_FUNCTION")]
            InvokeFunction
        };

        
    }

    public class DrPlanUserDefinedStepModelConverter : JsonConverter
    {
        private static NLog.Logger logger = NLog.LogManager.GetCurrentClassLogger();
        public override bool CanWrite => false;
        public override bool CanRead => true;
        public override bool CanConvert(System.Type type)
        {
            return type == typeof(DrPlanUserDefinedStep);
        }
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            throw new System.InvalidOperationException("Use default serialization.");
        }

        public override object ReadJson(JsonReader reader, System.Type objectType, object existingValue, JsonSerializer serializer)
        {
            var jsonObject = JObject.Load(reader);
            var obj = default(DrPlanUserDefinedStep);
            var discriminator = jsonObject["stepType"].Value<string>();
            switch (discriminator)
            {
                case "INVOKE_FUNCTION":
                    obj = new InvokeFunctionStep();
                    break;
                case "INVOKE_FUNCTION_PRECHECK":
                    obj = new InvokeFunctionPrecheckStep();
                    break;
                case "RUN_LOCAL_SCRIPT":
                    obj = new RunLocalScriptUserDefinedStep();
                    break;
                case "RUN_LOCAL_SCRIPT_PRECHECK":
                    obj = new LocalScriptPrecheckStep();
                    break;
                case "RUN_OBJECTSTORE_SCRIPT_PRECHECK":
                    obj = new ObjectStoreScriptPrecheckStep();
                    break;
                case "RUN_OBJECTSTORE_SCRIPT":
                    obj = new RunObjectStoreScriptUserDefinedStep();
                    break;
            }
            if (obj != null)
            {
                serializer.Populate(jsonObject.CreateReader(), obj);
            }
            else
            {
                logger.Warn($"The type {discriminator} is not present under DrPlanUserDefinedStep! Returning null value.");
            }
            return obj;
        }
    }
}
