/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DisasterrecoveryService.Models
{
    /// <summary>
    /// The OCID of a vault and customer-managed encryption key in the destination region. 
    /// <br/>
    /// The customer-managed encryption key in this will be used to encrypt all the volumes of the volume group after they move to the destination region. 
    /// If you specify this common vault and encryption key, you cannot specify vaults and encryption keys individually for each volume 
    /// using 'sourceVolumeToDestinationEncryptionKeyMappings'.
    /// <br/>
    /// The customer-managed encryption key in this will be used to encrypt the file system when it move to the destination region.
    /// 
    /// </summary>
    public class VaultAndEncryptionKey 
    {
        
        /// <value>
        /// The OCID of the destination region vault for the customer-managed encryption key.
        /// <br/>
        /// Example: ocid1.vault.oc1..uniqueID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "VaultId is required.")]
        [JsonProperty(PropertyName = "vaultId")]
        public string VaultId { get; set; }
        
        /// <value>
        /// The OCID of the customer-managed encryption key in the destination region vault.
        /// <br/>
        /// Example: ocid1.key.oc1..uniqueID
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EncryptionKeyId is required.")]
        [JsonProperty(PropertyName = "encryptionKeyId")]
        public string EncryptionKeyId { get; set; }
        
    }
}
