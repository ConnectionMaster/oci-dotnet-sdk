/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DisasterrecoveryService.Models
{
    /// <summary>
    /// Update properties for an OKE member.
    /// </summary>
    public class UpdateDrProtectionGroupMemberOkeClusterDetails : UpdateDrProtectionGroupMemberDetails
    {
        
        /// <value>
        /// The OCID of the peer OKE cluster.
        /// This property applies to the OKE cluster member in both the primary and standby region.
        /// <br/>
        /// Example: ocid1.cluster.oc1..uniqueID
        /// </value>
        [JsonProperty(PropertyName = "peerClusterId")]
        public string PeerClusterId { get; set; }
        
        /// <value>
        /// The OCID of the compute instance member that is designated as a jump host.
        /// This compute instance will be used to perform DR operations on the cluster using Oracle Cloud Agent's Run Command feature.
        /// <br/>
        /// Example: ocid1.instance.oc1..uniqueID
        /// </value>
        [JsonProperty(PropertyName = "jumpHostId")]
        public string JumpHostId { get; set; }
        
        [JsonProperty(PropertyName = "backupLocation")]
        public UpdateOkeBackupLocationDetails BackupLocation { get; set; }
        
        [JsonProperty(PropertyName = "backupConfig")]
        public UpdateOkeClusterBackupConfigDetails BackupConfig { get; set; }
        
        /// <value>
        /// The list of source-to-destination load balancer mappings required for DR operations.
        /// This property applies to the OKE cluster member in primary region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "loadBalancerMappings")]
        public System.Collections.Generic.List<UpdateOkeClusterLoadBalancerMappingDetails> LoadBalancerMappings { get; set; }
        
        /// <value>
        /// The list of source-to-destination network load balancer mappings required for DR operations.
        /// This property applies to the OKE cluster member in primary region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "networkLoadBalancerMappings")]
        public System.Collections.Generic.List<UpdateOkeClusterNetworkLoadBalancerMappingDetails> NetworkLoadBalancerMappings { get; set; }
        
        /// <value>
        /// The list of source-to-destination vault mappings required for DR operations.
        /// This property applies to the OKE cluster member in primary region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "vaultMappings")]
        public System.Collections.Generic.List<UpdateOkeClusterVaultMappingDetails> VaultMappings { get; set; }
        
        /// <value>
        /// The list of managed node pools with configurations for minimum and maximum node counts.
        /// This property applies to the OKE cluster member in both the primary and standby region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "managedNodePoolConfigs")]
        public System.Collections.Generic.List<UpdateOkeClusterManagedNodePoolConfigurationDetails> ManagedNodePoolConfigs { get; set; }
        
        /// <value>
        /// The list of virtual node pools with configurations for minimum and maximum node counts.
        /// This property applies to the OKE cluster member in both the primary and standby region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "virtualNodePoolConfigs")]
        public System.Collections.Generic.List<UpdateOkeClusterVirtualNodePoolConfigurationDetails> VirtualNodePoolConfigs { get; set; }
        
        [JsonProperty(PropertyName = "memberType")]
        private readonly string memberType = "OKE_CLUSTER";
    }
}
