/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DisasterrecoveryService.Models
{
    /// <summary>
    /// Update properties for a file system member.
    /// </summary>
    public class UpdateDrProtectionGroupMemberFileSystemDetails : UpdateDrProtectionGroupMemberDetails
    {
        
        /// <value>
        /// The availability domain of the destination mount target.
        /// <br/>
        /// Example: BBTh:region-AD
        /// </value>
        [JsonProperty(PropertyName = "destinationAvailabilityDomain")]
        public string DestinationAvailabilityDomain { get; set; }
        
        /// <value>
        /// A list of mappings between file system exports in the primary region and mount targets in the standby region.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "exportMappings")]
        public System.Collections.Generic.List<FileSystemExportMappingDetails> ExportMappings { get; set; }
        
        [JsonProperty(PropertyName = "destinationEncryptionKey")]
        public UpdateVaultAndEncryptionKeyDetails DestinationEncryptionKey { get; set; }
        
        /// <value>
        /// The OCID of the snapshot policy to use in the destination region. This policy will be attached to the file system after it moves to the destination region.
        /// <br/>
        /// Example: ocid1.filesystemsnapshotpolicy.oc1..uniqueID
        /// </value>
        [JsonProperty(PropertyName = "destinationSnapshotPolicyId")]
        public string DestinationSnapshotPolicyId { get; set; }
        
        /// <value>
        /// The OCID of a compartment in the destination region in which the file system should be launched.
        /// <br/>
        /// Example: ocid1.compartment.oc1..uniqueID
        /// </value>
        [JsonProperty(PropertyName = "destinationCompartmentId")]
        public string DestinationCompartmentId { get; set; }
        
        [JsonProperty(PropertyName = "memberType")]
        private readonly string memberType = "FILE_SYSTEM";
    }
}
