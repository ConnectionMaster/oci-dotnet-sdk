/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpsiService.Models
{
    /// <summary>
    /// The information about the news report to be updated.
    /// </summary>
    public class UpdateNewsReportDetails 
    {
        
        /// <value>
        /// Defines if the news report will be enabled or disabled.
        /// </value>
        [JsonProperty(PropertyName = "status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<ResourceStatus> Status { get; set; }
        
        /// <value>
        /// News report frequency.
        /// </value>
        [JsonProperty(PropertyName = "newsFrequency")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<NewsFrequency> NewsFrequency { get; set; }
        
        /// <value>
        /// Language of the news report.
        /// </value>
        [JsonProperty(PropertyName = "locale")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<NewsLocale> Locale { get; set; }
        
        [JsonProperty(PropertyName = "contentTypes")]
        public NewsContentTypes ContentTypes { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ONS topic.
        /// </value>
        [JsonProperty(PropertyName = "onsTopicId")]
        public string OnsTopicId { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
    }
}
