/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpsiService.Models
{
    /// <summary>
    /// The information about database to be analyzed. Either an opsiPrivateEndpointId or dbmPrivateEndpointId must be specified. If the dbmPrivateEndpointId is specified, a new Operations Insights private endpoint will be created.
    /// </summary>
    public class CreatePeComanagedDatabaseInsightDetails : CreateDatabaseInsightDetails
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseId is required.")]
        [JsonProperty(PropertyName = "databaseId")]
        public string DatabaseId { get; set; }
        
        /// <value>
        /// OCI database resource type
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DatabaseResourceType is required.")]
        [JsonProperty(PropertyName = "databaseResourceType")]
        public string DatabaseResourceType { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
        /// </value>
        [JsonProperty(PropertyName = "opsiPrivateEndpointId")]
        public string OpsiPrivateEndpointId { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Management private endpoint
        /// </value>
        [JsonProperty(PropertyName = "dbmPrivateEndpointId")]
        public string DbmPrivateEndpointId { get; set; }
        
        /// <value>
        /// Database service name used for connection requests.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ServiceName is required.")]
        [JsonProperty(PropertyName = "serviceName")]
        public string ServiceName { get; set; }
        
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CredentialDetails is required.")]
        [JsonProperty(PropertyName = "credentialDetails")]
        public CredentialDetails CredentialDetails { get; set; }
        
        [JsonProperty(PropertyName = "connectionDetails")]
        public PeComanagedDatabaseConnectionDetails ConnectionDetails { get; set; }
                ///
        /// <value>
        /// Database Deployment Type
        /// </value>
        ///
        public enum DeploymentTypeEnum {
            [EnumMember(Value = "VIRTUAL_MACHINE")]
            VirtualMachine,
            [EnumMember(Value = "BARE_METAL")]
            BareMetal,
            [EnumMember(Value = "EXACS")]
            Exacs
        };

        /// <value>
        /// Database Deployment Type
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DeploymentType is required.")]
        [JsonProperty(PropertyName = "deploymentType")]
        [JsonConverter(typeof(StringEnumConverter))]
        public System.Nullable<DeploymentTypeEnum> DeploymentType { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
        [JsonProperty(PropertyName = "entitySource")]
        private readonly string entitySource = "PE_COMANAGED_DATABASE";
    }
}
