/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpsiService.Models
{
    /// <summary>
    /// Usage data for IO interface per usage unit.
    /// </summary>
    public class IoUsageTrend 
    {
        
        /// <value>
        /// The timestamp in which the current sampling period ends in RFC 3339 format.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "EndTimestamp is required.")]
        [JsonProperty(PropertyName = "endTimestamp")]
        public System.Nullable<System.DateTime> EndTimestamp { get; set; }
        
        /// <value>
        /// MBs Read.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DiskBytesReadInMBs is required.")]
        [JsonProperty(PropertyName = "diskBytesReadInMBs")]
        public System.Double DiskBytesReadInMBs { get; set; }
        
        /// <value>
        /// MBs Written.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DiskBytesWrittenInMBs is required.")]
        [JsonProperty(PropertyName = "diskBytesWrittenInMBs")]
        public System.Double DiskBytesWrittenInMBs { get; set; }
        
        /// <value>
        /// Read IO operations per second.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DiskIopsRead is required.")]
        [JsonProperty(PropertyName = "diskIopsRead")]
        public System.Double DiskIopsRead { get; set; }
        
        /// <value>
        /// Write IO operations per second.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DiskIopsWritten is required.")]
        [JsonProperty(PropertyName = "diskIopsWritten")]
        public System.Double DiskIopsWritten { get; set; }
        
        /// <value>
        /// IO operations per second.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DiskIops is required.")]
        [JsonProperty(PropertyName = "diskIops")]
        public System.Double DiskIops { get; set; }
        
    }
}
