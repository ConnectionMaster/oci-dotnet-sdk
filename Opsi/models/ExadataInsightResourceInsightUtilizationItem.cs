/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpsiService.Models
{
    /// <summary>
    /// Object containing current utilization, projected utilization, id and daysToReach high and low utilization value.
    /// </summary>
    public class ExadataInsightResourceInsightUtilizationItem 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ExadataInsightId is required.")]
        [JsonProperty(PropertyName = "exadataInsightId")]
        public string ExadataInsightId { get; set; }
        
        /// <value>
        /// The user-friendly name for the Exadata system. The name does not have to be unique.
        /// </value>
        [JsonProperty(PropertyName = "exadataDisplayName")]
        public string ExadataDisplayName { get; set; }
        
        /// <value>
        /// Current utilization
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CurrentUtilization is required.")]
        [JsonProperty(PropertyName = "currentUtilization")]
        public System.Double CurrentUtilization { get; set; }
        
        /// <value>
        /// Projected utilization
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ProjectedUtilization is required.")]
        [JsonProperty(PropertyName = "projectedUtilization")]
        public System.Double ProjectedUtilization { get; set; }
        
        /// <value>
        /// Days to reach projected high utilization
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DaysToReachHighUtilization is required.")]
        [JsonProperty(PropertyName = "daysToReachHighUtilization")]
        public System.Nullable<int> DaysToReachHighUtilization { get; set; }
        
        /// <value>
        /// Days to reach projected low utilization
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DaysToReachLowUtilization is required.")]
        [JsonProperty(PropertyName = "daysToReachLowUtilization")]
        public System.Nullable<int> DaysToReachLowUtilization { get; set; }
        
    }
}
