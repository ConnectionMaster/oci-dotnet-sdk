/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.OpsiService.Models
{
    /// <summary>
    /// GPU configuration metrics
    /// 
    /// </summary>
    public class HostGpuConfiguration : HostConfigurationMetricGroup
    {
        
        /// <value>
        /// GPU Identifier
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "GpuId is required.")]
        [JsonProperty(PropertyName = "gpuId")]
        public System.Nullable<int> GpuId { get; set; }
        
        /// <value>
        /// GPU Product Name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ProductName is required.")]
        [JsonProperty(PropertyName = "productName")]
        public string ProductName { get; set; }
        
        /// <value>
        /// GPU Vendor
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Vendor is required.")]
        [JsonProperty(PropertyName = "vendor")]
        public string Vendor { get; set; }
        
        /// <value>
        /// Bus Identifier
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BusId is required.")]
        [JsonProperty(PropertyName = "busId")]
        public string BusId { get; set; }
        
        /// <value>
        /// Bus Width
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BusWidth is required.")]
        [JsonProperty(PropertyName = "busWidth")]
        public System.Nullable<int> BusWidth { get; set; }
        
        /// <value>
        /// GPU Capabilities
        /// </value>
        [JsonProperty(PropertyName = "gpuCapabilities")]
        public string GpuCapabilities { get; set; }
        
        /// <value>
        /// Power Capacity
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalPower is required.")]
        [JsonProperty(PropertyName = "totalPower")]
        public System.Double TotalPower { get; set; }
        
        /// <value>
        /// Total Memory Allocated to GPU
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalMemory is required.")]
        [JsonProperty(PropertyName = "totalMemory")]
        public System.Double TotalMemory { get; set; }
        
        /// <value>
        /// Max Video Clock Speed
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalVideoClockSpeed is required.")]
        [JsonProperty(PropertyName = "totalVideoClockSpeed")]
        public System.Double TotalVideoClockSpeed { get; set; }
        
        /// <value>
        /// Max SM (Streaming Multiprocessor) Clock Speed
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalSmClockSpeed is required.")]
        [JsonProperty(PropertyName = "totalSmClockSpeed")]
        public System.Double TotalSmClockSpeed { get; set; }
        
        /// <value>
        /// Max Graphics Clock Speed
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalGraphicsClockSpeed is required.")]
        [JsonProperty(PropertyName = "totalGraphicsClockSpeed")]
        public System.Double TotalGraphicsClockSpeed { get; set; }
        
        /// <value>
        /// Max Memory Clock Speed
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TotalMemoryClockSpeed is required.")]
        [JsonProperty(PropertyName = "totalMemoryClockSpeed")]
        public System.Double TotalMemoryClockSpeed { get; set; }
        
        /// <value>
        /// CUDA library version
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CudaVersion is required.")]
        [JsonProperty(PropertyName = "cudaVersion")]
        public string CudaVersion { get; set; }
        
        /// <value>
        /// GPU Driver version
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DriverVersion is required.")]
        [JsonProperty(PropertyName = "driverVersion")]
        public string DriverVersion { get; set; }
        
        [JsonProperty(PropertyName = "metricName")]
        private readonly string metricName = "HOST_GPU_CONFIGURATION";
    }
}
