/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ManagementagentService.Models
{
    /// <summary>
    /// The information about the current management agent plugins that agent is having.
    /// </summary>
    public class ManagementAgentPluginDetails 
    {
        
        /// <value>
        /// Plugin Id
        /// </value>
        [JsonProperty(PropertyName = "pluginId")]
        public string PluginId { get; set; }
        
        /// <value>
        /// Management Agent Plugin Name
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PluginName is required.")]
        [JsonProperty(PropertyName = "pluginName")]
        public string PluginName { get; set; }
        
        /// <value>
        /// Management Agent Plugin Identifier, can be renamed
        /// </value>
        [JsonProperty(PropertyName = "pluginDisplayName")]
        public string PluginDisplayName { get; set; }
        
        /// <value>
        /// Plugin Version
        /// </value>
        [JsonProperty(PropertyName = "pluginVersion")]
        public string PluginVersion { get; set; }
        
        /// <value>
        /// Plugin Status
        /// </value>
        [JsonProperty(PropertyName = "pluginStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PluginStatus> PluginStatus { get; set; }
        
        /// <value>
        /// Status message of the Plugin
        /// </value>
        [JsonProperty(PropertyName = "pluginStatusMessage")]
        public string PluginStatusMessage { get; set; }
        
        /// <value>
        /// flag indicating whether the plugin is in enabled mode or disabled mode.
        /// </value>
        [JsonProperty(PropertyName = "isEnabled")]
        public System.Nullable<bool> IsEnabled { get; set; }
        
    }
}
