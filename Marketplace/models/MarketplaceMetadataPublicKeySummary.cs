/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.MarketplaceService.Models
{
    /// <summary>
    /// Model that contains signed marketplace instance metadata and associated signature in JWT form
    /// </summary>
    public class MarketplaceMetadataPublicKeySummary 
    {
        
        /// <value>
        /// algorithm for public key (i.e. RS256)
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyAlgorithm is required.")]
        [JsonProperty(PropertyName = "keyAlgorithm")]
        public string KeyAlgorithm { get; set; }
        
        /// <value>
        /// key type (i.e. RSA)
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyType is required.")]
        [JsonProperty(PropertyName = "keyType")]
        public string KeyType { get; set; }
        
        /// <value>
        /// how key is to be used
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyUse is required.")]
        [JsonProperty(PropertyName = "keyUse")]
        public string KeyUse { get; set; }
        
        /// <value>
        /// unique id that maps to public certificate, directs user which certificate to use to verfiy
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "KeyId is required.")]
        [JsonProperty(PropertyName = "keyId")]
        public string KeyId { get; set; }
        
        /// <value>
        /// base64 encoded exponent for public key
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Exponent is required.")]
        [JsonProperty(PropertyName = "exponent")]
        public string Exponent { get; set; }
        
        /// <value>
        /// RSA public modulus
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Modulus is required.")]
        [JsonProperty(PropertyName = "modulus")]
        public string Modulus { get; set; }
        
        /// <value>
        /// chain of certificates used to sign JWT
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CertificateChain is required.")]
        [JsonProperty(PropertyName = "certificateChain")]
        public System.Collections.Generic.List<string> CertificateChain { get; set; }
        
        /// <value>
        /// unique identifier of associated X509 certificate
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CertificateThumbprint is required.")]
        [JsonProperty(PropertyName = "certificateThumbprint")]
        public string CertificateThumbprint { get; set; }
        
    }
}
