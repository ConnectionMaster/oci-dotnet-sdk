/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.ApiaccesscontrolService.Models
{
    /// <summary>
    /// An Oracle operator raises privilegedApi request when they need access to any infrastructure resource governed by PrivilegedApi Access Control.
    ///   The privilegedApi request identifies the target resource and the set of operator actions. Access request handling depends upon the Operator Control 
    ///   that governs the target resource, and the set of operator actions listed for approval in the access request. If all of the operator actions 
    ///   listed in the privilegedApi request are in the pre-approved list in the PrivilegedApi Control that governs the target resource, then the privilegedApi request is 
    ///   automatically approved. If not, then the privilegedApi request requires explicit approval from the approver group specified by the PrivilegedApi Control governing the target resource.
    /// <br/>
    /// You can approve or reject an privilegedApi request. You can also revoke the approval of an already approved privilegedApi request. While creating an access request, 
    ///   the operator specifies the duration of access. You have the option to approve the entire duration or reduce or even increase the time duration. 
    ///   An operator can also request for an extension. The approval for such an extension is processed the same way the original privilegedApi request was processed.
    /// 
    /// </summary>
    public class PrivilegedApiRequest 
    {
        
        /// <value>
        /// The OCID of the privilegedApi request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// Name of the privilegedApi control. The name must be unique.
        /// </value>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// This is an automatic identifier generated by the system which is easier for human comprehension.
        /// </value>
        [JsonProperty(PropertyName = "requestId")]
        public string RequestId { get; set; }
        
        /// <value>
        /// Summary comment by the operator creating the access request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ReasonSummary is required.")]
        [JsonProperty(PropertyName = "reasonSummary")]
        public string ReasonSummary { get; set; }
        
        /// <value>
        /// The OCID of the OCI Notification topic to publish messages related to this privileged api request.
        /// </value>
        [JsonProperty(PropertyName = "notificationTopicId")]
        public string NotificationTopicId { get; set; }
        
        /// <value>
        /// List of Users who has created this privilegedApiRequest.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "requestedBy")]
        public System.Collections.Generic.List<string> RequestedBy { get; set; }
        
        /// <value>
        /// resourceName for which the PrivilegedApiRequest is applicable
        /// </value>
        [JsonProperty(PropertyName = "resourceName")]
        public string ResourceName { get; set; }
        
        /// <value>
        /// The OCID of the target resource associated with the access request. The operator raises an access request to get approval to access the target resource.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ResourceId is required.")]
        [JsonProperty(PropertyName = "resourceId")]
        public string ResourceId { get; set; }
        
        /// <value>
        /// The subresource names requested for approval.
        /// </value>
        [JsonProperty(PropertyName = "subResourceNameList")]
        public System.Collections.Generic.List<string> SubResourceNameList { get; set; }
        
        /// <value>
        /// The OCID of the compartment that contains the access request.
        /// </value>
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// resourceType for which the AccessRequest is applicable
        /// </value>
        [JsonProperty(PropertyName = "resourceType")]
        public string ResourceType { get; set; }
        
        /// <value>
        /// entityType of resource for which the AccessRequest is applicable
        /// </value>
        [JsonProperty(PropertyName = "entityType")]
        public string EntityType { get; set; }
        
        /// <value>
        /// List of api names, attributes for which approval is sought by the user.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "privilegedOperationList")]
        public System.Collections.Generic.List<PrivilegedApiRequestOperationDetails> PrivilegedOperationList { get; set; }
        
        /// <value>
        /// Reason in Detail for which the operator is requesting access on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "reasonDetail")]
        public string ReasonDetail { get; set; }
        
        /// <value>
        /// Priority assigned to the access request by the operator
        /// </value>
        [JsonProperty(PropertyName = "severity")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<PrivilegedApiRequestSeverity> Severity { get; set; }
        
        /// <value>
        /// Duration in hours for which access is sought on the target resource.
        /// </value>
        [JsonProperty(PropertyName = "durationInHrs")]
        public System.Nullable<int> DurationInHrs { get; set; }
        
        /// <value>
        /// A list of ticket numbers related to this Privileged Api Access Request, e.g. Service Request (SR) number and JIRA ticket number.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "ticketNumbers")]
        public System.Collections.Generic.List<string> TicketNumbers { get; set; }
                ///
        /// <value>
        /// The current state of the Access Request.
        /// </value>
        ///
        public enum StateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "CREATED")]
            Created,
            [EnumMember(Value = "APPROVAL_WAITING")]
            ApprovalWaiting,
            [EnumMember(Value = "APPROVED")]
            Approved,
            [EnumMember(Value = "APPROVED_FOR_FUTURE")]
            ApprovedForFuture,
            [EnumMember(Value = "REJECTED")]
            Rejected,
            [EnumMember(Value = "DEPLOYED")]
            Deployed,
            [EnumMember(Value = "DEPLOY_FAILED")]
            DeployFailed,
            [EnumMember(Value = "CLOSE_FAILED")]
            CloseFailed,
            [EnumMember(Value = "REVOKE_FAILED")]
            RevokeFailed,
            [EnumMember(Value = "EXPIRY_FAILED")]
            ExpiryFailed,
            [EnumMember(Value = "REVOKING")]
            Revoking,
            [EnumMember(Value = "REVOKED")]
            Revoked,
            [EnumMember(Value = "CLOSING")]
            Closing,
            [EnumMember(Value = "CLOSED")]
            Closed,
            [EnumMember(Value = "EXPIRED")]
            Expired
        };

        /// <value>
        /// The current state of the Access Request.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "State is required.")]
        [JsonProperty(PropertyName = "state")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<StateEnum> State { get; set; }
        
        /// <value>
        /// A message that describes the current state of the PrivilegedApiControl in more detail. For example,
        /// can be used to provide actionable information for a resource in the Failed state.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "stateDetails")]
        public string StateDetails { get; set; }
                ///
        /// <value>
        /// The current state of the PrivilegedApiRequest.
        /// </value>
        ///
        public enum LifecycleStateEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "ACCEPTED")]
            Accepted,
            [EnumMember(Value = "IN_PROGRESS")]
            InProgress,
            [EnumMember(Value = "WAITING")]
            Waiting,
            [EnumMember(Value = "FAILED")]
            Failed,
            [EnumMember(Value = "SUCCEEDED")]
            Succeeded,
            [EnumMember(Value = "CANCELING")]
            Canceling,
            [EnumMember(Value = "CANCELED")]
            Canceled,
            [EnumMember(Value = "NEEDS_ATTENTION")]
            NeedsAttention
        };

        /// <value>
        /// The current state of the PrivilegedApiRequest.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleStateEnum> LifecycleState { get; set; }
        
        /// <value>
        /// more in detail about the lifeCycleState.
        /// </value>
        [JsonProperty(PropertyName = "lifecycleDetails")]
        public string LifecycleDetails { get; set; }
        
        /// <value>
        /// Time when the privilegedApi request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// Time when the privilegedApi request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeUpdated")]
        public System.Nullable<System.DateTime> TimeUpdated { get; set; }
        
        /// <value>
        /// The comment entered by the operator while closing the request.
        /// </value>
        [JsonProperty(PropertyName = "closureComment")]
        public string ClosureComment { get; set; }
        
        /// <value>
        /// The OCID of the privilegedApi control governing the target resource.
        /// </value>
        [JsonProperty(PropertyName = "privilegedApiControlId")]
        public string PrivilegedApiControlId { get; set; }
        
        /// <value>
        /// Name of the privilegedApi control governing the target resource.
        /// </value>
        [JsonProperty(PropertyName = "privilegedApiControlName")]
        public string PrivilegedApiControlName { get; set; }
        
        /// <value>
        /// Number of approvers required to approve an privilegedApi request.
        /// </value>
        [JsonProperty(PropertyName = "numberOfApproversRequired")]
        public System.Nullable<int> NumberOfApproversRequired { get; set; }
        
        /// <value>
        /// Contains the approver details who have approved the privilegedApi Request during the initial request.
        /// </value>
        [JsonProperty(PropertyName = "approverDetails")]
        public System.Collections.Generic.List<ApproverDetail> ApproverDetails { get; set; }
        
        /// <value>
        /// Time in future when the user for the privilegedApi request needs to be created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format. Example: '2020-05-22T21:10:29.600Z'
        /// </value>
        [JsonProperty(PropertyName = "timeRequestedForFutureAccess")]
        public System.Nullable<System.DateTime> TimeRequestedForFutureAccess { get; set; }
        
        /// <value>
        /// Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Department&quot;: &quot;Finance&quot;}
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
        /// <br/>
        /// Example: {&quot;Operations&quot;: {&quot;CostCenter&quot;: &quot;42&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// <br/>
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
