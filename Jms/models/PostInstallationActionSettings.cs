/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// List of available post actions you can execute after the successful Java installation.
    /// 
    /// </summary>
    public class PostInstallationActionSettings 
    {
        
        /// <value>
        /// The following post JRE installation actions are supported by the field:
        /// - Disable TLS 1.0 , TLS 1.1
        /// 
        /// </value>
        [JsonProperty(PropertyName = "disabledTlsVersions")]
        public System.Collections.Generic.List<TlsVersions> DisabledTlsVersions { get; set; }
        
        /// <value>
        /// Restores JDK root certificates with the certificates that are available in the operating system.
        /// The following action is supported by the field:
        /// - Replace JDK root certificates with a list provided by the operating system.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "shouldReplaceCertificatesOperatingSystem")]
        public System.Nullable<bool> ShouldReplaceCertificatesOperatingSystem { get; set; }
        
        [JsonProperty(PropertyName = "minimumKeySizeSettings")]
        public MinimumKeySizeSettings MinimumKeySizeSettings { get; set; }
        
        /// <value>
        /// Sets FileHandler and ConsoleHandler as handlers in logging.properties file.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "addLoggingHandler")]
        public System.Nullable<bool> AddLoggingHandler { get; set; }
        
        /// <value>
        /// Sets the logging level in logging.properties file.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "globalLoggingLevel")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<GlobalLoggingLevel> GlobalLoggingLevel { get; set; }
        
        [JsonProperty(PropertyName = "proxies")]
        public Proxies Proxies { get; set; }
        
    }
}
