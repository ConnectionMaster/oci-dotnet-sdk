/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// Inventory of libraries in a fleet during a specified time period.
    /// </summary>
    public class LibraryInventory 
    {
        
        /// <value>
        /// The count of libraries which are detected statically.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "StaticallyDetectedLibraryCount is required.")]
        [JsonProperty(PropertyName = "staticallyDetectedLibraryCount")]
        public System.Nullable<int> StaticallyDetectedLibraryCount { get; set; }
        
        /// <value>
        /// The count of libraries which are detected dynamically.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DynamicallyDetectedLibraryCount is required.")]
        [JsonProperty(PropertyName = "dynamicallyDetectedLibraryCount")]
        public System.Nullable<int> DynamicallyDetectedLibraryCount { get; set; }
        
        /// <value>
        /// The count of packages which are detected but not correlated to any libraries.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "UncorrelatedPackageCount is required.")]
        [JsonProperty(PropertyName = "uncorrelatedPackageCount")]
        public System.Nullable<int> UncorrelatedPackageCount { get; set; }
        
        /// <value>
        /// The count of libraries with high severity vulnerabilities.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "HighSeverityLibraryCount is required.")]
        [JsonProperty(PropertyName = "highSeverityLibraryCount")]
        public System.Nullable<int> HighSeverityLibraryCount { get; set; }
        
        /// <value>
        /// The count of libraries with medium severity vulnerabilities.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "MediumSeverityLibraryCount is required.")]
        [JsonProperty(PropertyName = "mediumSeverityLibraryCount")]
        public System.Nullable<int> MediumSeverityLibraryCount { get; set; }
        
        /// <value>
        /// The count of libraries with low severity vulnerabilities.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LowSeverityLibraryCount is required.")]
        [JsonProperty(PropertyName = "lowSeverityLibraryCount")]
        public System.Nullable<int> LowSeverityLibraryCount { get; set; }
        
    }
}
