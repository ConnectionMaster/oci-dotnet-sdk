/*
 * Copyright (c) 2020, 2023, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// Summary of a Java migration analysis result. The output of the analysis is stored in the Object Storage object.
    /// </summary>
    public class JavaMigrationAnalysisResultSummary 
    {
        
        /// <value>
        /// The OCID of the migration analysis report.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The OCID of the work request of this analysis.
        /// </value>
        [JsonProperty(PropertyName = "workRequestId")]
        public string WorkRequestId { get; set; }
        
        /// <value>
        /// The fleet OCID.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "FleetId is required.")]
        [JsonProperty(PropertyName = "fleetId")]
        public string FleetId { get; set; }
        
        /// <value>
        /// The unique key that identifies the application.
        /// </value>
        [JsonProperty(PropertyName = "applicationKey")]
        public string ApplicationKey { get; set; }
        
        /// <value>
        /// The name of the application for which the Java migration analysis was performed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApplicationName is required.")]
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }
        
        /// <value>
        /// The installation path of the application for which the Java migration analysis was performed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApplicationPath is required.")]
        [JsonProperty(PropertyName = "applicationPath")]
        public string ApplicationPath { get; set; }
        
        /// <value>
        /// Execution type of the application for an application type, such as WAR and EAR, that is deployed or installed.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApplicationExecutionType is required.")]
        [JsonProperty(PropertyName = "applicationExecutionType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ApplicationExecutionType> ApplicationExecutionType { get; set; }
        
        /// <value>
        /// The source JDK version of the application that's currently running.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "SourceJdkVersion is required.")]
        [JsonProperty(PropertyName = "sourceJdkVersion")]
        public string SourceJdkVersion { get; set; }
        
        /// <value>
        /// The target JDK version of the application to be migrated.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetJdkVersion is required.")]
        [JsonProperty(PropertyName = "targetJdkVersion")]
        public string TargetJdkVersion { get; set; }
        
        /// <value>
        /// The managed instance OCID.
        /// </value>
        [JsonProperty(PropertyName = "managedInstanceId")]
        public string ManagedInstanceId { get; set; }
        
        /// <value>
        /// The hostname of the managed instance that hosts the application for which the Java migration analysis was performed.
        /// </value>
        [JsonProperty(PropertyName = "hostName")]
        public string HostName { get; set; }
        
        /// <value>
        /// The time the result is compiled.
        /// </value>
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The object storage namespace that contains the results of the migration analysis.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Namespace is required.")]
        [JsonProperty(PropertyName = "namespace")]
        public string Namespace { get; set; }
        
        /// <value>
        /// The name of the object storage bucket that contains the results of the migration analysis.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "BucketName is required.")]
        [JsonProperty(PropertyName = "bucketName")]
        public string BucketName { get; set; }
        
        /// <value>
        /// The directory path of the object storage bucket that contains the results of the migration analysis.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ObjectStorageUploadDirPath is required.")]
        [JsonProperty(PropertyName = "objectStorageUploadDirPath")]
        public string ObjectStorageUploadDirPath { get; set; }
        
        /// <value>
        /// The names of the object storage objects that contain the results of the migration analysis.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ObjectList is required.")]
        [JsonProperty(PropertyName = "objectList")]
        public System.Collections.Generic.List<string> ObjectList { get; set; }
        
        /// <value>
        /// Additional info reserved for future use.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Metadata is required.")]
        [JsonProperty(PropertyName = "metadata")]
        public string Metadata { get; set; }
        
    }
}
