/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// The state of the cluster during a specified time period.
    /// </summary>
    public class ClusterDetails 
    {
                ///
        /// <value>
        /// The type of the cluster.
        /// </value>
        ///
        public enum ClusterTypeEnum {
            /// This value is used if a service returns a value for this enum that is not recognized by this version of the SDK.
            [EnumMember(Value = null)]
            UnknownEnumValue,
            [EnumMember(Value = "OKE")]
            Oke,
            [EnumMember(Value = "OTHER")]
            Other
        };

        /// <value>
        /// The type of the cluster.
        /// </value>
        [JsonProperty(PropertyName = "clusterType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ClusterTypeEnum> ClusterType { get; set; }
        
        /// <value>
        /// Number of nodes as reported in the last cluster scan
        /// </value>
        [JsonProperty(PropertyName = "nodeCount")]
        public System.Nullable<int> NodeCount { get; set; }
        
        /// <value>
        /// Number of pods as reported in the last cluster scan
        /// </value>
        [JsonProperty(PropertyName = "podCount")]
        public System.Nullable<int> PodCount { get; set; }
        
        /// <value>
        /// Number of containers as reported in the last cluster scan
        /// </value>
        [JsonProperty(PropertyName = "containerCount")]
        public System.Nullable<int> ContainerCount { get; set; }
        
    }
}
