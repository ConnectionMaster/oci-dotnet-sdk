/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// Attributes to generate load pipeline script.
    /// </summary>
    public class GenerateLoadPipelineScriptDetails 
    {
        
        /// <value>
        /// The name of the bucket where data will be exported.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetBucketName is required.")]
        [JsonProperty(PropertyName = "targetBucketName")]
        public string TargetBucketName { get; set; }
        
        /// <value>
        /// The namespace of the bucket where data will be exported.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetBucketNamespace is required.")]
        [JsonProperty(PropertyName = "targetBucketNamespace")]
        public string TargetBucketNamespace { get; set; }
        
        /// <value>
        /// The id of the region of the target bucket.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TargetBucketRegion is required.")]
        [JsonProperty(PropertyName = "targetBucketRegion")]
        public string TargetBucketRegion { get; set; }
        
        /// <value>
        /// The time internal in minutes between consecutive executions of scheduled pipeline job.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "intervalMinutes")]
        public System.Nullable<int> IntervalMinutes { get; set; }
        
    }
}
