/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// A Fleet is the primary collection with which users interact when using Java Management Service.
    /// 
    /// </summary>
    public class Fleet 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the Fleet.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Id is required.")]
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }
        
        /// <value>
        /// The name of the Fleet.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The Fleet's description.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Description is required.")]
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment of the Fleet.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "CompartmentId is required.")]
        [JsonProperty(PropertyName = "compartmentId")]
        public string CompartmentId { get; set; }
        
        /// <value>
        /// The approximate count of all unique Java Runtimes in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateJreCount is required.")]
        [JsonProperty(PropertyName = "approximateJreCount")]
        public System.Nullable<int> ApproximateJreCount { get; set; }
        
        /// <value>
        /// The approximate count of all unique Java installations in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateInstallationCount is required.")]
        [JsonProperty(PropertyName = "approximateInstallationCount")]
        public System.Nullable<int> ApproximateInstallationCount { get; set; }
        
        /// <value>
        /// The approximate count of all unique applications in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateApplicationCount is required.")]
        [JsonProperty(PropertyName = "approximateApplicationCount")]
        public System.Nullable<int> ApproximateApplicationCount { get; set; }
        
        /// <value>
        /// The approximate count of all unique managed instances in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateManagedInstanceCount is required.")]
        [JsonProperty(PropertyName = "approximateManagedInstanceCount")]
        public System.Nullable<int> ApproximateManagedInstanceCount { get; set; }
        
        /// <value>
        /// The approximate count of all unique Java servers in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateJavaServerCount is required.")]
        [JsonProperty(PropertyName = "approximateJavaServerCount")]
        public System.Nullable<int> ApproximateJavaServerCount { get; set; }
        
        /// <value>
        /// The approximate count of all unique libraries in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateLibraryCount is required.")]
        [JsonProperty(PropertyName = "approximateLibraryCount")]
        public System.Nullable<int> ApproximateLibraryCount { get; set; }
        
        /// <value>
        /// The approximate count of all unique library vulnerabilities in the Fleet in the past seven days.
        /// This metric is provided on a best-effort manner, and isn't taken into account when computing the resource ETag.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApproximateLibraryVulnerabilityCount is required.")]
        [JsonProperty(PropertyName = "approximateLibraryVulnerabilityCount")]
        public System.Nullable<int> ApproximateLibraryVulnerabilityCount { get; set; }
        
        [JsonProperty(PropertyName = "inventoryLog")]
        public CustomLog InventoryLog { get; set; }
        
        [JsonProperty(PropertyName = "operationLog")]
        public CustomLog OperationLog { get; set; }
        
        /// <value>
        /// Whether or not advanced features are enabled in this Fleet.
        /// Deprecated, use `/fleets/{fleetId}/advanceFeatureConfiguration` API instead.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isAdvancedFeaturesEnabled")]
        public System.Nullable<bool> IsAdvancedFeaturesEnabled { get; set; }
        
        /// <value>
        /// Whether or not export setting is enabled in this Fleet.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "isExportSettingEnabled")]
        public System.Nullable<bool> IsExportSettingEnabled { get; set; }
        
        /// <value>
        /// The creation date and time of the Fleet (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "TimeCreated is required.")]
        [JsonProperty(PropertyName = "timeCreated")]
        public System.Nullable<System.DateTime> TimeCreated { get; set; }
        
        /// <value>
        /// The lifecycle state of the Fleet.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LifecycleState is required.")]
        [JsonProperty(PropertyName = "lifecycleState")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<LifecycleState> LifecycleState { get; set; }
        
        /// <value>
        /// Defined tags for this resource. Each key is predefined and scoped to a namespace.
        /// Example: {&quot;foo-namespace&quot;: {&quot;bar-key&quot;: &quot;value&quot;}}. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
        /// </value>
        [JsonProperty(PropertyName = "definedTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> DefinedTags { get; set; }
        
        /// <value>
        /// Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.
        /// Example: {&quot;bar-key&quot;: &quot;value&quot;}. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/Content/Tagging/Concepts/understandingfreeformtags.htm).)
        /// </value>
        [JsonProperty(PropertyName = "freeformTags")]
        public System.Collections.Generic.Dictionary<string, string> FreeformTags { get; set; }
        
        /// <value>
        /// System tags for this resource. Each key is predefined and scoped to a namespace.
        /// For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
        /// System tags can be viewed by users, but can only be created by the system.
        /// <br/>
        /// Example: {&quot;orcl-cloud&quot;: {&quot;free-tier-retained&quot;: &quot;true&quot;}}
        /// </value>
        [JsonProperty(PropertyName = "systemTags")]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, System.Object>> SystemTags { get; set; }
        
    }
}
