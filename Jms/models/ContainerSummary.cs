/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// Information about a container in the cluster.
    /// 
    /// </summary>
    public class ContainerSummary 
    {
        
        /// <value>
        /// Unique identifier for the container.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ContainerKey is required.")]
        [JsonProperty(PropertyName = "containerKey")]
        public string ContainerKey { get; set; }
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the associated managed instance of type OCMA.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ManagedInstanceId is required.")]
        [JsonProperty(PropertyName = "managedInstanceId")]
        public string ManagedInstanceId { get; set; }
        
        /// <value>
        /// The name of the container.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "DisplayName is required.")]
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }
        
        /// <value>
        /// The container image name.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ImageName is required.")]
        [JsonProperty(PropertyName = "imageName")]
        public string ImageName { get; set; }
        
        /// <value>
        /// The namespace of the container.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "Namespace is required.")]
        [JsonProperty(PropertyName = "namespace")]
        public string Namespace { get; set; }
        
        /// <value>
        /// The name of the node associated with the pod running this container.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "NodeName is required.")]
        [JsonProperty(PropertyName = "nodeName")]
        public string NodeName { get; set; }
        
        /// <value>
        /// The name of the pod running this container.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "PodName is required.")]
        [JsonProperty(PropertyName = "podName")]
        public string PodName { get; set; }
        
        /// <value>
        /// Unique key that identifies the application running in the container.
        /// </value>
        [JsonProperty(PropertyName = "applicationKey")]
        public string ApplicationKey { get; set; }
        
        /// <value>
        /// The name of the application running in the container.
        /// </value>
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }
        
        /// <value>
        /// Unique key that identifies the Java runtime used to run the application in the container.
        /// </value>
        [JsonProperty(PropertyName = "jreKey")]
        public string JreKey { get; set; }
        
        /// <value>
        /// The Java runtime used to run the application in the container.
        /// </value>
        [JsonProperty(PropertyName = "javaVersion")]
        public string JavaVersion { get; set; }
        
        /// <value>
        /// The security status of the Java runtime used to run the application in the container.
        /// </value>
        [JsonProperty(PropertyName = "jreSecurityStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<JreSecurityStatus> JreSecurityStatus { get; set; }
        
        /// <value>
        /// The start time of the container.
        /// </value>
        [JsonProperty(PropertyName = "timeStarted")]
        public System.Nullable<System.DateTime> TimeStarted { get; set; }
        
    }
}
