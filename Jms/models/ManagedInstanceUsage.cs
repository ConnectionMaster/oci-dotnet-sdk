/*
 * Copyright (c) 2020, 2024, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// Managed instance usage during a specified time period.
    /// An entity that emits usage events to Java Management Service (JMS) is represented as a managed instance.
    /// A managed instance has a unique identity which is used by JMS to distinguish it from other managed instances.
    /// Currently, JMS supports only one kind of managed instance, a Management Agent.
    /// 
    /// </summary>
    public class ManagedInstanceUsage 
    {
        
        /// <value>
        /// The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the related managed instance.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ManagedInstanceId is required.")]
        [JsonProperty(PropertyName = "managedInstanceId")]
        public string ManagedInstanceId { get; set; }
        
        /// <value>
        /// The type of the source of events.
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ManagedInstanceType is required.")]
        [JsonProperty(PropertyName = "managedInstanceType")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<ManagedInstanceType> ManagedInstanceType { get; set; }
        
        /// <value>
        /// The hostname of the managed instance (if applicable).
        /// </value>
        [JsonProperty(PropertyName = "hostname")]
        public string Hostname { get; set; }
        
        /// <value>
        /// The host [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the related managed instance.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "hostId")]
        public string HostId { get; set; }
        
        [JsonProperty(PropertyName = "operatingSystem")]
        public OperatingSystem OperatingSystem { get; set; }
        
        [JsonProperty(PropertyName = "agent")]
        public Agent Agent { get; set; }
        
        /// <value>
        /// The approximate count of applications reported by this managed instance.
        /// </value>
        [JsonProperty(PropertyName = "approximateApplicationCount")]
        public System.Nullable<int> ApproximateApplicationCount { get; set; }
        
        /// <value>
        /// The approximate count of installations reported by this managed instance.
        /// </value>
        [JsonProperty(PropertyName = "approximateInstallationCount")]
        public System.Nullable<int> ApproximateInstallationCount { get; set; }
        
        /// <value>
        /// The approximate count of Java Runtimes reported by this managed instance.
        /// </value>
        [JsonProperty(PropertyName = "approximateJreCount")]
        public System.Nullable<int> ApproximateJreCount { get; set; }
        
        /// <value>
        /// DRS file status
        /// </value>
        [JsonProperty(PropertyName = "drsFileStatus")]
        [JsonConverter(typeof(Oci.Common.Utils.ResponseEnumConverter))]
        public System.Nullable<DrsFileStatus> DrsFileStatus { get; set; }
        
        /// <value>
        /// Comma separated list of user names that invoked applications within this managed instance.
        /// </value>
        [JsonProperty(PropertyName = "applicationInvokedBy")]
        public string ApplicationInvokedBy { get; set; }
        
        /// <value>
        /// Lower bound of the specified time period filter. JMS provides a view of the data that is _per day_. The query uses only the date element of the parameter.
        /// </value>
        [JsonProperty(PropertyName = "timeStart")]
        public System.Nullable<System.DateTime> TimeStart { get; set; }
        
        /// <value>
        /// Upper bound of the specified time period filter. JMS provides a view of the data that is _per day_. The query uses only the date element of the parameter.
        /// </value>
        [JsonProperty(PropertyName = "timeEnd")]
        public System.Nullable<System.DateTime> TimeEnd { get; set; }
        
        /// <value>
        /// The date and time the resource was _first_ reported to JMS.
        /// This is potentially _before_ the specified time period provided by the filters.
        /// For example, a resource can be first reported to JMS before the start of a specified time period,
        /// if it is also reported during the time period.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeFirstSeen")]
        public System.Nullable<System.DateTime> TimeFirstSeen { get; set; }
        
        /// <value>
        /// The date and time the resource was _last_ reported to JMS.
        /// This is potentially _after_ the specified time period provided by the filters.
        /// For example, a resource can be last reported to JMS before the start of a specified time period,
        /// if it is also reported during the time period.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLastSeen")]
        public System.Nullable<System.DateTime> TimeLastSeen { get; set; }
        
    }
}
