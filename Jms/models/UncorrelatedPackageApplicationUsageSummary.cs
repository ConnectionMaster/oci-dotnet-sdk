/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.JmsService.Models
{
    /// <summary>
    /// Summary of an application where a given libary was detected. Contains the count of managed instances where the package was detected with this application.
    /// 
    /// </summary>
    public class UncorrelatedPackageApplicationUsageSummary 
    {
        
        /// <value>
        /// The internal identifier of a Java application.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApplicationKey is required.")]
        [JsonProperty(PropertyName = "applicationKey")]
        public string ApplicationKey { get; set; }
        
        /// <value>
        /// The displayed name of the Java application.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ApplicationName is required.")]
        [JsonProperty(PropertyName = "applicationName")]
        public string ApplicationName { get; set; }
        
        /// <value>
        /// The count of managed instances wherein the specified library was detected.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "ManagedInstanceCount is required.")]
        [JsonProperty(PropertyName = "managedInstanceCount")]
        public System.Nullable<int> ManagedInstanceCount { get; set; }
        
        /// <value>
        /// The date and time a library or Java package was _last_ detected in a dynamic library scan.
        /// 
        /// </value>
        /// <remarks>
        /// Required
        /// </remarks>
        [Required(ErrorMessage = "LastDetectedDynamically is required.")]
        [JsonProperty(PropertyName = "lastDetectedDynamically")]
        public System.Nullable<System.DateTime> LastDetectedDynamically { get; set; }
        
    }
}
