/*
 * Copyright (c) 2020, 2025, Oracle and/or its affiliates. All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

// NOTE: Code generated by OracleSDKGenerator.
// DO NOT EDIT this file manually.


using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


namespace Oci.DataflowService.Models
{
    /// <summary>
    /// A collection of metrics related to a particular pool.
    /// 
    /// </summary>
    public class PoolMetrics 
    {
        
        /// <value>
        /// The last time this pool was started.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLastStarted")]
        public System.Nullable<System.DateTime> TimeLastStarted { get; set; }
        
        /// <value>
        /// The last time this pool was stopped.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLastStopped")]
        public System.Nullable<System.DateTime> TimeLastStopped { get; set; }
        
        /// <value>
        /// The last time a run used this pool.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLastUsed")]
        public System.Nullable<System.DateTime> TimeLastUsed { get; set; }
        
        /// <value>
        /// The last time the mertics were updated for this.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "timeLastMetricsUpdated")]
        public System.Nullable<System.DateTime> TimeLastMetricsUpdated { get; set; }
        
        /// <value>
        /// The number of runs that are currently running that are using this pool.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "activeRunsCount")]
        public System.Nullable<long> ActiveRunsCount { get; set; }
        
        /// <value>
        /// A count of the nodes that are currently being used for each shape in this pool.
        /// 
        /// </value>
        [JsonProperty(PropertyName = "activelyUsedNodeCount")]
        public System.Collections.Generic.List<NodeCount> ActivelyUsedNodeCount { get; set; }
        
    }
}
